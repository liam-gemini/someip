// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_ap/WM_display_realtime.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto_ap/base.pb.h"
#include "proto_ap/online_local_map_fusion.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[18]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
namespace SRprotobuf {
class ApDrivingData;
class ApDrivingDataDefaultTypeInternal;
extern ApDrivingDataDefaultTypeInternal _ApDrivingData_default_instance_;
class ApDynaObject;
class ApDynaObjectDefaultTypeInternal;
extern ApDynaObjectDefaultTypeInternal _ApDynaObject_default_instance_;
class ApEssentialMsg;
class ApEssentialMsgDefaultTypeInternal;
extern ApEssentialMsgDefaultTypeInternal _ApEssentialMsg_default_instance_;
class ApLaneLineInfo;
class ApLaneLineInfoDefaultTypeInternal;
extern ApLaneLineInfoDefaultTypeInternal _ApLaneLineInfo_default_instance_;
class ApNaviMsg;
class ApNaviMsgDefaultTypeInternal;
extern ApNaviMsgDefaultTypeInternal _ApNaviMsg_default_instance_;
class ApPathPoint;
class ApPathPointDefaultTypeInternal;
extern ApPathPointDefaultTypeInternal _ApPathPoint_default_instance_;
class ApTrajectoryDataType;
class ApTrajectoryDataTypeDefaultTypeInternal;
extern ApTrajectoryDataTypeDefaultTypeInternal _ApTrajectoryDataType_default_instance_;
class Ap_StaticObject;
class Ap_StaticObjectDefaultTypeInternal;
extern Ap_StaticObjectDefaultTypeInternal _Ap_StaticObject_default_instance_;
class Ap_StaticObjectPoint;
class Ap_StaticObjectPointDefaultTypeInternal;
extern Ap_StaticObjectPointDefaultTypeInternal _Ap_StaticObjectPoint_default_instance_;
class BDistancePercent;
class BDistancePercentDefaultTypeInternal;
extern BDistancePercentDefaultTypeInternal _BDistancePercent_default_instance_;
class BevPillar;
class BevPillarDefaultTypeInternal;
extern BevPillarDefaultTypeInternal _BevPillar_default_instance_;
class OccupancyNetParkingMsg;
class OccupancyNetParkingMsgDefaultTypeInternal;
extern OccupancyNetParkingMsgDefaultTypeInternal _OccupancyNetParkingMsg_default_instance_;
class PkoutTerminationInfo;
class PkoutTerminationInfoDefaultTypeInternal;
extern PkoutTerminationInfoDefaultTypeInternal _PkoutTerminationInfo_default_instance_;
class RTFStatusMsg;
class RTFStatusMsgDefaultTypeInternal;
extern RTFStatusMsgDefaultTypeInternal _RTFStatusMsg_default_instance_;
class SlotIdMapping;
class SlotIdMappingDefaultTypeInternal;
extern SlotIdMappingDefaultTypeInternal _SlotIdMapping_default_instance_;
class StripObstacle;
class StripObstacleDefaultTypeInternal;
extern StripObstacleDefaultTypeInternal _StripObstacle_default_instance_;
class TrainingSpdBump;
class TrainingSpdBumpDefaultTypeInternal;
extern TrainingSpdBumpDefaultTypeInternal _TrainingSpdBump_default_instance_;
class Wall;
class WallDefaultTypeInternal;
extern WallDefaultTypeInternal _Wall_default_instance_;
}  // namespace SRprotobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::SRprotobuf::ApDrivingData* Arena::CreateMaybeMessage<::SRprotobuf::ApDrivingData>(Arena*);
template<> ::SRprotobuf::ApDynaObject* Arena::CreateMaybeMessage<::SRprotobuf::ApDynaObject>(Arena*);
template<> ::SRprotobuf::ApEssentialMsg* Arena::CreateMaybeMessage<::SRprotobuf::ApEssentialMsg>(Arena*);
template<> ::SRprotobuf::ApLaneLineInfo* Arena::CreateMaybeMessage<::SRprotobuf::ApLaneLineInfo>(Arena*);
template<> ::SRprotobuf::ApNaviMsg* Arena::CreateMaybeMessage<::SRprotobuf::ApNaviMsg>(Arena*);
template<> ::SRprotobuf::ApPathPoint* Arena::CreateMaybeMessage<::SRprotobuf::ApPathPoint>(Arena*);
template<> ::SRprotobuf::ApTrajectoryDataType* Arena::CreateMaybeMessage<::SRprotobuf::ApTrajectoryDataType>(Arena*);
template<> ::SRprotobuf::Ap_StaticObject* Arena::CreateMaybeMessage<::SRprotobuf::Ap_StaticObject>(Arena*);
template<> ::SRprotobuf::Ap_StaticObjectPoint* Arena::CreateMaybeMessage<::SRprotobuf::Ap_StaticObjectPoint>(Arena*);
template<> ::SRprotobuf::BDistancePercent* Arena::CreateMaybeMessage<::SRprotobuf::BDistancePercent>(Arena*);
template<> ::SRprotobuf::BevPillar* Arena::CreateMaybeMessage<::SRprotobuf::BevPillar>(Arena*);
template<> ::SRprotobuf::OccupancyNetParkingMsg* Arena::CreateMaybeMessage<::SRprotobuf::OccupancyNetParkingMsg>(Arena*);
template<> ::SRprotobuf::PkoutTerminationInfo* Arena::CreateMaybeMessage<::SRprotobuf::PkoutTerminationInfo>(Arena*);
template<> ::SRprotobuf::RTFStatusMsg* Arena::CreateMaybeMessage<::SRprotobuf::RTFStatusMsg>(Arena*);
template<> ::SRprotobuf::SlotIdMapping* Arena::CreateMaybeMessage<::SRprotobuf::SlotIdMapping>(Arena*);
template<> ::SRprotobuf::StripObstacle* Arena::CreateMaybeMessage<::SRprotobuf::StripObstacle>(Arena*);
template<> ::SRprotobuf::TrainingSpdBump* Arena::CreateMaybeMessage<::SRprotobuf::TrainingSpdBump>(Arena*);
template<> ::SRprotobuf::Wall* Arena::CreateMaybeMessage<::SRprotobuf::Wall>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace SRprotobuf {

enum ApTrajectoryDataType_ApTrajType : int {
  ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_UNKNOWN = 0,
  ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_B = 1,
  ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_real_ap_plan = 2,
  ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_global = 3,
  ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_RTF_global = 4,
  ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_RTF_planning = 5,
  ApTrajectoryDataType_ApTrajType_ApTrajectoryDataType_ApTrajType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ApTrajectoryDataType_ApTrajType_ApTrajectoryDataType_ApTrajType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ApTrajectoryDataType_ApTrajType_IsValid(int value);
constexpr ApTrajectoryDataType_ApTrajType ApTrajectoryDataType_ApTrajType_ApTrajType_MIN = ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_UNKNOWN;
constexpr ApTrajectoryDataType_ApTrajType ApTrajectoryDataType_ApTrajType_ApTrajType_MAX = ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_RTF_planning;
constexpr int ApTrajectoryDataType_ApTrajType_ApTrajType_ARRAYSIZE = ApTrajectoryDataType_ApTrajType_ApTrajType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApTrajectoryDataType_ApTrajType_descriptor();
template<typename T>
inline const std::string& ApTrajectoryDataType_ApTrajType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ApTrajectoryDataType_ApTrajType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ApTrajectoryDataType_ApTrajType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ApTrajectoryDataType_ApTrajType_descriptor(), enum_t_value);
}
inline bool ApTrajectoryDataType_ApTrajType_Parse(
    const std::string& name, ApTrajectoryDataType_ApTrajType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ApTrajectoryDataType_ApTrajType>(
    ApTrajectoryDataType_ApTrajType_descriptor(), name, value);
}
enum ApObjectType : int {
  OBJ_TYPE_UNKNOWN = 0,
  OBJ_TYPE_PERSON = 1,
  OBJ_TYPE_ANIMAL = 2,
  OBJ_TYPE_SEDAN = 3,
  OBJ_TYPE_SUV = 4,
  OBJ_TYPE_VAN = 5,
  OBJ_TYPE_BICYCLE = 6,
  OBJ_TYPE_TRICYCLE = 7,
  OBJ_TYPE_MOTORCYCLE = 8,
  OBJ_TYPE_TRUCK = 9,
  OBJ_TYPE_BUS = 10,
  OBJ_TYPE_PICKUP = 11,
  ApObjectType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ApObjectType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ApObjectType_IsValid(int value);
constexpr ApObjectType ApObjectType_MIN = OBJ_TYPE_UNKNOWN;
constexpr ApObjectType ApObjectType_MAX = OBJ_TYPE_PICKUP;
constexpr int ApObjectType_ARRAYSIZE = ApObjectType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApObjectType_descriptor();
template<typename T>
inline const std::string& ApObjectType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ApObjectType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ApObjectType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ApObjectType_descriptor(), enum_t_value);
}
inline bool ApObjectType_Parse(
    const std::string& name, ApObjectType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ApObjectType>(
    ApObjectType_descriptor(), name, value);
}
enum ApSignalLight : int {
  SIGNAL_LIGHT_UNKNOWN = 0,
  SIGNAL_LIGHT_LEFT = 1,
  SIGNAL_LIGHT_RIGHT = 2,
  SIGNAL_LIGHT_EMERGENCY = 3,
  SIGNAL_LIGHT_OFF = 4,
  ApSignalLight_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ApSignalLight_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ApSignalLight_IsValid(int value);
constexpr ApSignalLight ApSignalLight_MIN = SIGNAL_LIGHT_UNKNOWN;
constexpr ApSignalLight ApSignalLight_MAX = SIGNAL_LIGHT_OFF;
constexpr int ApSignalLight_ARRAYSIZE = ApSignalLight_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApSignalLight_descriptor();
template<typename T>
inline const std::string& ApSignalLight_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ApSignalLight>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ApSignalLight_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ApSignalLight_descriptor(), enum_t_value);
}
inline bool ApSignalLight_Parse(
    const std::string& name, ApSignalLight* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ApSignalLight>(
    ApSignalLight_descriptor(), name, value);
}
enum ApBrakeLight : int {
  BRAKE_LIGHT_UNKNOWN = 0,
  BRAKE_LIGHT_ON = 1,
  BRAKE_LIGHT_OFF = 2,
  ApBrakeLight_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ApBrakeLight_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ApBrakeLight_IsValid(int value);
constexpr ApBrakeLight ApBrakeLight_MIN = BRAKE_LIGHT_UNKNOWN;
constexpr ApBrakeLight ApBrakeLight_MAX = BRAKE_LIGHT_OFF;
constexpr int ApBrakeLight_ARRAYSIZE = ApBrakeLight_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ApBrakeLight_descriptor();
template<typename T>
inline const std::string& ApBrakeLight_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ApBrakeLight>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ApBrakeLight_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ApBrakeLight_descriptor(), enum_t_value);
}
inline bool ApBrakeLight_Parse(
    const std::string& name, ApBrakeLight* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ApBrakeLight>(
    ApBrakeLight_descriptor(), name, value);
}
enum AP_StaticObjectType : int {
  kWheelStopper = 0,
  kPillar = 1,
  kWall = 2,
  kCurb = 3,
  kDoor = 4,
  kHydrantBox = 5,
  kHydrant = 6,
  kBollardPost = 7,
  kTrafficCone = 8,
  kSpeedBump = 9,
  kDrainage = 10,
  kEntrance = 11,
  kBarrierGate = 12,
  kUnknown = 13,
  AP_StaticObjectType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  AP_StaticObjectType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool AP_StaticObjectType_IsValid(int value);
constexpr AP_StaticObjectType AP_StaticObjectType_MIN = kWheelStopper;
constexpr AP_StaticObjectType AP_StaticObjectType_MAX = kUnknown;
constexpr int AP_StaticObjectType_ARRAYSIZE = AP_StaticObjectType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AP_StaticObjectType_descriptor();
template<typename T>
inline const std::string& AP_StaticObjectType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AP_StaticObjectType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AP_StaticObjectType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AP_StaticObjectType_descriptor(), enum_t_value);
}
inline bool AP_StaticObjectType_Parse(
    const std::string& name, AP_StaticObjectType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AP_StaticObjectType>(
    AP_StaticObjectType_descriptor(), name, value);
}
// ===================================================================

class StripObstacle PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.StripObstacle) */ {
 public:
  inline StripObstacle() : StripObstacle(nullptr) {};
  virtual ~StripObstacle();

  StripObstacle(const StripObstacle& from);
  StripObstacle(StripObstacle&& from) noexcept
    : StripObstacle() {
    *this = ::std::move(from);
  }

  inline StripObstacle& operator=(const StripObstacle& from) {
    CopyFrom(from);
    return *this;
  }
  inline StripObstacle& operator=(StripObstacle&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StripObstacle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StripObstacle* internal_default_instance() {
    return reinterpret_cast<const StripObstacle*>(
               &_StripObstacle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StripObstacle& a, StripObstacle& b) {
    a.Swap(&b);
  }
  inline void Swap(StripObstacle* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StripObstacle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StripObstacle* New() const final {
    return CreateMaybeMessage<StripObstacle>(nullptr);
  }

  StripObstacle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StripObstacle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StripObstacle& from);
  void MergeFrom(const StripObstacle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StripObstacle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.StripObstacle";
  }
  protected:
  explicit StripObstacle(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSegmentFieldNumber = 1,
    kSizeFieldNumber = 3,
    kTypeFieldNumber = 2,
    kColorFieldNumber = 4,
    kIdFieldNumber = 5,
    kAttriFieldNumber = 6,
  };
  // repeated float segment = 1;
  int segment_size() const;
  private:
  int _internal_segment_size() const;
  public:
  void clear_segment();
  private:
  float _internal_segment(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_segment() const;
  void _internal_add_segment(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_segment();
  public:
  float segment(int index) const;
  void set_segment(int index, float value);
  void add_segment(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      segment() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_segment();

  // .SRprotobuf.Size3f size = 3;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  const ::SRprotobuf::Size3f& size() const;
  ::SRprotobuf::Size3f* release_size();
  ::SRprotobuf::Size3f* mutable_size();
  void set_allocated_size(::SRprotobuf::Size3f* size);
  private:
  const ::SRprotobuf::Size3f& _internal_size() const;
  ::SRprotobuf::Size3f* _internal_mutable_size();
  public:
  void unsafe_arena_set_allocated_size(
      ::SRprotobuf::Size3f* size);
  ::SRprotobuf::Size3f* unsafe_arena_release_size();

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 color = 4;
  void clear_color();
  ::PROTOBUF_NAMESPACE_ID::int32 color() const;
  void set_color(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_color() const;
  void _internal_set_color(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 id = 5;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 attri = 6;
  void clear_attri();
  ::PROTOBUF_NAMESPACE_ID::int32 attri() const;
  void set_attri(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attri() const;
  void _internal_set_attri(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.StripObstacle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > segment_;
  mutable std::atomic<int> _segment_cached_byte_size_;
  ::SRprotobuf::Size3f* size_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 color_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 attri_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class ApPathPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.ApPathPoint) */ {
 public:
  inline ApPathPoint() : ApPathPoint(nullptr) {};
  virtual ~ApPathPoint();

  ApPathPoint(const ApPathPoint& from);
  ApPathPoint(ApPathPoint&& from) noexcept
    : ApPathPoint() {
    *this = ::std::move(from);
  }

  inline ApPathPoint& operator=(const ApPathPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApPathPoint& operator=(ApPathPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApPathPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApPathPoint* internal_default_instance() {
    return reinterpret_cast<const ApPathPoint*>(
               &_ApPathPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ApPathPoint& a, ApPathPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(ApPathPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApPathPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApPathPoint* New() const final {
    return CreateMaybeMessage<ApPathPoint>(nullptr);
  }

  ApPathPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApPathPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApPathPoint& from);
  void MergeFrom(const ApPathPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApPathPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.ApPathPoint";
  }
  protected:
  explicit ApPathPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBasePointFieldNumber = 2,
    kFloorLevelFieldNumber = 12,
    kConfidenceFieldNumber = 1,
    kThetaFieldNumber = 3,
    kKappaFieldNumber = 4,
    kSFieldNumber = 5,
    kLeftWidthFieldNumber = 6,
    kRightWidthFieldNumber = 7,
    kDkappaFieldNumber = 8,
    kDdkappaFieldNumber = 9,
    kLaneWidthFieldNumber = 10,
    kLinkIdFieldNumber = 11,
    kHillStatusFieldNumber = 13,
  };
  // .SRprotobuf.Point3f base_point = 2;
  bool has_base_point() const;
  private:
  bool _internal_has_base_point() const;
  public:
  void clear_base_point();
  const ::SRprotobuf::Point3f& base_point() const;
  ::SRprotobuf::Point3f* release_base_point();
  ::SRprotobuf::Point3f* mutable_base_point();
  void set_allocated_base_point(::SRprotobuf::Point3f* base_point);
  private:
  const ::SRprotobuf::Point3f& _internal_base_point() const;
  ::SRprotobuf::Point3f* _internal_mutable_base_point();
  public:
  void unsafe_arena_set_allocated_base_point(
      ::SRprotobuf::Point3f* base_point);
  ::SRprotobuf::Point3f* unsafe_arena_release_base_point();

  // .SRprotobuf.FloorLevel floor_level = 12;
  bool has_floor_level() const;
  private:
  bool _internal_has_floor_level() const;
  public:
  void clear_floor_level();
  const ::SRprotobuf::FloorLevel& floor_level() const;
  ::SRprotobuf::FloorLevel* release_floor_level();
  ::SRprotobuf::FloorLevel* mutable_floor_level();
  void set_allocated_floor_level(::SRprotobuf::FloorLevel* floor_level);
  private:
  const ::SRprotobuf::FloorLevel& _internal_floor_level() const;
  ::SRprotobuf::FloorLevel* _internal_mutable_floor_level();
  public:
  void unsafe_arena_set_allocated_floor_level(
      ::SRprotobuf::FloorLevel* floor_level);
  ::SRprotobuf::FloorLevel* unsafe_arena_release_floor_level();

  // float confidence = 1;
  void clear_confidence();
  float confidence() const;
  void set_confidence(float value);
  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);
  public:

  // float theta = 3;
  void clear_theta();
  float theta() const;
  void set_theta(float value);
  private:
  float _internal_theta() const;
  void _internal_set_theta(float value);
  public:

  // float kappa = 4;
  void clear_kappa();
  float kappa() const;
  void set_kappa(float value);
  private:
  float _internal_kappa() const;
  void _internal_set_kappa(float value);
  public:

  // float s = 5;
  void clear_s();
  float s() const;
  void set_s(float value);
  private:
  float _internal_s() const;
  void _internal_set_s(float value);
  public:

  // float left_width = 6;
  void clear_left_width();
  float left_width() const;
  void set_left_width(float value);
  private:
  float _internal_left_width() const;
  void _internal_set_left_width(float value);
  public:

  // float right_width = 7;
  void clear_right_width();
  float right_width() const;
  void set_right_width(float value);
  private:
  float _internal_right_width() const;
  void _internal_set_right_width(float value);
  public:

  // float dkappa = 8;
  void clear_dkappa();
  float dkappa() const;
  void set_dkappa(float value);
  private:
  float _internal_dkappa() const;
  void _internal_set_dkappa(float value);
  public:

  // float ddkappa = 9;
  void clear_ddkappa();
  float ddkappa() const;
  void set_ddkappa(float value);
  private:
  float _internal_ddkappa() const;
  void _internal_set_ddkappa(float value);
  public:

  // float lane_width = 10;
  void clear_lane_width();
  float lane_width() const;
  void set_lane_width(float value);
  private:
  float _internal_lane_width() const;
  void _internal_set_lane_width(float value);
  public:

  // uint32 link_id = 11;
  void clear_link_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 link_id() const;
  void set_link_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_link_id() const;
  void _internal_set_link_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 hill_status = 13;
  void clear_hill_status();
  ::PROTOBUF_NAMESPACE_ID::int32 hill_status() const;
  void set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hill_status() const;
  void _internal_set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.ApPathPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::SRprotobuf::Point3f* base_point_;
  ::SRprotobuf::FloorLevel* floor_level_;
  float confidence_;
  float theta_;
  float kappa_;
  float s_;
  float left_width_;
  float right_width_;
  float dkappa_;
  float ddkappa_;
  float lane_width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 link_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 hill_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class ApLaneLineInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.ApLaneLineInfo) */ {
 public:
  inline ApLaneLineInfo() : ApLaneLineInfo(nullptr) {};
  virtual ~ApLaneLineInfo();

  ApLaneLineInfo(const ApLaneLineInfo& from);
  ApLaneLineInfo(ApLaneLineInfo&& from) noexcept
    : ApLaneLineInfo() {
    *this = ::std::move(from);
  }

  inline ApLaneLineInfo& operator=(const ApLaneLineInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApLaneLineInfo& operator=(ApLaneLineInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApLaneLineInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApLaneLineInfo* internal_default_instance() {
    return reinterpret_cast<const ApLaneLineInfo*>(
               &_ApLaneLineInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ApLaneLineInfo& a, ApLaneLineInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ApLaneLineInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApLaneLineInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApLaneLineInfo* New() const final {
    return CreateMaybeMessage<ApLaneLineInfo>(nullptr);
  }

  ApLaneLineInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApLaneLineInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApLaneLineInfo& from);
  void MergeFrom(const ApLaneLineInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApLaneLineInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.ApLaneLineInfo";
  }
  protected:
  explicit ApLaneLineInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathPointsFieldNumber = 2,
    kAttriFieldNumber = 1,
  };
  // repeated .SRprotobuf.ApPathPoint path_points = 2;
  int path_points_size() const;
  private:
  int _internal_path_points_size() const;
  public:
  void clear_path_points();
  ::SRprotobuf::ApPathPoint* mutable_path_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >*
      mutable_path_points();
  private:
  const ::SRprotobuf::ApPathPoint& _internal_path_points(int index) const;
  ::SRprotobuf::ApPathPoint* _internal_add_path_points();
  public:
  const ::SRprotobuf::ApPathPoint& path_points(int index) const;
  ::SRprotobuf::ApPathPoint* add_path_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >&
      path_points() const;

  // int32 attri = 1;
  void clear_attri();
  ::PROTOBUF_NAMESPACE_ID::int32 attri() const;
  void set_attri(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attri() const;
  void _internal_set_attri(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.ApLaneLineInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint > path_points_;
  ::PROTOBUF_NAMESPACE_ID::int32 attri_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class ApDynaObject PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.ApDynaObject) */ {
 public:
  inline ApDynaObject() : ApDynaObject(nullptr) {};
  virtual ~ApDynaObject();

  ApDynaObject(const ApDynaObject& from);
  ApDynaObject(ApDynaObject&& from) noexcept
    : ApDynaObject() {
    *this = ::std::move(from);
  }

  inline ApDynaObject& operator=(const ApDynaObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApDynaObject& operator=(ApDynaObject&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApDynaObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApDynaObject* internal_default_instance() {
    return reinterpret_cast<const ApDynaObject*>(
               &_ApDynaObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ApDynaObject& a, ApDynaObject& b) {
    a.Swap(&b);
  }
  inline void Swap(ApDynaObject* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApDynaObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApDynaObject* New() const final {
    return CreateMaybeMessage<ApDynaObject>(nullptr);
  }

  ApDynaObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApDynaObject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApDynaObject& from);
  void MergeFrom(const ApDynaObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApDynaObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.ApDynaObject";
  }
  protected:
  explicit ApDynaObject(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocalLinearVelocityFieldNumber = 14,
    kLocalLinearAccelerationFieldNumber = 15,
    kSizeFieldNumber = 2,
    kPoseFieldNumber = 4,
    kPtFieldNumber = 5,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 3,
    kColorFieldNumber = 6,
    kSignalLightFieldNumber = 7,
    kBrakeLightFieldNumber = 8,
    kBlindRegionFieldNumber = 10,
    kIsInBlindRegionFieldNumber = 9,
    kIsStaticFieldNumber = 11,
    kIsStraddlingFieldNumber = 12,
    kIsLightOnFieldNumber = 13,
  };
  // repeated float local_linear_velocity = 14;
  int local_linear_velocity_size() const;
  private:
  int _internal_local_linear_velocity_size() const;
  public:
  void clear_local_linear_velocity();
  private:
  float _internal_local_linear_velocity(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_local_linear_velocity() const;
  void _internal_add_local_linear_velocity(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_local_linear_velocity();
  public:
  float local_linear_velocity(int index) const;
  void set_local_linear_velocity(int index, float value);
  void add_local_linear_velocity(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      local_linear_velocity() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_local_linear_velocity();

  // repeated float local_linear_acceleration = 15;
  int local_linear_acceleration_size() const;
  private:
  int _internal_local_linear_acceleration_size() const;
  public:
  void clear_local_linear_acceleration();
  private:
  float _internal_local_linear_acceleration(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_local_linear_acceleration() const;
  void _internal_add_local_linear_acceleration(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_local_linear_acceleration();
  public:
  float local_linear_acceleration(int index) const;
  void set_local_linear_acceleration(int index, float value);
  void add_local_linear_acceleration(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      local_linear_acceleration() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_local_linear_acceleration();

  // .SRprotobuf.Size3f size = 2;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  const ::SRprotobuf::Size3f& size() const;
  ::SRprotobuf::Size3f* release_size();
  ::SRprotobuf::Size3f* mutable_size();
  void set_allocated_size(::SRprotobuf::Size3f* size);
  private:
  const ::SRprotobuf::Size3f& _internal_size() const;
  ::SRprotobuf::Size3f* _internal_mutable_size();
  public:
  void unsafe_arena_set_allocated_size(
      ::SRprotobuf::Size3f* size);
  ::SRprotobuf::Size3f* unsafe_arena_release_size();

  // .SRprotobuf.Pose3f pose = 4;
  bool has_pose() const;
  private:
  bool _internal_has_pose() const;
  public:
  void clear_pose();
  const ::SRprotobuf::Pose3f& pose() const;
  ::SRprotobuf::Pose3f* release_pose();
  ::SRprotobuf::Pose3f* mutable_pose();
  void set_allocated_pose(::SRprotobuf::Pose3f* pose);
  private:
  const ::SRprotobuf::Pose3f& _internal_pose() const;
  ::SRprotobuf::Pose3f* _internal_mutable_pose();
  public:
  void unsafe_arena_set_allocated_pose(
      ::SRprotobuf::Pose3f* pose);
  ::SRprotobuf::Pose3f* unsafe_arena_release_pose();

  // .SRprotobuf.Point3f pt = 5;
  bool has_pt() const;
  private:
  bool _internal_has_pt() const;
  public:
  void clear_pt();
  const ::SRprotobuf::Point3f& pt() const;
  ::SRprotobuf::Point3f* release_pt();
  ::SRprotobuf::Point3f* mutable_pt();
  void set_allocated_pt(::SRprotobuf::Point3f* pt);
  private:
  const ::SRprotobuf::Point3f& _internal_pt() const;
  ::SRprotobuf::Point3f* _internal_mutable_pt();
  public:
  void unsafe_arena_set_allocated_pt(
      ::SRprotobuf::Point3f* pt);
  ::SRprotobuf::Point3f* unsafe_arena_release_pt();

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .SRprotobuf.ApObjectType type = 3;
  void clear_type();
  ::SRprotobuf::ApObjectType type() const;
  void set_type(::SRprotobuf::ApObjectType value);
  private:
  ::SRprotobuf::ApObjectType _internal_type() const;
  void _internal_set_type(::SRprotobuf::ApObjectType value);
  public:

  // int32 color = 6;
  void clear_color();
  ::PROTOBUF_NAMESPACE_ID::int32 color() const;
  void set_color(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_color() const;
  void _internal_set_color(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .SRprotobuf.ApSignalLight signal_light = 7;
  void clear_signal_light();
  ::SRprotobuf::ApSignalLight signal_light() const;
  void set_signal_light(::SRprotobuf::ApSignalLight value);
  private:
  ::SRprotobuf::ApSignalLight _internal_signal_light() const;
  void _internal_set_signal_light(::SRprotobuf::ApSignalLight value);
  public:

  // .SRprotobuf.ApBrakeLight brake_light = 8;
  void clear_brake_light();
  ::SRprotobuf::ApBrakeLight brake_light() const;
  void set_brake_light(::SRprotobuf::ApBrakeLight value);
  private:
  ::SRprotobuf::ApBrakeLight _internal_brake_light() const;
  void _internal_set_brake_light(::SRprotobuf::ApBrakeLight value);
  public:

  // uint32 blind_region = 10;
  void clear_blind_region();
  ::PROTOBUF_NAMESPACE_ID::uint32 blind_region() const;
  void set_blind_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blind_region() const;
  void _internal_set_blind_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool is_in_blind_region = 9;
  void clear_is_in_blind_region();
  bool is_in_blind_region() const;
  void set_is_in_blind_region(bool value);
  private:
  bool _internal_is_in_blind_region() const;
  void _internal_set_is_in_blind_region(bool value);
  public:

  // bool is_static = 11;
  void clear_is_static();
  bool is_static() const;
  void set_is_static(bool value);
  private:
  bool _internal_is_static() const;
  void _internal_set_is_static(bool value);
  public:

  // bool is_straddling = 12;
  void clear_is_straddling();
  bool is_straddling() const;
  void set_is_straddling(bool value);
  private:
  bool _internal_is_straddling() const;
  void _internal_set_is_straddling(bool value);
  public:

  // bool is_light_on = 13;
  void clear_is_light_on();
  bool is_light_on() const;
  void set_is_light_on(bool value);
  private:
  bool _internal_is_light_on() const;
  void _internal_set_is_light_on(bool value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.ApDynaObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > local_linear_velocity_;
  mutable std::atomic<int> _local_linear_velocity_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > local_linear_acceleration_;
  mutable std::atomic<int> _local_linear_acceleration_cached_byte_size_;
  ::SRprotobuf::Size3f* size_;
  ::SRprotobuf::Pose3f* pose_;
  ::SRprotobuf::Point3f* pt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::int32 color_;
  int signal_light_;
  int brake_light_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blind_region_;
  bool is_in_blind_region_;
  bool is_static_;
  bool is_straddling_;
  bool is_light_on_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class ApTrajectoryDataType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.ApTrajectoryDataType) */ {
 public:
  inline ApTrajectoryDataType() : ApTrajectoryDataType(nullptr) {};
  virtual ~ApTrajectoryDataType();

  ApTrajectoryDataType(const ApTrajectoryDataType& from);
  ApTrajectoryDataType(ApTrajectoryDataType&& from) noexcept
    : ApTrajectoryDataType() {
    *this = ::std::move(from);
  }

  inline ApTrajectoryDataType& operator=(const ApTrajectoryDataType& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApTrajectoryDataType& operator=(ApTrajectoryDataType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApTrajectoryDataType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApTrajectoryDataType* internal_default_instance() {
    return reinterpret_cast<const ApTrajectoryDataType*>(
               &_ApTrajectoryDataType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ApTrajectoryDataType& a, ApTrajectoryDataType& b) {
    a.Swap(&b);
  }
  inline void Swap(ApTrajectoryDataType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApTrajectoryDataType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApTrajectoryDataType* New() const final {
    return CreateMaybeMessage<ApTrajectoryDataType>(nullptr);
  }

  ApTrajectoryDataType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApTrajectoryDataType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApTrajectoryDataType& from);
  void MergeFrom(const ApTrajectoryDataType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApTrajectoryDataType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.ApTrajectoryDataType";
  }
  protected:
  explicit ApTrajectoryDataType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ApTrajectoryDataType_ApTrajType ApTrajType;
  static constexpr ApTrajType ApTraj_TYPE_UNKNOWN =
    ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_UNKNOWN;
  static constexpr ApTrajType ApTraj_TYPE_B =
    ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_B;
  static constexpr ApTrajType ApTraj_TYPE_real_ap_plan =
    ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_real_ap_plan;
  static constexpr ApTrajType ApTraj_TYPE_global =
    ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_global;
  static constexpr ApTrajType ApTraj_TYPE_RTF_global =
    ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_RTF_global;
  static constexpr ApTrajType ApTraj_TYPE_RTF_planning =
    ApTrajectoryDataType_ApTrajType_ApTraj_TYPE_RTF_planning;
  static inline bool ApTrajType_IsValid(int value) {
    return ApTrajectoryDataType_ApTrajType_IsValid(value);
  }
  static constexpr ApTrajType ApTrajType_MIN =
    ApTrajectoryDataType_ApTrajType_ApTrajType_MIN;
  static constexpr ApTrajType ApTrajType_MAX =
    ApTrajectoryDataType_ApTrajType_ApTrajType_MAX;
  static constexpr int ApTrajType_ARRAYSIZE =
    ApTrajectoryDataType_ApTrajType_ApTrajType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ApTrajType_descriptor() {
    return ApTrajectoryDataType_ApTrajType_descriptor();
  }
  template<typename T>
  static inline const std::string& ApTrajType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ApTrajType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ApTrajType_Name.");
    return ApTrajectoryDataType_ApTrajType_Name(enum_t_value);
  }
  static inline bool ApTrajType_Parse(const std::string& name,
      ApTrajType* value) {
    return ApTrajectoryDataType_ApTrajType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryFieldNumber = 3,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // repeated .SRprotobuf.ApPathPoint Trajectory = 3;
  int trajectory_size() const;
  private:
  int _internal_trajectory_size() const;
  public:
  void clear_trajectory();
  ::SRprotobuf::ApPathPoint* mutable_trajectory(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >*
      mutable_trajectory();
  private:
  const ::SRprotobuf::ApPathPoint& _internal_trajectory(int index) const;
  ::SRprotobuf::ApPathPoint* _internal_add_trajectory();
  public:
  const ::SRprotobuf::ApPathPoint& trajectory(int index) const;
  ::SRprotobuf::ApPathPoint* add_trajectory();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >&
      trajectory() const;

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .SRprotobuf.ApTrajectoryDataType.ApTrajType type = 2;
  void clear_type();
  ::SRprotobuf::ApTrajectoryDataType_ApTrajType type() const;
  void set_type(::SRprotobuf::ApTrajectoryDataType_ApTrajType value);
  private:
  ::SRprotobuf::ApTrajectoryDataType_ApTrajType _internal_type() const;
  void _internal_set_type(::SRprotobuf::ApTrajectoryDataType_ApTrajType value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.ApTrajectoryDataType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint > trajectory_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class BDistancePercent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.BDistancePercent) */ {
 public:
  inline BDistancePercent() : BDistancePercent(nullptr) {};
  virtual ~BDistancePercent();

  BDistancePercent(const BDistancePercent& from);
  BDistancePercent(BDistancePercent&& from) noexcept
    : BDistancePercent() {
    *this = ::std::move(from);
  }

  inline BDistancePercent& operator=(const BDistancePercent& from) {
    CopyFrom(from);
    return *this;
  }
  inline BDistancePercent& operator=(BDistancePercent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BDistancePercent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BDistancePercent* internal_default_instance() {
    return reinterpret_cast<const BDistancePercent*>(
               &_BDistancePercent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(BDistancePercent& a, BDistancePercent& b) {
    a.Swap(&b);
  }
  inline void Swap(BDistancePercent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BDistancePercent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BDistancePercent* New() const final {
    return CreateMaybeMessage<BDistancePercent>(nullptr);
  }

  BDistancePercent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BDistancePercent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BDistancePercent& from);
  void MergeFrom(const BDistancePercent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BDistancePercent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.BDistancePercent";
  }
  protected:
  explicit BDistancePercent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDistanceFieldNumber = 1,
    kPercentFieldNumber = 2,
  };
  // float distance = 1;
  void clear_distance();
  float distance() const;
  void set_distance(float value);
  private:
  float _internal_distance() const;
  void _internal_set_distance(float value);
  public:

  // float percent = 2;
  void clear_percent();
  float percent() const;
  void set_percent(float value);
  private:
  float _internal_percent() const;
  void _internal_set_percent(float value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.BDistancePercent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float distance_;
  float percent_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class RTFStatusMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.RTFStatusMsg) */ {
 public:
  inline RTFStatusMsg() : RTFStatusMsg(nullptr) {};
  virtual ~RTFStatusMsg();

  RTFStatusMsg(const RTFStatusMsg& from);
  RTFStatusMsg(RTFStatusMsg&& from) noexcept
    : RTFStatusMsg() {
    *this = ::std::move(from);
  }

  inline RTFStatusMsg& operator=(const RTFStatusMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RTFStatusMsg& operator=(RTFStatusMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RTFStatusMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RTFStatusMsg* internal_default_instance() {
    return reinterpret_cast<const RTFStatusMsg*>(
               &_RTFStatusMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RTFStatusMsg& a, RTFStatusMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(RTFStatusMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RTFStatusMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RTFStatusMsg* New() const final {
    return CreateMaybeMessage<RTFStatusMsg>(nullptr);
  }

  RTFStatusMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RTFStatusMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RTFStatusMsg& from);
  void MergeFrom(const RTFStatusMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RTFStatusMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.RTFStatusMsg";
  }
  protected:
  explicit RTFStatusMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartLocationFieldNumber = 7,
    kRtfStFieldNumber = 1,
    kRtfTipsFieldNumber = 2,
    kFailReasonFieldNumber = 3,
    kTotalDistanceFieldNumber = 4,
    kRemainDistanceFieldNumber = 5,
    kPercentFieldNumber = 6,
  };
  // .SRprotobuf.Location start_location = 7;
  bool has_start_location() const;
  private:
  bool _internal_has_start_location() const;
  public:
  void clear_start_location();
  const ::SRprotobuf::Location& start_location() const;
  ::SRprotobuf::Location* release_start_location();
  ::SRprotobuf::Location* mutable_start_location();
  void set_allocated_start_location(::SRprotobuf::Location* start_location);
  private:
  const ::SRprotobuf::Location& _internal_start_location() const;
  ::SRprotobuf::Location* _internal_mutable_start_location();
  public:
  void unsafe_arena_set_allocated_start_location(
      ::SRprotobuf::Location* start_location);
  ::SRprotobuf::Location* unsafe_arena_release_start_location();

  // int32 rtf_st = 1;
  void clear_rtf_st();
  ::PROTOBUF_NAMESPACE_ID::int32 rtf_st() const;
  void set_rtf_st(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rtf_st() const;
  void _internal_set_rtf_st(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 rtf_tips = 2;
  void clear_rtf_tips();
  ::PROTOBUF_NAMESPACE_ID::int32 rtf_tips() const;
  void set_rtf_tips(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rtf_tips() const;
  void _internal_set_rtf_tips(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fail_reason = 3;
  void clear_fail_reason();
  ::PROTOBUF_NAMESPACE_ID::int32 fail_reason() const;
  void set_fail_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fail_reason() const;
  void _internal_set_fail_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float total_distance = 4;
  void clear_total_distance();
  float total_distance() const;
  void set_total_distance(float value);
  private:
  float _internal_total_distance() const;
  void _internal_set_total_distance(float value);
  public:

  // float remain_distance = 5;
  void clear_remain_distance();
  float remain_distance() const;
  void set_remain_distance(float value);
  private:
  float _internal_remain_distance() const;
  void _internal_set_remain_distance(float value);
  public:

  // float percent = 6;
  void clear_percent();
  float percent() const;
  void set_percent(float value);
  private:
  float _internal_percent() const;
  void _internal_set_percent(float value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.RTFStatusMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::SRprotobuf::Location* start_location_;
  ::PROTOBUF_NAMESPACE_ID::int32 rtf_st_;
  ::PROTOBUF_NAMESPACE_ID::int32 rtf_tips_;
  ::PROTOBUF_NAMESPACE_ID::int32 fail_reason_;
  float total_distance_;
  float remain_distance_;
  float percent_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class PkoutTerminationInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.PkoutTerminationInfo) */ {
 public:
  inline PkoutTerminationInfo() : PkoutTerminationInfo(nullptr) {};
  virtual ~PkoutTerminationInfo();

  PkoutTerminationInfo(const PkoutTerminationInfo& from);
  PkoutTerminationInfo(PkoutTerminationInfo&& from) noexcept
    : PkoutTerminationInfo() {
    *this = ::std::move(from);
  }

  inline PkoutTerminationInfo& operator=(const PkoutTerminationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PkoutTerminationInfo& operator=(PkoutTerminationInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PkoutTerminationInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PkoutTerminationInfo* internal_default_instance() {
    return reinterpret_cast<const PkoutTerminationInfo*>(
               &_PkoutTerminationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PkoutTerminationInfo& a, PkoutTerminationInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PkoutTerminationInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PkoutTerminationInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PkoutTerminationInfo* New() const final {
    return CreateMaybeMessage<PkoutTerminationInfo>(nullptr);
  }

  PkoutTerminationInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PkoutTerminationInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PkoutTerminationInfo& from);
  void MergeFrom(const PkoutTerminationInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PkoutTerminationInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.PkoutTerminationInfo";
  }
  protected:
  explicit PkoutTerminationInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 1,
    kThetaFieldNumber = 2,
    kLenFieldNumber = 3,
  };
  // .SRprotobuf.Point3f pos = 1;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::SRprotobuf::Point3f& pos() const;
  ::SRprotobuf::Point3f* release_pos();
  ::SRprotobuf::Point3f* mutable_pos();
  void set_allocated_pos(::SRprotobuf::Point3f* pos);
  private:
  const ::SRprotobuf::Point3f& _internal_pos() const;
  ::SRprotobuf::Point3f* _internal_mutable_pos();
  public:
  void unsafe_arena_set_allocated_pos(
      ::SRprotobuf::Point3f* pos);
  ::SRprotobuf::Point3f* unsafe_arena_release_pos();

  // float theta = 2;
  void clear_theta();
  float theta() const;
  void set_theta(float value);
  private:
  float _internal_theta() const;
  void _internal_set_theta(float value);
  public:

  // float len = 3;
  void clear_len();
  float len() const;
  void set_len(float value);
  private:
  float _internal_len() const;
  void _internal_set_len(float value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.PkoutTerminationInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::SRprotobuf::Point3f* pos_;
  float theta_;
  float len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class ApEssentialMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.ApEssentialMsg) */ {
 public:
  inline ApEssentialMsg() : ApEssentialMsg(nullptr) {};
  virtual ~ApEssentialMsg();

  ApEssentialMsg(const ApEssentialMsg& from);
  ApEssentialMsg(ApEssentialMsg&& from) noexcept
    : ApEssentialMsg() {
    *this = ::std::move(from);
  }

  inline ApEssentialMsg& operator=(const ApEssentialMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApEssentialMsg& operator=(ApEssentialMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApEssentialMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApEssentialMsg* internal_default_instance() {
    return reinterpret_cast<const ApEssentialMsg*>(
               &_ApEssentialMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ApEssentialMsg& a, ApEssentialMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ApEssentialMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApEssentialMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApEssentialMsg* New() const final {
    return CreateMaybeMessage<ApEssentialMsg>(nullptr);
  }

  ApEssentialMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApEssentialMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApEssentialMsg& from);
  void MergeFrom(const ApEssentialMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApEssentialMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.ApEssentialMsg";
  }
  protected:
  explicit ApEssentialMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainingfailFieldNumber = 18,
    kPkoutDirectionStFieldNumber = 27,
    kBdistancepercentFieldNumber = 8,
    kRtfStatusMsgFieldNumber = 25,
    kPkoutTerminationFieldNumber = 29,
    kXputipsFieldNumber = 1,
    kXpuAbnormalFieldNumber = 2,
    kStatusIndicateFieldNumber = 3,
    kFailReasonFieldNumber = 4,
    kArrowFieldNumber = 5,
    kVoiceFieldNumber = 6,
    kRemainDistanceFieldNumber = 7,
    kParkStateFieldNumber = 9,
    kGlobalTrajectoryIndexFieldNumber = 10,
    kMapPoseStateFieldNumber = 11,
    kHdmapIdFieldNumber = 13,
    kSilentFavoriteStateFieldNumber = 12,
    kFavoriteSlotReadyFieldNumber = 14,
    kIsHdmapFieldNumber = 15,
    kTrainingTipsFieldNumber = 16,
    kTrainingstFieldNumber = 17,
    kTerminalAttrFieldNumber = 19,
    kMapTimeFieldNumber = 21,
    kTerminalFloorFieldNumber = 20,
    kDesktopAvlFieldNumber = 22,
    kEnterMapFieldNumber = 23,
    kEasyGetOffFieldNumber = 24,
    kCoveredValidFieldNumber = 26,
    kPkoutCurrentDirectionFieldNumber = 28,
    kPkoutSlotShapeFieldNumber = 30,
    kPkoutReadyFieldNumber = 31,
  };
  // repeated int32 trainingfail = 18;
  int trainingfail_size() const;
  private:
  int _internal_trainingfail_size() const;
  public:
  void clear_trainingfail();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_trainingfail(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_trainingfail() const;
  void _internal_add_trainingfail(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_trainingfail();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 trainingfail(int index) const;
  void set_trainingfail(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_trainingfail(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      trainingfail() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_trainingfail();

  // repeated int32 pkout_direction_st = 27;
  int pkout_direction_st_size() const;
  private:
  int _internal_pkout_direction_st_size() const;
  public:
  void clear_pkout_direction_st();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pkout_direction_st(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_pkout_direction_st() const;
  void _internal_add_pkout_direction_st(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_pkout_direction_st();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 pkout_direction_st(int index) const;
  void set_pkout_direction_st(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_pkout_direction_st(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      pkout_direction_st() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_pkout_direction_st();

  // .SRprotobuf.BDistancePercent bdistancepercent = 8;
  bool has_bdistancepercent() const;
  private:
  bool _internal_has_bdistancepercent() const;
  public:
  void clear_bdistancepercent();
  const ::SRprotobuf::BDistancePercent& bdistancepercent() const;
  ::SRprotobuf::BDistancePercent* release_bdistancepercent();
  ::SRprotobuf::BDistancePercent* mutable_bdistancepercent();
  void set_allocated_bdistancepercent(::SRprotobuf::BDistancePercent* bdistancepercent);
  private:
  const ::SRprotobuf::BDistancePercent& _internal_bdistancepercent() const;
  ::SRprotobuf::BDistancePercent* _internal_mutable_bdistancepercent();
  public:
  void unsafe_arena_set_allocated_bdistancepercent(
      ::SRprotobuf::BDistancePercent* bdistancepercent);
  ::SRprotobuf::BDistancePercent* unsafe_arena_release_bdistancepercent();

  // .SRprotobuf.RTFStatusMsg rtf_status_msg = 25;
  bool has_rtf_status_msg() const;
  private:
  bool _internal_has_rtf_status_msg() const;
  public:
  void clear_rtf_status_msg();
  const ::SRprotobuf::RTFStatusMsg& rtf_status_msg() const;
  ::SRprotobuf::RTFStatusMsg* release_rtf_status_msg();
  ::SRprotobuf::RTFStatusMsg* mutable_rtf_status_msg();
  void set_allocated_rtf_status_msg(::SRprotobuf::RTFStatusMsg* rtf_status_msg);
  private:
  const ::SRprotobuf::RTFStatusMsg& _internal_rtf_status_msg() const;
  ::SRprotobuf::RTFStatusMsg* _internal_mutable_rtf_status_msg();
  public:
  void unsafe_arena_set_allocated_rtf_status_msg(
      ::SRprotobuf::RTFStatusMsg* rtf_status_msg);
  ::SRprotobuf::RTFStatusMsg* unsafe_arena_release_rtf_status_msg();

  // .SRprotobuf.PkoutTerminationInfo pkout_termination = 29;
  bool has_pkout_termination() const;
  private:
  bool _internal_has_pkout_termination() const;
  public:
  void clear_pkout_termination();
  const ::SRprotobuf::PkoutTerminationInfo& pkout_termination() const;
  ::SRprotobuf::PkoutTerminationInfo* release_pkout_termination();
  ::SRprotobuf::PkoutTerminationInfo* mutable_pkout_termination();
  void set_allocated_pkout_termination(::SRprotobuf::PkoutTerminationInfo* pkout_termination);
  private:
  const ::SRprotobuf::PkoutTerminationInfo& _internal_pkout_termination() const;
  ::SRprotobuf::PkoutTerminationInfo* _internal_mutable_pkout_termination();
  public:
  void unsafe_arena_set_allocated_pkout_termination(
      ::SRprotobuf::PkoutTerminationInfo* pkout_termination);
  ::SRprotobuf::PkoutTerminationInfo* unsafe_arena_release_pkout_termination();

  // int32 xputips = 1;
  void clear_xputips();
  ::PROTOBUF_NAMESPACE_ID::int32 xputips() const;
  void set_xputips(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xputips() const;
  void _internal_set_xputips(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 xpuAbnormal = 2;
  void clear_xpuabnormal();
  ::PROTOBUF_NAMESPACE_ID::int32 xpuabnormal() const;
  void set_xpuabnormal(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpuabnormal() const;
  void _internal_set_xpuabnormal(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 statusIndicate = 3;
  void clear_statusindicate();
  ::PROTOBUF_NAMESPACE_ID::int32 statusindicate() const;
  void set_statusindicate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_statusindicate() const;
  void _internal_set_statusindicate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 failReason = 4;
  void clear_failreason();
  ::PROTOBUF_NAMESPACE_ID::int32 failreason() const;
  void set_failreason(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_failreason() const;
  void _internal_set_failreason(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 arrow = 5;
  void clear_arrow();
  ::PROTOBUF_NAMESPACE_ID::int32 arrow() const;
  void set_arrow(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arrow() const;
  void _internal_set_arrow(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 voice = 6;
  void clear_voice();
  ::PROTOBUF_NAMESPACE_ID::int32 voice() const;
  void set_voice(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_voice() const;
  void _internal_set_voice(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float remainDistance = 7;
  void clear_remaindistance();
  float remaindistance() const;
  void set_remaindistance(float value);
  private:
  float _internal_remaindistance() const;
  void _internal_set_remaindistance(float value);
  public:

  // int32 parkState = 9;
  void clear_parkstate();
  ::PROTOBUF_NAMESPACE_ID::int32 parkstate() const;
  void set_parkstate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_parkstate() const;
  void _internal_set_parkstate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 globalTrajectoryIndex = 10;
  void clear_globaltrajectoryindex();
  ::PROTOBUF_NAMESPACE_ID::int32 globaltrajectoryindex() const;
  void set_globaltrajectoryindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_globaltrajectoryindex() const;
  void _internal_set_globaltrajectoryindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 mapPoseState = 11;
  void clear_mapposestate();
  ::PROTOBUF_NAMESPACE_ID::int32 mapposestate() const;
  void set_mapposestate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mapposestate() const;
  void _internal_set_mapposestate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 hdmapId = 13;
  void clear_hdmapid();
  ::PROTOBUF_NAMESPACE_ID::uint64 hdmapid() const;
  void set_hdmapid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_hdmapid() const;
  void _internal_set_hdmapid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 silentFavoriteState = 12;
  void clear_silentfavoritestate();
  ::PROTOBUF_NAMESPACE_ID::int32 silentfavoritestate() const;
  void set_silentfavoritestate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_silentfavoritestate() const;
  void _internal_set_silentfavoritestate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 favoriteSlotReady = 14;
  void clear_favoriteslotready();
  ::PROTOBUF_NAMESPACE_ID::int32 favoriteslotready() const;
  void set_favoriteslotready(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_favoriteslotready() const;
  void _internal_set_favoriteslotready(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_hdmap = 15;
  void clear_is_hdmap();
  ::PROTOBUF_NAMESPACE_ID::int32 is_hdmap() const;
  void set_is_hdmap(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_hdmap() const;
  void _internal_set_is_hdmap(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 trainingTips = 16;
  void clear_trainingtips();
  ::PROTOBUF_NAMESPACE_ID::int32 trainingtips() const;
  void set_trainingtips(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_trainingtips() const;
  void _internal_set_trainingtips(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 trainingst = 17;
  void clear_trainingst();
  ::PROTOBUF_NAMESPACE_ID::int32 trainingst() const;
  void set_trainingst(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_trainingst() const;
  void _internal_set_trainingst(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 terminal_attr = 19;
  void clear_terminal_attr();
  ::PROTOBUF_NAMESPACE_ID::int32 terminal_attr() const;
  void set_terminal_attr(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_terminal_attr() const;
  void _internal_set_terminal_attr(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 map_time = 21;
  void clear_map_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 map_time() const;
  void set_map_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_map_time() const;
  void _internal_set_map_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 terminal_floor = 20;
  void clear_terminal_floor();
  ::PROTOBUF_NAMESPACE_ID::int32 terminal_floor() const;
  void set_terminal_floor(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_terminal_floor() const;
  void _internal_set_terminal_floor(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 desktop_avl = 22;
  void clear_desktop_avl();
  ::PROTOBUF_NAMESPACE_ID::int32 desktop_avl() const;
  void set_desktop_avl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_desktop_avl() const;
  void _internal_set_desktop_avl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 enter_map = 23;
  void clear_enter_map();
  ::PROTOBUF_NAMESPACE_ID::int32 enter_map() const;
  void set_enter_map(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_enter_map() const;
  void _internal_set_enter_map(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 easy_get_off = 24;
  void clear_easy_get_off();
  ::PROTOBUF_NAMESPACE_ID::int32 easy_get_off() const;
  void set_easy_get_off(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_easy_get_off() const;
  void _internal_set_easy_get_off(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 coveredValid = 26;
  void clear_coveredvalid();
  ::PROTOBUF_NAMESPACE_ID::int32 coveredvalid() const;
  void set_coveredvalid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_coveredvalid() const;
  void _internal_set_coveredvalid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pkout_current_direction = 28;
  void clear_pkout_current_direction();
  ::PROTOBUF_NAMESPACE_ID::int32 pkout_current_direction() const;
  void set_pkout_current_direction(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pkout_current_direction() const;
  void _internal_set_pkout_current_direction(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pkout_slot_shape = 30;
  void clear_pkout_slot_shape();
  ::PROTOBUF_NAMESPACE_ID::int32 pkout_slot_shape() const;
  void set_pkout_slot_shape(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pkout_slot_shape() const;
  void _internal_set_pkout_slot_shape(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pkout_ready = 31;
  void clear_pkout_ready();
  ::PROTOBUF_NAMESPACE_ID::int32 pkout_ready() const;
  void set_pkout_ready(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pkout_ready() const;
  void _internal_set_pkout_ready(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.ApEssentialMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > trainingfail_;
  mutable std::atomic<int> _trainingfail_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > pkout_direction_st_;
  mutable std::atomic<int> _pkout_direction_st_cached_byte_size_;
  ::SRprotobuf::BDistancePercent* bdistancepercent_;
  ::SRprotobuf::RTFStatusMsg* rtf_status_msg_;
  ::SRprotobuf::PkoutTerminationInfo* pkout_termination_;
  ::PROTOBUF_NAMESPACE_ID::int32 xputips_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpuabnormal_;
  ::PROTOBUF_NAMESPACE_ID::int32 statusindicate_;
  ::PROTOBUF_NAMESPACE_ID::int32 failreason_;
  ::PROTOBUF_NAMESPACE_ID::int32 arrow_;
  ::PROTOBUF_NAMESPACE_ID::int32 voice_;
  float remaindistance_;
  ::PROTOBUF_NAMESPACE_ID::int32 parkstate_;
  ::PROTOBUF_NAMESPACE_ID::int32 globaltrajectoryindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 mapposestate_;
  ::PROTOBUF_NAMESPACE_ID::uint64 hdmapid_;
  ::PROTOBUF_NAMESPACE_ID::int32 silentfavoritestate_;
  ::PROTOBUF_NAMESPACE_ID::int32 favoriteslotready_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_hdmap_;
  ::PROTOBUF_NAMESPACE_ID::int32 trainingtips_;
  ::PROTOBUF_NAMESPACE_ID::int32 trainingst_;
  ::PROTOBUF_NAMESPACE_ID::int32 terminal_attr_;
  ::PROTOBUF_NAMESPACE_ID::uint64 map_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 terminal_floor_;
  ::PROTOBUF_NAMESPACE_ID::int32 desktop_avl_;
  ::PROTOBUF_NAMESPACE_ID::int32 enter_map_;
  ::PROTOBUF_NAMESPACE_ID::int32 easy_get_off_;
  ::PROTOBUF_NAMESPACE_ID::int32 coveredvalid_;
  ::PROTOBUF_NAMESPACE_ID::int32 pkout_current_direction_;
  ::PROTOBUF_NAMESPACE_ID::int32 pkout_slot_shape_;
  ::PROTOBUF_NAMESPACE_ID::int32 pkout_ready_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class ApNaviMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.ApNaviMsg) */ {
 public:
  inline ApNaviMsg() : ApNaviMsg(nullptr) {};
  virtual ~ApNaviMsg();

  ApNaviMsg(const ApNaviMsg& from);
  ApNaviMsg(ApNaviMsg&& from) noexcept
    : ApNaviMsg() {
    *this = ::std::move(from);
  }

  inline ApNaviMsg& operator=(const ApNaviMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApNaviMsg& operator=(ApNaviMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApNaviMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApNaviMsg* internal_default_instance() {
    return reinterpret_cast<const ApNaviMsg*>(
               &_ApNaviMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ApNaviMsg& a, ApNaviMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ApNaviMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApNaviMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApNaviMsg* New() const final {
    return CreateMaybeMessage<ApNaviMsg>(nullptr);
  }

  ApNaviMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApNaviMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApNaviMsg& from);
  void MergeFrom(const ApNaviMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApNaviMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.ApNaviMsg";
  }
  protected:
  explicit ApNaviMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNaviStateFieldNumber = 1,
    kNaviTipsFieldNumber = 2,
    kDistToStartpointFieldNumber = 3,
    kDistToFeatureFieldNumber = 4,
    kHillStatusFieldNumber = 5,
  };
  // int32 navi_state = 1;
  void clear_navi_state();
  ::PROTOBUF_NAMESPACE_ID::int32 navi_state() const;
  void set_navi_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_navi_state() const;
  void _internal_set_navi_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 navi_tips = 2;
  void clear_navi_tips();
  ::PROTOBUF_NAMESPACE_ID::int32 navi_tips() const;
  void set_navi_tips(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_navi_tips() const;
  void _internal_set_navi_tips(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float dist_to_startpoint = 3;
  void clear_dist_to_startpoint();
  float dist_to_startpoint() const;
  void set_dist_to_startpoint(float value);
  private:
  float _internal_dist_to_startpoint() const;
  void _internal_set_dist_to_startpoint(float value);
  public:

  // float dist_to_feature = 4;
  void clear_dist_to_feature();
  float dist_to_feature() const;
  void set_dist_to_feature(float value);
  private:
  float _internal_dist_to_feature() const;
  void _internal_set_dist_to_feature(float value);
  public:

  // int32 hill_status = 5;
  void clear_hill_status();
  ::PROTOBUF_NAMESPACE_ID::int32 hill_status() const;
  void set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hill_status() const;
  void _internal_set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.ApNaviMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 navi_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 navi_tips_;
  float dist_to_startpoint_;
  float dist_to_feature_;
  ::PROTOBUF_NAMESPACE_ID::int32 hill_status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class TrainingSpdBump PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.TrainingSpdBump) */ {
 public:
  inline TrainingSpdBump() : TrainingSpdBump(nullptr) {};
  virtual ~TrainingSpdBump();

  TrainingSpdBump(const TrainingSpdBump& from);
  TrainingSpdBump(TrainingSpdBump&& from) noexcept
    : TrainingSpdBump() {
    *this = ::std::move(from);
  }

  inline TrainingSpdBump& operator=(const TrainingSpdBump& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingSpdBump& operator=(TrainingSpdBump&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrainingSpdBump& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrainingSpdBump* internal_default_instance() {
    return reinterpret_cast<const TrainingSpdBump*>(
               &_TrainingSpdBump_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(TrainingSpdBump& a, TrainingSpdBump& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainingSpdBump* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingSpdBump* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrainingSpdBump* New() const final {
    return CreateMaybeMessage<TrainingSpdBump>(nullptr);
  }

  TrainingSpdBump* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrainingSpdBump>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrainingSpdBump& from);
  void MergeFrom(const TrainingSpdBump& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrainingSpdBump* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.TrainingSpdBump";
  }
  protected:
  explicit TrainingSpdBump(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
    kThetaFieldNumber = 5,
    kSFieldNumber = 6,
  };
  // int32 flag = 1;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::int32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_flag() const;
  void _internal_set_flag(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float x = 2;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 3;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 4;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // float theta = 5;
  void clear_theta();
  float theta() const;
  void set_theta(float value);
  private:
  float _internal_theta() const;
  void _internal_set_theta(float value);
  public:

  // float s = 6;
  void clear_s();
  float s() const;
  void set_s(float value);
  private:
  float _internal_s() const;
  void _internal_set_s(float value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.TrainingSpdBump)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 flag_;
  float x_;
  float y_;
  float z_;
  float theta_;
  float s_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class SlotIdMapping PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.SlotIdMapping) */ {
 public:
  inline SlotIdMapping() : SlotIdMapping(nullptr) {};
  virtual ~SlotIdMapping();

  SlotIdMapping(const SlotIdMapping& from);
  SlotIdMapping(SlotIdMapping&& from) noexcept
    : SlotIdMapping() {
    *this = ::std::move(from);
  }

  inline SlotIdMapping& operator=(const SlotIdMapping& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlotIdMapping& operator=(SlotIdMapping&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SlotIdMapping& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlotIdMapping* internal_default_instance() {
    return reinterpret_cast<const SlotIdMapping*>(
               &_SlotIdMapping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SlotIdMapping& a, SlotIdMapping& b) {
    a.Swap(&b);
  }
  inline void Swap(SlotIdMapping* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SlotIdMapping* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SlotIdMapping* New() const final {
    return CreateMaybeMessage<SlotIdMapping>(nullptr);
  }

  SlotIdMapping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SlotIdMapping>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SlotIdMapping& from);
  void MergeFrom(const SlotIdMapping& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlotIdMapping* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.SlotIdMapping";
  }
  protected:
  explicit SlotIdMapping(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvmSlotIdFieldNumber = 1,
    kParkSlotIdFieldNumber = 2,
  };
  // int32 avmSlotId = 1;
  void clear_avmslotid();
  ::PROTOBUF_NAMESPACE_ID::int32 avmslotid() const;
  void set_avmslotid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avmslotid() const;
  void _internal_set_avmslotid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 parkSlotId = 2;
  void clear_parkslotid();
  ::PROTOBUF_NAMESPACE_ID::int32 parkslotid() const;
  void set_parkslotid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_parkslotid() const;
  void _internal_set_parkslotid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.SlotIdMapping)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 avmslotid_;
  ::PROTOBUF_NAMESPACE_ID::int32 parkslotid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class Ap_StaticObjectPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.Ap_StaticObjectPoint) */ {
 public:
  inline Ap_StaticObjectPoint() : Ap_StaticObjectPoint(nullptr) {};
  virtual ~Ap_StaticObjectPoint();

  Ap_StaticObjectPoint(const Ap_StaticObjectPoint& from);
  Ap_StaticObjectPoint(Ap_StaticObjectPoint&& from) noexcept
    : Ap_StaticObjectPoint() {
    *this = ::std::move(from);
  }

  inline Ap_StaticObjectPoint& operator=(const Ap_StaticObjectPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ap_StaticObjectPoint& operator=(Ap_StaticObjectPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Ap_StaticObjectPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ap_StaticObjectPoint* internal_default_instance() {
    return reinterpret_cast<const Ap_StaticObjectPoint*>(
               &_Ap_StaticObjectPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Ap_StaticObjectPoint& a, Ap_StaticObjectPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(Ap_StaticObjectPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ap_StaticObjectPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Ap_StaticObjectPoint* New() const final {
    return CreateMaybeMessage<Ap_StaticObjectPoint>(nullptr);
  }

  Ap_StaticObjectPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Ap_StaticObjectPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Ap_StaticObjectPoint& from);
  void MergeFrom(const Ap_StaticObjectPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ap_StaticObjectPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.Ap_StaticObjectPoint";
  }
  protected:
  explicit Ap_StaticObjectPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 1,
    kIsVisibleFieldNumber = 2,
  };
  // .SRprotobuf.Point3f position = 1;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::SRprotobuf::Point3f& position() const;
  ::SRprotobuf::Point3f* release_position();
  ::SRprotobuf::Point3f* mutable_position();
  void set_allocated_position(::SRprotobuf::Point3f* position);
  private:
  const ::SRprotobuf::Point3f& _internal_position() const;
  ::SRprotobuf::Point3f* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::SRprotobuf::Point3f* position);
  ::SRprotobuf::Point3f* unsafe_arena_release_position();

  // bool is_visible = 2;
  void clear_is_visible();
  bool is_visible() const;
  void set_is_visible(bool value);
  private:
  bool _internal_is_visible() const;
  void _internal_set_is_visible(bool value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.Ap_StaticObjectPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::SRprotobuf::Point3f* position_;
  bool is_visible_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class Ap_StaticObject PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.Ap_StaticObject) */ {
 public:
  inline Ap_StaticObject() : Ap_StaticObject(nullptr) {};
  virtual ~Ap_StaticObject();

  Ap_StaticObject(const Ap_StaticObject& from);
  Ap_StaticObject(Ap_StaticObject&& from) noexcept
    : Ap_StaticObject() {
    *this = ::std::move(from);
  }

  inline Ap_StaticObject& operator=(const Ap_StaticObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ap_StaticObject& operator=(Ap_StaticObject&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Ap_StaticObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ap_StaticObject* internal_default_instance() {
    return reinterpret_cast<const Ap_StaticObject*>(
               &_Ap_StaticObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Ap_StaticObject& a, Ap_StaticObject& b) {
    a.Swap(&b);
  }
  inline void Swap(Ap_StaticObject* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ap_StaticObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Ap_StaticObject* New() const final {
    return CreateMaybeMessage<Ap_StaticObject>(nullptr);
  }

  Ap_StaticObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Ap_StaticObject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Ap_StaticObject& from);
  void MergeFrom(const Ap_StaticObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ap_StaticObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.Ap_StaticObject";
  }
  protected:
  explicit Ap_StaticObject(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 6,
    kLocalPoseFieldNumber = 7,
    kPolygonFieldNumber = 8,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kIsWithHangingFieldNumber = 3,
    kIsMatureFieldNumber = 4,
    kIsPassableFieldNumber = 5,
    kConfidenceFieldNumber = 9,
  };
  // repeated float size = 6;
  int size_size() const;
  private:
  int _internal_size_size() const;
  public:
  void clear_size();
  private:
  float _internal_size(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_size() const;
  void _internal_add_size(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_size();
  public:
  float size(int index) const;
  void set_size(int index, float value);
  void add_size(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      size() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_size();

  // repeated double local_pose = 7;
  int local_pose_size() const;
  private:
  int _internal_local_pose_size() const;
  public:
  void clear_local_pose();
  private:
  double _internal_local_pose(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_local_pose() const;
  void _internal_add_local_pose(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_local_pose();
  public:
  double local_pose(int index) const;
  void set_local_pose(int index, double value);
  void add_local_pose(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      local_pose() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_local_pose();

  // repeated .SRprotobuf.Ap_StaticObjectPoint polygon = 8;
  int polygon_size() const;
  private:
  int _internal_polygon_size() const;
  public:
  void clear_polygon();
  ::SRprotobuf::Ap_StaticObjectPoint* mutable_polygon(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObjectPoint >*
      mutable_polygon();
  private:
  const ::SRprotobuf::Ap_StaticObjectPoint& _internal_polygon(int index) const;
  ::SRprotobuf::Ap_StaticObjectPoint* _internal_add_polygon();
  public:
  const ::SRprotobuf::Ap_StaticObjectPoint& polygon(int index) const;
  ::SRprotobuf::Ap_StaticObjectPoint* add_polygon();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObjectPoint >&
      polygon() const;

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .SRprotobuf.AP_StaticObjectType type = 2;
  void clear_type();
  ::SRprotobuf::AP_StaticObjectType type() const;
  void set_type(::SRprotobuf::AP_StaticObjectType value);
  private:
  ::SRprotobuf::AP_StaticObjectType _internal_type() const;
  void _internal_set_type(::SRprotobuf::AP_StaticObjectType value);
  public:

  // bool is_with_hanging = 3;
  void clear_is_with_hanging();
  bool is_with_hanging() const;
  void set_is_with_hanging(bool value);
  private:
  bool _internal_is_with_hanging() const;
  void _internal_set_is_with_hanging(bool value);
  public:

  // bool is_mature = 4;
  void clear_is_mature();
  bool is_mature() const;
  void set_is_mature(bool value);
  private:
  bool _internal_is_mature() const;
  void _internal_set_is_mature(bool value);
  public:

  // bool is_passable = 5;
  void clear_is_passable();
  bool is_passable() const;
  void set_is_passable(bool value);
  private:
  bool _internal_is_passable() const;
  void _internal_set_is_passable(bool value);
  public:

  // float confidence = 9;
  void clear_confidence();
  float confidence() const;
  void set_confidence(float value);
  private:
  float _internal_confidence() const;
  void _internal_set_confidence(float value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.Ap_StaticObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > size_;
  mutable std::atomic<int> _size_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > local_pose_;
  mutable std::atomic<int> _local_pose_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObjectPoint > polygon_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  int type_;
  bool is_with_hanging_;
  bool is_mature_;
  bool is_passable_;
  float confidence_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class Wall PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.Wall) */ {
 public:
  inline Wall() : Wall(nullptr) {};
  virtual ~Wall();

  Wall(const Wall& from);
  Wall(Wall&& from) noexcept
    : Wall() {
    *this = ::std::move(from);
  }

  inline Wall& operator=(const Wall& from) {
    CopyFrom(from);
    return *this;
  }
  inline Wall& operator=(Wall&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Wall& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Wall* internal_default_instance() {
    return reinterpret_cast<const Wall*>(
               &_Wall_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Wall& a, Wall& b) {
    a.Swap(&b);
  }
  inline void Swap(Wall* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Wall* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Wall* New() const final {
    return CreateMaybeMessage<Wall>(nullptr);
  }

  Wall* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Wall>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Wall& from);
  void MergeFrom(const Wall& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Wall* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.Wall";
  }
  protected:
  explicit Wall(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .SRprotobuf.Point3f points = 2;
  int points_size() const;
  private:
  int _internal_points_size() const;
  public:
  void clear_points();
  ::SRprotobuf::Point3f* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Point3f >*
      mutable_points();
  private:
  const ::SRprotobuf::Point3f& _internal_points(int index) const;
  ::SRprotobuf::Point3f* _internal_add_points();
  public:
  const ::SRprotobuf::Point3f& points(int index) const;
  ::SRprotobuf::Point3f* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Point3f >&
      points() const;

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.Wall)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Point3f > points_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class BevPillar PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.BevPillar) */ {
 public:
  inline BevPillar() : BevPillar(nullptr) {};
  virtual ~BevPillar();

  BevPillar(const BevPillar& from);
  BevPillar(BevPillar&& from) noexcept
    : BevPillar() {
    *this = ::std::move(from);
  }

  inline BevPillar& operator=(const BevPillar& from) {
    CopyFrom(from);
    return *this;
  }
  inline BevPillar& operator=(BevPillar&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BevPillar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BevPillar* internal_default_instance() {
    return reinterpret_cast<const BevPillar*>(
               &_BevPillar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(BevPillar& a, BevPillar& b) {
    a.Swap(&b);
  }
  inline void Swap(BevPillar* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BevPillar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BevPillar* New() const final {
    return CreateMaybeMessage<BevPillar>(nullptr);
  }

  BevPillar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BevPillar>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BevPillar& from);
  void MergeFrom(const BevPillar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BevPillar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.BevPillar";
  }
  protected:
  explicit BevPillar(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosFieldNumber = 1,
    kMinZFieldNumber = 2,
    kMaxZFieldNumber = 3,
  };
  // .SRprotobuf.Point2f pos = 1;
  bool has_pos() const;
  private:
  bool _internal_has_pos() const;
  public:
  void clear_pos();
  const ::SRprotobuf::Point2f& pos() const;
  ::SRprotobuf::Point2f* release_pos();
  ::SRprotobuf::Point2f* mutable_pos();
  void set_allocated_pos(::SRprotobuf::Point2f* pos);
  private:
  const ::SRprotobuf::Point2f& _internal_pos() const;
  ::SRprotobuf::Point2f* _internal_mutable_pos();
  public:
  void unsafe_arena_set_allocated_pos(
      ::SRprotobuf::Point2f* pos);
  ::SRprotobuf::Point2f* unsafe_arena_release_pos();

  // float min_z = 2;
  void clear_min_z();
  float min_z() const;
  void set_min_z(float value);
  private:
  float _internal_min_z() const;
  void _internal_set_min_z(float value);
  public:

  // float max_z = 3;
  void clear_max_z();
  float max_z() const;
  void set_max_z(float value);
  private:
  float _internal_max_z() const;
  void _internal_set_max_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:SRprotobuf.BevPillar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::SRprotobuf::Point2f* pos_;
  float min_z_;
  float max_z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class OccupancyNetParkingMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.OccupancyNetParkingMsg) */ {
 public:
  inline OccupancyNetParkingMsg() : OccupancyNetParkingMsg(nullptr) {};
  virtual ~OccupancyNetParkingMsg();

  OccupancyNetParkingMsg(const OccupancyNetParkingMsg& from);
  OccupancyNetParkingMsg(OccupancyNetParkingMsg&& from) noexcept
    : OccupancyNetParkingMsg() {
    *this = ::std::move(from);
  }

  inline OccupancyNetParkingMsg& operator=(const OccupancyNetParkingMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline OccupancyNetParkingMsg& operator=(OccupancyNetParkingMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OccupancyNetParkingMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OccupancyNetParkingMsg* internal_default_instance() {
    return reinterpret_cast<const OccupancyNetParkingMsg*>(
               &_OccupancyNetParkingMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(OccupancyNetParkingMsg& a, OccupancyNetParkingMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(OccupancyNetParkingMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OccupancyNetParkingMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OccupancyNetParkingMsg* New() const final {
    return CreateMaybeMessage<OccupancyNetParkingMsg>(nullptr);
  }

  OccupancyNetParkingMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OccupancyNetParkingMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OccupancyNetParkingMsg& from);
  void MergeFrom(const OccupancyNetParkingMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OccupancyNetParkingMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.OccupancyNetParkingMsg";
  }
  protected:
  explicit OccupancyNetParkingMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBevPillarFieldNumber = 2,
    kPillar2DSizeFieldNumber = 1,
  };
  // repeated .SRprotobuf.BevPillar bev_pillar = 2;
  int bev_pillar_size() const;
  private:
  int _internal_bev_pillar_size() const;
  public:
  void clear_bev_pillar();
  ::SRprotobuf::BevPillar* mutable_bev_pillar(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::BevPillar >*
      mutable_bev_pillar();
  private:
  const ::SRprotobuf::BevPillar& _internal_bev_pillar(int index) const;
  ::SRprotobuf::BevPillar* _internal_add_bev_pillar();
  public:
  const ::SRprotobuf::BevPillar& bev_pillar(int index) const;
  ::SRprotobuf::BevPillar* add_bev_pillar();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::BevPillar >&
      bev_pillar() const;

  // .SRprotobuf.Point2f pillar_2d_size = 1;
  bool has_pillar_2d_size() const;
  private:
  bool _internal_has_pillar_2d_size() const;
  public:
  void clear_pillar_2d_size();
  const ::SRprotobuf::Point2f& pillar_2d_size() const;
  ::SRprotobuf::Point2f* release_pillar_2d_size();
  ::SRprotobuf::Point2f* mutable_pillar_2d_size();
  void set_allocated_pillar_2d_size(::SRprotobuf::Point2f* pillar_2d_size);
  private:
  const ::SRprotobuf::Point2f& _internal_pillar_2d_size() const;
  ::SRprotobuf::Point2f* _internal_mutable_pillar_2d_size();
  public:
  void unsafe_arena_set_allocated_pillar_2d_size(
      ::SRprotobuf::Point2f* pillar_2d_size);
  ::SRprotobuf::Point2f* unsafe_arena_release_pillar_2d_size();

  // @@protoc_insertion_point(class_scope:SRprotobuf.OccupancyNetParkingMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::BevPillar > bev_pillar_;
  ::SRprotobuf::Point2f* pillar_2d_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// -------------------------------------------------------------------

class ApDrivingData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SRprotobuf.ApDrivingData) */ {
 public:
  inline ApDrivingData() : ApDrivingData(nullptr) {};
  virtual ~ApDrivingData();

  ApDrivingData(const ApDrivingData& from);
  ApDrivingData(ApDrivingData&& from) noexcept
    : ApDrivingData() {
    *this = ::std::move(from);
  }

  inline ApDrivingData& operator=(const ApDrivingData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApDrivingData& operator=(ApDrivingData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApDrivingData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApDrivingData* internal_default_instance() {
    return reinterpret_cast<const ApDrivingData*>(
               &_ApDrivingData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ApDrivingData& a, ApDrivingData& b) {
    a.Swap(&b);
  }
  inline void Swap(ApDrivingData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApDrivingData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApDrivingData* New() const final {
    return CreateMaybeMessage<ApDrivingData>(nullptr);
  }

  ApDrivingData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApDrivingData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApDrivingData& from);
  void MergeFrom(const ApDrivingData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApDrivingData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SRprotobuf.ApDrivingData";
  }
  protected:
  explicit ApDrivingData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto);
    return ::descriptor_table_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotFieldNumber = 2,
    kObjFieldNumber = 3,
    kLanelinesFieldNumber = 4,
    kCurFloorFieldNumber = 5,
    kTrajectoryFieldNumber = 6,
    kDynObjFieldNumber = 7,
    kSlotAvmFieldNumber = 9,
    kSpdBumpFieldNumber = 10,
    kSlotIdMappingFieldNumber = 11,
    kApStaticObjectFieldNumber = 12,
    kWallFieldNumber = 15,
    kLocationFieldNumber = 1,
    kEssentialMsgFieldNumber = 8,
    kNaviMsgFieldNumber = 13,
    kOnlineLocalMapMsgFieldNumber = 14,
    kOccupancyNetParkingMsgFieldNumber = 16,
  };
  // repeated .SRprotobuf.Slot slot = 2;
  int slot_size() const;
  private:
  int _internal_slot_size() const;
  public:
  void clear_slot();
  ::SRprotobuf::Slot* mutable_slot(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >*
      mutable_slot();
  private:
  const ::SRprotobuf::Slot& _internal_slot(int index) const;
  ::SRprotobuf::Slot* _internal_add_slot();
  public:
  const ::SRprotobuf::Slot& slot(int index) const;
  ::SRprotobuf::Slot* add_slot();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >&
      slot() const;

  // repeated .SRprotobuf.StripObstacle obj = 3;
  int obj_size() const;
  private:
  int _internal_obj_size() const;
  public:
  void clear_obj();
  ::SRprotobuf::StripObstacle* mutable_obj(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::StripObstacle >*
      mutable_obj();
  private:
  const ::SRprotobuf::StripObstacle& _internal_obj(int index) const;
  ::SRprotobuf::StripObstacle* _internal_add_obj();
  public:
  const ::SRprotobuf::StripObstacle& obj(int index) const;
  ::SRprotobuf::StripObstacle* add_obj();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::StripObstacle >&
      obj() const;

  // repeated .SRprotobuf.ApLaneLineInfo lanelines = 4;
  int lanelines_size() const;
  private:
  int _internal_lanelines_size() const;
  public:
  void clear_lanelines();
  ::SRprotobuf::ApLaneLineInfo* mutable_lanelines(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApLaneLineInfo >*
      mutable_lanelines();
  private:
  const ::SRprotobuf::ApLaneLineInfo& _internal_lanelines(int index) const;
  ::SRprotobuf::ApLaneLineInfo* _internal_add_lanelines();
  public:
  const ::SRprotobuf::ApLaneLineInfo& lanelines(int index) const;
  ::SRprotobuf::ApLaneLineInfo* add_lanelines();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApLaneLineInfo >&
      lanelines() const;

  // repeated int32 curFloor = 5;
  int curfloor_size() const;
  private:
  int _internal_curfloor_size() const;
  public:
  void clear_curfloor();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curfloor(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_curfloor() const;
  void _internal_add_curfloor(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_curfloor();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 curfloor(int index) const;
  void set_curfloor(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_curfloor(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      curfloor() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_curfloor();

  // repeated .SRprotobuf.ApTrajectoryDataType Trajectory = 6;
  int trajectory_size() const;
  private:
  int _internal_trajectory_size() const;
  public:
  void clear_trajectory();
  ::SRprotobuf::ApTrajectoryDataType* mutable_trajectory(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApTrajectoryDataType >*
      mutable_trajectory();
  private:
  const ::SRprotobuf::ApTrajectoryDataType& _internal_trajectory(int index) const;
  ::SRprotobuf::ApTrajectoryDataType* _internal_add_trajectory();
  public:
  const ::SRprotobuf::ApTrajectoryDataType& trajectory(int index) const;
  ::SRprotobuf::ApTrajectoryDataType* add_trajectory();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApTrajectoryDataType >&
      trajectory() const;

  // repeated .SRprotobuf.ApDynaObject dynObj = 7;
  int dynobj_size() const;
  private:
  int _internal_dynobj_size() const;
  public:
  void clear_dynobj();
  ::SRprotobuf::ApDynaObject* mutable_dynobj(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApDynaObject >*
      mutable_dynobj();
  private:
  const ::SRprotobuf::ApDynaObject& _internal_dynobj(int index) const;
  ::SRprotobuf::ApDynaObject* _internal_add_dynobj();
  public:
  const ::SRprotobuf::ApDynaObject& dynobj(int index) const;
  ::SRprotobuf::ApDynaObject* add_dynobj();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApDynaObject >&
      dynobj() const;

  // repeated .SRprotobuf.Slot slotAvm = 9;
  int slotavm_size() const;
  private:
  int _internal_slotavm_size() const;
  public:
  void clear_slotavm();
  ::SRprotobuf::Slot* mutable_slotavm(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >*
      mutable_slotavm();
  private:
  const ::SRprotobuf::Slot& _internal_slotavm(int index) const;
  ::SRprotobuf::Slot* _internal_add_slotavm();
  public:
  const ::SRprotobuf::Slot& slotavm(int index) const;
  ::SRprotobuf::Slot* add_slotavm();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >&
      slotavm() const;

  // repeated .SRprotobuf.TrainingSpdBump spdBump = 10;
  int spdbump_size() const;
  private:
  int _internal_spdbump_size() const;
  public:
  void clear_spdbump();
  ::SRprotobuf::TrainingSpdBump* mutable_spdbump(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::TrainingSpdBump >*
      mutable_spdbump();
  private:
  const ::SRprotobuf::TrainingSpdBump& _internal_spdbump(int index) const;
  ::SRprotobuf::TrainingSpdBump* _internal_add_spdbump();
  public:
  const ::SRprotobuf::TrainingSpdBump& spdbump(int index) const;
  ::SRprotobuf::TrainingSpdBump* add_spdbump();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::TrainingSpdBump >&
      spdbump() const;

  // repeated .SRprotobuf.SlotIdMapping slotIdMapping = 11;
  int slotidmapping_size() const;
  private:
  int _internal_slotidmapping_size() const;
  public:
  void clear_slotidmapping();
  ::SRprotobuf::SlotIdMapping* mutable_slotidmapping(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::SlotIdMapping >*
      mutable_slotidmapping();
  private:
  const ::SRprotobuf::SlotIdMapping& _internal_slotidmapping(int index) const;
  ::SRprotobuf::SlotIdMapping* _internal_add_slotidmapping();
  public:
  const ::SRprotobuf::SlotIdMapping& slotidmapping(int index) const;
  ::SRprotobuf::SlotIdMapping* add_slotidmapping();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::SlotIdMapping >&
      slotidmapping() const;

  // repeated .SRprotobuf.Ap_StaticObject ap_StaticObject = 12;
  int ap_staticobject_size() const;
  private:
  int _internal_ap_staticobject_size() const;
  public:
  void clear_ap_staticobject();
  ::SRprotobuf::Ap_StaticObject* mutable_ap_staticobject(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObject >*
      mutable_ap_staticobject();
  private:
  const ::SRprotobuf::Ap_StaticObject& _internal_ap_staticobject(int index) const;
  ::SRprotobuf::Ap_StaticObject* _internal_add_ap_staticobject();
  public:
  const ::SRprotobuf::Ap_StaticObject& ap_staticobject(int index) const;
  ::SRprotobuf::Ap_StaticObject* add_ap_staticobject();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObject >&
      ap_staticobject() const;

  // repeated .SRprotobuf.Wall wall = 15;
  int wall_size() const;
  private:
  int _internal_wall_size() const;
  public:
  void clear_wall();
  ::SRprotobuf::Wall* mutable_wall(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Wall >*
      mutable_wall();
  private:
  const ::SRprotobuf::Wall& _internal_wall(int index) const;
  ::SRprotobuf::Wall* _internal_add_wall();
  public:
  const ::SRprotobuf::Wall& wall(int index) const;
  ::SRprotobuf::Wall* add_wall();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Wall >&
      wall() const;

  // .SRprotobuf.Location location = 1;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::SRprotobuf::Location& location() const;
  ::SRprotobuf::Location* release_location();
  ::SRprotobuf::Location* mutable_location();
  void set_allocated_location(::SRprotobuf::Location* location);
  private:
  const ::SRprotobuf::Location& _internal_location() const;
  ::SRprotobuf::Location* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::SRprotobuf::Location* location);
  ::SRprotobuf::Location* unsafe_arena_release_location();

  // .SRprotobuf.ApEssentialMsg essentialMsg = 8;
  bool has_essentialmsg() const;
  private:
  bool _internal_has_essentialmsg() const;
  public:
  void clear_essentialmsg();
  const ::SRprotobuf::ApEssentialMsg& essentialmsg() const;
  ::SRprotobuf::ApEssentialMsg* release_essentialmsg();
  ::SRprotobuf::ApEssentialMsg* mutable_essentialmsg();
  void set_allocated_essentialmsg(::SRprotobuf::ApEssentialMsg* essentialmsg);
  private:
  const ::SRprotobuf::ApEssentialMsg& _internal_essentialmsg() const;
  ::SRprotobuf::ApEssentialMsg* _internal_mutable_essentialmsg();
  public:
  void unsafe_arena_set_allocated_essentialmsg(
      ::SRprotobuf::ApEssentialMsg* essentialmsg);
  ::SRprotobuf::ApEssentialMsg* unsafe_arena_release_essentialmsg();

  // .SRprotobuf.ApNaviMsg naviMsg = 13;
  bool has_navimsg() const;
  private:
  bool _internal_has_navimsg() const;
  public:
  void clear_navimsg();
  const ::SRprotobuf::ApNaviMsg& navimsg() const;
  ::SRprotobuf::ApNaviMsg* release_navimsg();
  ::SRprotobuf::ApNaviMsg* mutable_navimsg();
  void set_allocated_navimsg(::SRprotobuf::ApNaviMsg* navimsg);
  private:
  const ::SRprotobuf::ApNaviMsg& _internal_navimsg() const;
  ::SRprotobuf::ApNaviMsg* _internal_mutable_navimsg();
  public:
  void unsafe_arena_set_allocated_navimsg(
      ::SRprotobuf::ApNaviMsg* navimsg);
  ::SRprotobuf::ApNaviMsg* unsafe_arena_release_navimsg();

  // .SRprotobuf.OnlineLocalMapMsg online_local_map_msg = 14;
  bool has_online_local_map_msg() const;
  private:
  bool _internal_has_online_local_map_msg() const;
  public:
  void clear_online_local_map_msg();
  const ::SRprotobuf::OnlineLocalMapMsg& online_local_map_msg() const;
  ::SRprotobuf::OnlineLocalMapMsg* release_online_local_map_msg();
  ::SRprotobuf::OnlineLocalMapMsg* mutable_online_local_map_msg();
  void set_allocated_online_local_map_msg(::SRprotobuf::OnlineLocalMapMsg* online_local_map_msg);
  private:
  const ::SRprotobuf::OnlineLocalMapMsg& _internal_online_local_map_msg() const;
  ::SRprotobuf::OnlineLocalMapMsg* _internal_mutable_online_local_map_msg();
  public:
  void unsafe_arena_set_allocated_online_local_map_msg(
      ::SRprotobuf::OnlineLocalMapMsg* online_local_map_msg);
  ::SRprotobuf::OnlineLocalMapMsg* unsafe_arena_release_online_local_map_msg();

  // .SRprotobuf.OccupancyNetParkingMsg occupancy_net_parking_msg = 16;
  bool has_occupancy_net_parking_msg() const;
  private:
  bool _internal_has_occupancy_net_parking_msg() const;
  public:
  void clear_occupancy_net_parking_msg();
  const ::SRprotobuf::OccupancyNetParkingMsg& occupancy_net_parking_msg() const;
  ::SRprotobuf::OccupancyNetParkingMsg* release_occupancy_net_parking_msg();
  ::SRprotobuf::OccupancyNetParkingMsg* mutable_occupancy_net_parking_msg();
  void set_allocated_occupancy_net_parking_msg(::SRprotobuf::OccupancyNetParkingMsg* occupancy_net_parking_msg);
  private:
  const ::SRprotobuf::OccupancyNetParkingMsg& _internal_occupancy_net_parking_msg() const;
  ::SRprotobuf::OccupancyNetParkingMsg* _internal_mutable_occupancy_net_parking_msg();
  public:
  void unsafe_arena_set_allocated_occupancy_net_parking_msg(
      ::SRprotobuf::OccupancyNetParkingMsg* occupancy_net_parking_msg);
  ::SRprotobuf::OccupancyNetParkingMsg* unsafe_arena_release_occupancy_net_parking_msg();

  // @@protoc_insertion_point(class_scope:SRprotobuf.ApDrivingData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot > slot_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::StripObstacle > obj_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApLaneLineInfo > lanelines_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > curfloor_;
  mutable std::atomic<int> _curfloor_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApTrajectoryDataType > trajectory_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApDynaObject > dynobj_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot > slotavm_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::TrainingSpdBump > spdbump_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::SlotIdMapping > slotidmapping_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObject > ap_staticobject_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Wall > wall_;
  ::SRprotobuf::Location* location_;
  ::SRprotobuf::ApEssentialMsg* essentialmsg_;
  ::SRprotobuf::ApNaviMsg* navimsg_;
  ::SRprotobuf::OnlineLocalMapMsg* online_local_map_msg_;
  ::SRprotobuf::OccupancyNetParkingMsg* occupancy_net_parking_msg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StripObstacle

// repeated float segment = 1;
inline int StripObstacle::_internal_segment_size() const {
  return segment_.size();
}
inline int StripObstacle::segment_size() const {
  return _internal_segment_size();
}
inline void StripObstacle::clear_segment() {
  segment_.Clear();
}
inline float StripObstacle::_internal_segment(int index) const {
  return segment_.Get(index);
}
inline float StripObstacle::segment(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.StripObstacle.segment)
  return _internal_segment(index);
}
inline void StripObstacle::set_segment(int index, float value) {
  segment_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.StripObstacle.segment)
}
inline void StripObstacle::_internal_add_segment(float value) {
  segment_.Add(value);
}
inline void StripObstacle::add_segment(float value) {
  _internal_add_segment(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.StripObstacle.segment)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
StripObstacle::_internal_segment() const {
  return segment_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
StripObstacle::segment() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.StripObstacle.segment)
  return _internal_segment();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
StripObstacle::_internal_mutable_segment() {
  return &segment_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
StripObstacle::mutable_segment() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.StripObstacle.segment)
  return _internal_mutable_segment();
}

// int32 type = 2;
inline void StripObstacle::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::type() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.StripObstacle.type)
  return _internal_type();
}
inline void StripObstacle::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void StripObstacle::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.StripObstacle.type)
}

// .SRprotobuf.Size3f size = 3;
inline bool StripObstacle::_internal_has_size() const {
  return this != internal_default_instance() && size_ != nullptr;
}
inline bool StripObstacle::has_size() const {
  return _internal_has_size();
}
inline const ::SRprotobuf::Size3f& StripObstacle::_internal_size() const {
  const ::SRprotobuf::Size3f* p = size_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Size3f*>(
      &::SRprotobuf::_Size3f_default_instance_);
}
inline const ::SRprotobuf::Size3f& StripObstacle::size() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.StripObstacle.size)
  return _internal_size();
}
inline void StripObstacle::unsafe_arena_set_allocated_size(
    ::SRprotobuf::Size3f* size) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(size_);
  }
  size_ = size;
  if (size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.StripObstacle.size)
}
inline ::SRprotobuf::Size3f* StripObstacle::release_size() {
  auto temp = unsafe_arena_release_size();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Size3f* StripObstacle::unsafe_arena_release_size() {
  // @@protoc_insertion_point(field_release:SRprotobuf.StripObstacle.size)
  
  ::SRprotobuf::Size3f* temp = size_;
  size_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Size3f* StripObstacle::_internal_mutable_size() {
  
  if (size_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Size3f>(GetArena());
    size_ = p;
  }
  return size_;
}
inline ::SRprotobuf::Size3f* StripObstacle::mutable_size() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.StripObstacle.size)
  return _internal_mutable_size();
}
inline void StripObstacle::set_allocated_size(::SRprotobuf::Size3f* size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(size_);
  }
  if (size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(size)->GetArena();
    if (message_arena != submessage_arena) {
      size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, size, submessage_arena);
    }
    
  } else {
    
  }
  size_ = size;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.StripObstacle.size)
}

// int32 color = 4;
inline void StripObstacle::clear_color() {
  color_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::_internal_color() const {
  return color_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::color() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.StripObstacle.color)
  return _internal_color();
}
inline void StripObstacle::_internal_set_color(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  color_ = value;
}
inline void StripObstacle::set_color(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_color(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.StripObstacle.color)
}

// int32 id = 5;
inline void StripObstacle::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::id() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.StripObstacle.id)
  return _internal_id();
}
inline void StripObstacle::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void StripObstacle::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.StripObstacle.id)
}

// int32 attri = 6;
inline void StripObstacle::clear_attri() {
  attri_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::_internal_attri() const {
  return attri_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StripObstacle::attri() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.StripObstacle.attri)
  return _internal_attri();
}
inline void StripObstacle::_internal_set_attri(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  attri_ = value;
}
inline void StripObstacle::set_attri(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attri(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.StripObstacle.attri)
}

// -------------------------------------------------------------------

// ApPathPoint

// float confidence = 1;
inline void ApPathPoint::clear_confidence() {
  confidence_ = 0;
}
inline float ApPathPoint::_internal_confidence() const {
  return confidence_;
}
inline float ApPathPoint::confidence() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.confidence)
  return _internal_confidence();
}
inline void ApPathPoint::_internal_set_confidence(float value) {
  
  confidence_ = value;
}
inline void ApPathPoint::set_confidence(float value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.confidence)
}

// .SRprotobuf.Point3f base_point = 2;
inline bool ApPathPoint::_internal_has_base_point() const {
  return this != internal_default_instance() && base_point_ != nullptr;
}
inline bool ApPathPoint::has_base_point() const {
  return _internal_has_base_point();
}
inline const ::SRprotobuf::Point3f& ApPathPoint::_internal_base_point() const {
  const ::SRprotobuf::Point3f* p = base_point_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Point3f*>(
      &::SRprotobuf::_Point3f_default_instance_);
}
inline const ::SRprotobuf::Point3f& ApPathPoint::base_point() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.base_point)
  return _internal_base_point();
}
inline void ApPathPoint::unsafe_arena_set_allocated_base_point(
    ::SRprotobuf::Point3f* base_point) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(base_point_);
  }
  base_point_ = base_point;
  if (base_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApPathPoint.base_point)
}
inline ::SRprotobuf::Point3f* ApPathPoint::release_base_point() {
  auto temp = unsafe_arena_release_base_point();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Point3f* ApPathPoint::unsafe_arena_release_base_point() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApPathPoint.base_point)
  
  ::SRprotobuf::Point3f* temp = base_point_;
  base_point_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Point3f* ApPathPoint::_internal_mutable_base_point() {
  
  if (base_point_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Point3f>(GetArena());
    base_point_ = p;
  }
  return base_point_;
}
inline ::SRprotobuf::Point3f* ApPathPoint::mutable_base_point() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApPathPoint.base_point)
  return _internal_mutable_base_point();
}
inline void ApPathPoint::set_allocated_base_point(::SRprotobuf::Point3f* base_point) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(base_point_);
  }
  if (base_point) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(base_point)->GetArena();
    if (message_arena != submessage_arena) {
      base_point = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, base_point, submessage_arena);
    }
    
  } else {
    
  }
  base_point_ = base_point;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApPathPoint.base_point)
}

// float theta = 3;
inline void ApPathPoint::clear_theta() {
  theta_ = 0;
}
inline float ApPathPoint::_internal_theta() const {
  return theta_;
}
inline float ApPathPoint::theta() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.theta)
  return _internal_theta();
}
inline void ApPathPoint::_internal_set_theta(float value) {
  
  theta_ = value;
}
inline void ApPathPoint::set_theta(float value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.theta)
}

// float kappa = 4;
inline void ApPathPoint::clear_kappa() {
  kappa_ = 0;
}
inline float ApPathPoint::_internal_kappa() const {
  return kappa_;
}
inline float ApPathPoint::kappa() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.kappa)
  return _internal_kappa();
}
inline void ApPathPoint::_internal_set_kappa(float value) {
  
  kappa_ = value;
}
inline void ApPathPoint::set_kappa(float value) {
  _internal_set_kappa(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.kappa)
}

// float s = 5;
inline void ApPathPoint::clear_s() {
  s_ = 0;
}
inline float ApPathPoint::_internal_s() const {
  return s_;
}
inline float ApPathPoint::s() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.s)
  return _internal_s();
}
inline void ApPathPoint::_internal_set_s(float value) {
  
  s_ = value;
}
inline void ApPathPoint::set_s(float value) {
  _internal_set_s(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.s)
}

// float left_width = 6;
inline void ApPathPoint::clear_left_width() {
  left_width_ = 0;
}
inline float ApPathPoint::_internal_left_width() const {
  return left_width_;
}
inline float ApPathPoint::left_width() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.left_width)
  return _internal_left_width();
}
inline void ApPathPoint::_internal_set_left_width(float value) {
  
  left_width_ = value;
}
inline void ApPathPoint::set_left_width(float value) {
  _internal_set_left_width(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.left_width)
}

// float right_width = 7;
inline void ApPathPoint::clear_right_width() {
  right_width_ = 0;
}
inline float ApPathPoint::_internal_right_width() const {
  return right_width_;
}
inline float ApPathPoint::right_width() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.right_width)
  return _internal_right_width();
}
inline void ApPathPoint::_internal_set_right_width(float value) {
  
  right_width_ = value;
}
inline void ApPathPoint::set_right_width(float value) {
  _internal_set_right_width(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.right_width)
}

// float dkappa = 8;
inline void ApPathPoint::clear_dkappa() {
  dkappa_ = 0;
}
inline float ApPathPoint::_internal_dkappa() const {
  return dkappa_;
}
inline float ApPathPoint::dkappa() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.dkappa)
  return _internal_dkappa();
}
inline void ApPathPoint::_internal_set_dkappa(float value) {
  
  dkappa_ = value;
}
inline void ApPathPoint::set_dkappa(float value) {
  _internal_set_dkappa(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.dkappa)
}

// float ddkappa = 9;
inline void ApPathPoint::clear_ddkappa() {
  ddkappa_ = 0;
}
inline float ApPathPoint::_internal_ddkappa() const {
  return ddkappa_;
}
inline float ApPathPoint::ddkappa() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.ddkappa)
  return _internal_ddkappa();
}
inline void ApPathPoint::_internal_set_ddkappa(float value) {
  
  ddkappa_ = value;
}
inline void ApPathPoint::set_ddkappa(float value) {
  _internal_set_ddkappa(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.ddkappa)
}

// float lane_width = 10;
inline void ApPathPoint::clear_lane_width() {
  lane_width_ = 0;
}
inline float ApPathPoint::_internal_lane_width() const {
  return lane_width_;
}
inline float ApPathPoint::lane_width() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.lane_width)
  return _internal_lane_width();
}
inline void ApPathPoint::_internal_set_lane_width(float value) {
  
  lane_width_ = value;
}
inline void ApPathPoint::set_lane_width(float value) {
  _internal_set_lane_width(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.lane_width)
}

// uint32 link_id = 11;
inline void ApPathPoint::clear_link_id() {
  link_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ApPathPoint::_internal_link_id() const {
  return link_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ApPathPoint::link_id() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.link_id)
  return _internal_link_id();
}
inline void ApPathPoint::_internal_set_link_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  link_id_ = value;
}
inline void ApPathPoint::set_link_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_link_id(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.link_id)
}

// .SRprotobuf.FloorLevel floor_level = 12;
inline bool ApPathPoint::_internal_has_floor_level() const {
  return this != internal_default_instance() && floor_level_ != nullptr;
}
inline bool ApPathPoint::has_floor_level() const {
  return _internal_has_floor_level();
}
inline const ::SRprotobuf::FloorLevel& ApPathPoint::_internal_floor_level() const {
  const ::SRprotobuf::FloorLevel* p = floor_level_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::FloorLevel*>(
      &::SRprotobuf::_FloorLevel_default_instance_);
}
inline const ::SRprotobuf::FloorLevel& ApPathPoint::floor_level() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.floor_level)
  return _internal_floor_level();
}
inline void ApPathPoint::unsafe_arena_set_allocated_floor_level(
    ::SRprotobuf::FloorLevel* floor_level) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(floor_level_);
  }
  floor_level_ = floor_level;
  if (floor_level) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApPathPoint.floor_level)
}
inline ::SRprotobuf::FloorLevel* ApPathPoint::release_floor_level() {
  auto temp = unsafe_arena_release_floor_level();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::FloorLevel* ApPathPoint::unsafe_arena_release_floor_level() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApPathPoint.floor_level)
  
  ::SRprotobuf::FloorLevel* temp = floor_level_;
  floor_level_ = nullptr;
  return temp;
}
inline ::SRprotobuf::FloorLevel* ApPathPoint::_internal_mutable_floor_level() {
  
  if (floor_level_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::FloorLevel>(GetArena());
    floor_level_ = p;
  }
  return floor_level_;
}
inline ::SRprotobuf::FloorLevel* ApPathPoint::mutable_floor_level() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApPathPoint.floor_level)
  return _internal_mutable_floor_level();
}
inline void ApPathPoint::set_allocated_floor_level(::SRprotobuf::FloorLevel* floor_level) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(floor_level_);
  }
  if (floor_level) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(floor_level)->GetArena();
    if (message_arena != submessage_arena) {
      floor_level = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, floor_level, submessage_arena);
    }
    
  } else {
    
  }
  floor_level_ = floor_level;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApPathPoint.floor_level)
}

// int32 hill_status = 13;
inline void ApPathPoint::clear_hill_status() {
  hill_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApPathPoint::_internal_hill_status() const {
  return hill_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApPathPoint::hill_status() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApPathPoint.hill_status)
  return _internal_hill_status();
}
inline void ApPathPoint::_internal_set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hill_status_ = value;
}
inline void ApPathPoint::set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hill_status(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApPathPoint.hill_status)
}

// -------------------------------------------------------------------

// ApLaneLineInfo

// int32 attri = 1;
inline void ApLaneLineInfo::clear_attri() {
  attri_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApLaneLineInfo::_internal_attri() const {
  return attri_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApLaneLineInfo::attri() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApLaneLineInfo.attri)
  return _internal_attri();
}
inline void ApLaneLineInfo::_internal_set_attri(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  attri_ = value;
}
inline void ApLaneLineInfo::set_attri(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attri(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApLaneLineInfo.attri)
}

// repeated .SRprotobuf.ApPathPoint path_points = 2;
inline int ApLaneLineInfo::_internal_path_points_size() const {
  return path_points_.size();
}
inline int ApLaneLineInfo::path_points_size() const {
  return _internal_path_points_size();
}
inline void ApLaneLineInfo::clear_path_points() {
  path_points_.Clear();
}
inline ::SRprotobuf::ApPathPoint* ApLaneLineInfo::mutable_path_points(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApLaneLineInfo.path_points)
  return path_points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >*
ApLaneLineInfo::mutable_path_points() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApLaneLineInfo.path_points)
  return &path_points_;
}
inline const ::SRprotobuf::ApPathPoint& ApLaneLineInfo::_internal_path_points(int index) const {
  return path_points_.Get(index);
}
inline const ::SRprotobuf::ApPathPoint& ApLaneLineInfo::path_points(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApLaneLineInfo.path_points)
  return _internal_path_points(index);
}
inline ::SRprotobuf::ApPathPoint* ApLaneLineInfo::_internal_add_path_points() {
  return path_points_.Add();
}
inline ::SRprotobuf::ApPathPoint* ApLaneLineInfo::add_path_points() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApLaneLineInfo.path_points)
  return _internal_add_path_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >&
ApLaneLineInfo::path_points() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApLaneLineInfo.path_points)
  return path_points_;
}

// -------------------------------------------------------------------

// ApDynaObject

// uint32 id = 1;
inline void ApDynaObject::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ApDynaObject::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ApDynaObject::id() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.id)
  return _internal_id();
}
inline void ApDynaObject::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void ApDynaObject::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.id)
}

// .SRprotobuf.Size3f size = 2;
inline bool ApDynaObject::_internal_has_size() const {
  return this != internal_default_instance() && size_ != nullptr;
}
inline bool ApDynaObject::has_size() const {
  return _internal_has_size();
}
inline const ::SRprotobuf::Size3f& ApDynaObject::_internal_size() const {
  const ::SRprotobuf::Size3f* p = size_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Size3f*>(
      &::SRprotobuf::_Size3f_default_instance_);
}
inline const ::SRprotobuf::Size3f& ApDynaObject::size() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.size)
  return _internal_size();
}
inline void ApDynaObject::unsafe_arena_set_allocated_size(
    ::SRprotobuf::Size3f* size) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(size_);
  }
  size_ = size;
  if (size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDynaObject.size)
}
inline ::SRprotobuf::Size3f* ApDynaObject::release_size() {
  auto temp = unsafe_arena_release_size();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Size3f* ApDynaObject::unsafe_arena_release_size() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDynaObject.size)
  
  ::SRprotobuf::Size3f* temp = size_;
  size_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Size3f* ApDynaObject::_internal_mutable_size() {
  
  if (size_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Size3f>(GetArena());
    size_ = p;
  }
  return size_;
}
inline ::SRprotobuf::Size3f* ApDynaObject::mutable_size() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDynaObject.size)
  return _internal_mutable_size();
}
inline void ApDynaObject::set_allocated_size(::SRprotobuf::Size3f* size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(size_);
  }
  if (size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(size)->GetArena();
    if (message_arena != submessage_arena) {
      size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, size, submessage_arena);
    }
    
  } else {
    
  }
  size_ = size;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDynaObject.size)
}

// .SRprotobuf.ApObjectType type = 3;
inline void ApDynaObject::clear_type() {
  type_ = 0;
}
inline ::SRprotobuf::ApObjectType ApDynaObject::_internal_type() const {
  return static_cast< ::SRprotobuf::ApObjectType >(type_);
}
inline ::SRprotobuf::ApObjectType ApDynaObject::type() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.type)
  return _internal_type();
}
inline void ApDynaObject::_internal_set_type(::SRprotobuf::ApObjectType value) {
  
  type_ = value;
}
inline void ApDynaObject::set_type(::SRprotobuf::ApObjectType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.type)
}

// .SRprotobuf.Pose3f pose = 4;
inline bool ApDynaObject::_internal_has_pose() const {
  return this != internal_default_instance() && pose_ != nullptr;
}
inline bool ApDynaObject::has_pose() const {
  return _internal_has_pose();
}
inline const ::SRprotobuf::Pose3f& ApDynaObject::_internal_pose() const {
  const ::SRprotobuf::Pose3f* p = pose_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Pose3f*>(
      &::SRprotobuf::_Pose3f_default_instance_);
}
inline const ::SRprotobuf::Pose3f& ApDynaObject::pose() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.pose)
  return _internal_pose();
}
inline void ApDynaObject::unsafe_arena_set_allocated_pose(
    ::SRprotobuf::Pose3f* pose) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pose_);
  }
  pose_ = pose;
  if (pose) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDynaObject.pose)
}
inline ::SRprotobuf::Pose3f* ApDynaObject::release_pose() {
  auto temp = unsafe_arena_release_pose();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Pose3f* ApDynaObject::unsafe_arena_release_pose() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDynaObject.pose)
  
  ::SRprotobuf::Pose3f* temp = pose_;
  pose_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Pose3f* ApDynaObject::_internal_mutable_pose() {
  
  if (pose_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Pose3f>(GetArena());
    pose_ = p;
  }
  return pose_;
}
inline ::SRprotobuf::Pose3f* ApDynaObject::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDynaObject.pose)
  return _internal_mutable_pose();
}
inline void ApDynaObject::set_allocated_pose(::SRprotobuf::Pose3f* pose) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pose_);
  }
  if (pose) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pose)->GetArena();
    if (message_arena != submessage_arena) {
      pose = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pose, submessage_arena);
    }
    
  } else {
    
  }
  pose_ = pose;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDynaObject.pose)
}

// .SRprotobuf.Point3f pt = 5;
inline bool ApDynaObject::_internal_has_pt() const {
  return this != internal_default_instance() && pt_ != nullptr;
}
inline bool ApDynaObject::has_pt() const {
  return _internal_has_pt();
}
inline const ::SRprotobuf::Point3f& ApDynaObject::_internal_pt() const {
  const ::SRprotobuf::Point3f* p = pt_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Point3f*>(
      &::SRprotobuf::_Point3f_default_instance_);
}
inline const ::SRprotobuf::Point3f& ApDynaObject::pt() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.pt)
  return _internal_pt();
}
inline void ApDynaObject::unsafe_arena_set_allocated_pt(
    ::SRprotobuf::Point3f* pt) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pt_);
  }
  pt_ = pt;
  if (pt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDynaObject.pt)
}
inline ::SRprotobuf::Point3f* ApDynaObject::release_pt() {
  auto temp = unsafe_arena_release_pt();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Point3f* ApDynaObject::unsafe_arena_release_pt() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDynaObject.pt)
  
  ::SRprotobuf::Point3f* temp = pt_;
  pt_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Point3f* ApDynaObject::_internal_mutable_pt() {
  
  if (pt_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Point3f>(GetArena());
    pt_ = p;
  }
  return pt_;
}
inline ::SRprotobuf::Point3f* ApDynaObject::mutable_pt() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDynaObject.pt)
  return _internal_mutable_pt();
}
inline void ApDynaObject::set_allocated_pt(::SRprotobuf::Point3f* pt) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pt_);
  }
  if (pt) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pt)->GetArena();
    if (message_arena != submessage_arena) {
      pt = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pt, submessage_arena);
    }
    
  } else {
    
  }
  pt_ = pt;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDynaObject.pt)
}

// int32 color = 6;
inline void ApDynaObject::clear_color() {
  color_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApDynaObject::_internal_color() const {
  return color_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApDynaObject::color() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.color)
  return _internal_color();
}
inline void ApDynaObject::_internal_set_color(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  color_ = value;
}
inline void ApDynaObject::set_color(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_color(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.color)
}

// .SRprotobuf.ApSignalLight signal_light = 7;
inline void ApDynaObject::clear_signal_light() {
  signal_light_ = 0;
}
inline ::SRprotobuf::ApSignalLight ApDynaObject::_internal_signal_light() const {
  return static_cast< ::SRprotobuf::ApSignalLight >(signal_light_);
}
inline ::SRprotobuf::ApSignalLight ApDynaObject::signal_light() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.signal_light)
  return _internal_signal_light();
}
inline void ApDynaObject::_internal_set_signal_light(::SRprotobuf::ApSignalLight value) {
  
  signal_light_ = value;
}
inline void ApDynaObject::set_signal_light(::SRprotobuf::ApSignalLight value) {
  _internal_set_signal_light(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.signal_light)
}

// .SRprotobuf.ApBrakeLight brake_light = 8;
inline void ApDynaObject::clear_brake_light() {
  brake_light_ = 0;
}
inline ::SRprotobuf::ApBrakeLight ApDynaObject::_internal_brake_light() const {
  return static_cast< ::SRprotobuf::ApBrakeLight >(brake_light_);
}
inline ::SRprotobuf::ApBrakeLight ApDynaObject::brake_light() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.brake_light)
  return _internal_brake_light();
}
inline void ApDynaObject::_internal_set_brake_light(::SRprotobuf::ApBrakeLight value) {
  
  brake_light_ = value;
}
inline void ApDynaObject::set_brake_light(::SRprotobuf::ApBrakeLight value) {
  _internal_set_brake_light(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.brake_light)
}

// bool is_in_blind_region = 9;
inline void ApDynaObject::clear_is_in_blind_region() {
  is_in_blind_region_ = false;
}
inline bool ApDynaObject::_internal_is_in_blind_region() const {
  return is_in_blind_region_;
}
inline bool ApDynaObject::is_in_blind_region() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.is_in_blind_region)
  return _internal_is_in_blind_region();
}
inline void ApDynaObject::_internal_set_is_in_blind_region(bool value) {
  
  is_in_blind_region_ = value;
}
inline void ApDynaObject::set_is_in_blind_region(bool value) {
  _internal_set_is_in_blind_region(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.is_in_blind_region)
}

// uint32 blind_region = 10;
inline void ApDynaObject::clear_blind_region() {
  blind_region_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ApDynaObject::_internal_blind_region() const {
  return blind_region_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ApDynaObject::blind_region() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.blind_region)
  return _internal_blind_region();
}
inline void ApDynaObject::_internal_set_blind_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  blind_region_ = value;
}
inline void ApDynaObject::set_blind_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blind_region(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.blind_region)
}

// bool is_static = 11;
inline void ApDynaObject::clear_is_static() {
  is_static_ = false;
}
inline bool ApDynaObject::_internal_is_static() const {
  return is_static_;
}
inline bool ApDynaObject::is_static() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.is_static)
  return _internal_is_static();
}
inline void ApDynaObject::_internal_set_is_static(bool value) {
  
  is_static_ = value;
}
inline void ApDynaObject::set_is_static(bool value) {
  _internal_set_is_static(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.is_static)
}

// bool is_straddling = 12;
inline void ApDynaObject::clear_is_straddling() {
  is_straddling_ = false;
}
inline bool ApDynaObject::_internal_is_straddling() const {
  return is_straddling_;
}
inline bool ApDynaObject::is_straddling() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.is_straddling)
  return _internal_is_straddling();
}
inline void ApDynaObject::_internal_set_is_straddling(bool value) {
  
  is_straddling_ = value;
}
inline void ApDynaObject::set_is_straddling(bool value) {
  _internal_set_is_straddling(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.is_straddling)
}

// bool is_light_on = 13;
inline void ApDynaObject::clear_is_light_on() {
  is_light_on_ = false;
}
inline bool ApDynaObject::_internal_is_light_on() const {
  return is_light_on_;
}
inline bool ApDynaObject::is_light_on() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.is_light_on)
  return _internal_is_light_on();
}
inline void ApDynaObject::_internal_set_is_light_on(bool value) {
  
  is_light_on_ = value;
}
inline void ApDynaObject::set_is_light_on(bool value) {
  _internal_set_is_light_on(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.is_light_on)
}

// repeated float local_linear_velocity = 14;
inline int ApDynaObject::_internal_local_linear_velocity_size() const {
  return local_linear_velocity_.size();
}
inline int ApDynaObject::local_linear_velocity_size() const {
  return _internal_local_linear_velocity_size();
}
inline void ApDynaObject::clear_local_linear_velocity() {
  local_linear_velocity_.Clear();
}
inline float ApDynaObject::_internal_local_linear_velocity(int index) const {
  return local_linear_velocity_.Get(index);
}
inline float ApDynaObject::local_linear_velocity(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.local_linear_velocity)
  return _internal_local_linear_velocity(index);
}
inline void ApDynaObject::set_local_linear_velocity(int index, float value) {
  local_linear_velocity_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.local_linear_velocity)
}
inline void ApDynaObject::_internal_add_local_linear_velocity(float value) {
  local_linear_velocity_.Add(value);
}
inline void ApDynaObject::add_local_linear_velocity(float value) {
  _internal_add_local_linear_velocity(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDynaObject.local_linear_velocity)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ApDynaObject::_internal_local_linear_velocity() const {
  return local_linear_velocity_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ApDynaObject::local_linear_velocity() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDynaObject.local_linear_velocity)
  return _internal_local_linear_velocity();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ApDynaObject::_internal_mutable_local_linear_velocity() {
  return &local_linear_velocity_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ApDynaObject::mutable_local_linear_velocity() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDynaObject.local_linear_velocity)
  return _internal_mutable_local_linear_velocity();
}

// repeated float local_linear_acceleration = 15;
inline int ApDynaObject::_internal_local_linear_acceleration_size() const {
  return local_linear_acceleration_.size();
}
inline int ApDynaObject::local_linear_acceleration_size() const {
  return _internal_local_linear_acceleration_size();
}
inline void ApDynaObject::clear_local_linear_acceleration() {
  local_linear_acceleration_.Clear();
}
inline float ApDynaObject::_internal_local_linear_acceleration(int index) const {
  return local_linear_acceleration_.Get(index);
}
inline float ApDynaObject::local_linear_acceleration(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDynaObject.local_linear_acceleration)
  return _internal_local_linear_acceleration(index);
}
inline void ApDynaObject::set_local_linear_acceleration(int index, float value) {
  local_linear_acceleration_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDynaObject.local_linear_acceleration)
}
inline void ApDynaObject::_internal_add_local_linear_acceleration(float value) {
  local_linear_acceleration_.Add(value);
}
inline void ApDynaObject::add_local_linear_acceleration(float value) {
  _internal_add_local_linear_acceleration(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDynaObject.local_linear_acceleration)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ApDynaObject::_internal_local_linear_acceleration() const {
  return local_linear_acceleration_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ApDynaObject::local_linear_acceleration() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDynaObject.local_linear_acceleration)
  return _internal_local_linear_acceleration();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ApDynaObject::_internal_mutable_local_linear_acceleration() {
  return &local_linear_acceleration_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ApDynaObject::mutable_local_linear_acceleration() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDynaObject.local_linear_acceleration)
  return _internal_mutable_local_linear_acceleration();
}

// -------------------------------------------------------------------

// ApTrajectoryDataType

// int32 id = 1;
inline void ApTrajectoryDataType::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApTrajectoryDataType::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApTrajectoryDataType::id() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApTrajectoryDataType.id)
  return _internal_id();
}
inline void ApTrajectoryDataType::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ApTrajectoryDataType::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApTrajectoryDataType.id)
}

// .SRprotobuf.ApTrajectoryDataType.ApTrajType type = 2;
inline void ApTrajectoryDataType::clear_type() {
  type_ = 0;
}
inline ::SRprotobuf::ApTrajectoryDataType_ApTrajType ApTrajectoryDataType::_internal_type() const {
  return static_cast< ::SRprotobuf::ApTrajectoryDataType_ApTrajType >(type_);
}
inline ::SRprotobuf::ApTrajectoryDataType_ApTrajType ApTrajectoryDataType::type() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApTrajectoryDataType.type)
  return _internal_type();
}
inline void ApTrajectoryDataType::_internal_set_type(::SRprotobuf::ApTrajectoryDataType_ApTrajType value) {
  
  type_ = value;
}
inline void ApTrajectoryDataType::set_type(::SRprotobuf::ApTrajectoryDataType_ApTrajType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApTrajectoryDataType.type)
}

// repeated .SRprotobuf.ApPathPoint Trajectory = 3;
inline int ApTrajectoryDataType::_internal_trajectory_size() const {
  return trajectory_.size();
}
inline int ApTrajectoryDataType::trajectory_size() const {
  return _internal_trajectory_size();
}
inline void ApTrajectoryDataType::clear_trajectory() {
  trajectory_.Clear();
}
inline ::SRprotobuf::ApPathPoint* ApTrajectoryDataType::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApTrajectoryDataType.Trajectory)
  return trajectory_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >*
ApTrajectoryDataType::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApTrajectoryDataType.Trajectory)
  return &trajectory_;
}
inline const ::SRprotobuf::ApPathPoint& ApTrajectoryDataType::_internal_trajectory(int index) const {
  return trajectory_.Get(index);
}
inline const ::SRprotobuf::ApPathPoint& ApTrajectoryDataType::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApTrajectoryDataType.Trajectory)
  return _internal_trajectory(index);
}
inline ::SRprotobuf::ApPathPoint* ApTrajectoryDataType::_internal_add_trajectory() {
  return trajectory_.Add();
}
inline ::SRprotobuf::ApPathPoint* ApTrajectoryDataType::add_trajectory() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApTrajectoryDataType.Trajectory)
  return _internal_add_trajectory();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApPathPoint >&
ApTrajectoryDataType::trajectory() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApTrajectoryDataType.Trajectory)
  return trajectory_;
}

// -------------------------------------------------------------------

// BDistancePercent

// float distance = 1;
inline void BDistancePercent::clear_distance() {
  distance_ = 0;
}
inline float BDistancePercent::_internal_distance() const {
  return distance_;
}
inline float BDistancePercent::distance() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.BDistancePercent.distance)
  return _internal_distance();
}
inline void BDistancePercent::_internal_set_distance(float value) {
  
  distance_ = value;
}
inline void BDistancePercent::set_distance(float value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.BDistancePercent.distance)
}

// float percent = 2;
inline void BDistancePercent::clear_percent() {
  percent_ = 0;
}
inline float BDistancePercent::_internal_percent() const {
  return percent_;
}
inline float BDistancePercent::percent() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.BDistancePercent.percent)
  return _internal_percent();
}
inline void BDistancePercent::_internal_set_percent(float value) {
  
  percent_ = value;
}
inline void BDistancePercent::set_percent(float value) {
  _internal_set_percent(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.BDistancePercent.percent)
}

// -------------------------------------------------------------------

// RTFStatusMsg

// int32 rtf_st = 1;
inline void RTFStatusMsg::clear_rtf_st() {
  rtf_st_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RTFStatusMsg::_internal_rtf_st() const {
  return rtf_st_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RTFStatusMsg::rtf_st() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.RTFStatusMsg.rtf_st)
  return _internal_rtf_st();
}
inline void RTFStatusMsg::_internal_set_rtf_st(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rtf_st_ = value;
}
inline void RTFStatusMsg::set_rtf_st(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rtf_st(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.RTFStatusMsg.rtf_st)
}

// int32 rtf_tips = 2;
inline void RTFStatusMsg::clear_rtf_tips() {
  rtf_tips_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RTFStatusMsg::_internal_rtf_tips() const {
  return rtf_tips_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RTFStatusMsg::rtf_tips() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.RTFStatusMsg.rtf_tips)
  return _internal_rtf_tips();
}
inline void RTFStatusMsg::_internal_set_rtf_tips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rtf_tips_ = value;
}
inline void RTFStatusMsg::set_rtf_tips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rtf_tips(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.RTFStatusMsg.rtf_tips)
}

// int32 fail_reason = 3;
inline void RTFStatusMsg::clear_fail_reason() {
  fail_reason_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RTFStatusMsg::_internal_fail_reason() const {
  return fail_reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RTFStatusMsg::fail_reason() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.RTFStatusMsg.fail_reason)
  return _internal_fail_reason();
}
inline void RTFStatusMsg::_internal_set_fail_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fail_reason_ = value;
}
inline void RTFStatusMsg::set_fail_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fail_reason(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.RTFStatusMsg.fail_reason)
}

// float total_distance = 4;
inline void RTFStatusMsg::clear_total_distance() {
  total_distance_ = 0;
}
inline float RTFStatusMsg::_internal_total_distance() const {
  return total_distance_;
}
inline float RTFStatusMsg::total_distance() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.RTFStatusMsg.total_distance)
  return _internal_total_distance();
}
inline void RTFStatusMsg::_internal_set_total_distance(float value) {
  
  total_distance_ = value;
}
inline void RTFStatusMsg::set_total_distance(float value) {
  _internal_set_total_distance(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.RTFStatusMsg.total_distance)
}

// float remain_distance = 5;
inline void RTFStatusMsg::clear_remain_distance() {
  remain_distance_ = 0;
}
inline float RTFStatusMsg::_internal_remain_distance() const {
  return remain_distance_;
}
inline float RTFStatusMsg::remain_distance() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.RTFStatusMsg.remain_distance)
  return _internal_remain_distance();
}
inline void RTFStatusMsg::_internal_set_remain_distance(float value) {
  
  remain_distance_ = value;
}
inline void RTFStatusMsg::set_remain_distance(float value) {
  _internal_set_remain_distance(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.RTFStatusMsg.remain_distance)
}

// float percent = 6;
inline void RTFStatusMsg::clear_percent() {
  percent_ = 0;
}
inline float RTFStatusMsg::_internal_percent() const {
  return percent_;
}
inline float RTFStatusMsg::percent() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.RTFStatusMsg.percent)
  return _internal_percent();
}
inline void RTFStatusMsg::_internal_set_percent(float value) {
  
  percent_ = value;
}
inline void RTFStatusMsg::set_percent(float value) {
  _internal_set_percent(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.RTFStatusMsg.percent)
}

// .SRprotobuf.Location start_location = 7;
inline bool RTFStatusMsg::_internal_has_start_location() const {
  return this != internal_default_instance() && start_location_ != nullptr;
}
inline bool RTFStatusMsg::has_start_location() const {
  return _internal_has_start_location();
}
inline const ::SRprotobuf::Location& RTFStatusMsg::_internal_start_location() const {
  const ::SRprotobuf::Location* p = start_location_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Location*>(
      &::SRprotobuf::_Location_default_instance_);
}
inline const ::SRprotobuf::Location& RTFStatusMsg::start_location() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.RTFStatusMsg.start_location)
  return _internal_start_location();
}
inline void RTFStatusMsg::unsafe_arena_set_allocated_start_location(
    ::SRprotobuf::Location* start_location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_location_);
  }
  start_location_ = start_location;
  if (start_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.RTFStatusMsg.start_location)
}
inline ::SRprotobuf::Location* RTFStatusMsg::release_start_location() {
  auto temp = unsafe_arena_release_start_location();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Location* RTFStatusMsg::unsafe_arena_release_start_location() {
  // @@protoc_insertion_point(field_release:SRprotobuf.RTFStatusMsg.start_location)
  
  ::SRprotobuf::Location* temp = start_location_;
  start_location_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Location* RTFStatusMsg::_internal_mutable_start_location() {
  
  if (start_location_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Location>(GetArena());
    start_location_ = p;
  }
  return start_location_;
}
inline ::SRprotobuf::Location* RTFStatusMsg::mutable_start_location() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.RTFStatusMsg.start_location)
  return _internal_mutable_start_location();
}
inline void RTFStatusMsg::set_allocated_start_location(::SRprotobuf::Location* start_location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_location_);
  }
  if (start_location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_location)->GetArena();
    if (message_arena != submessage_arena) {
      start_location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_location, submessage_arena);
    }
    
  } else {
    
  }
  start_location_ = start_location;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.RTFStatusMsg.start_location)
}

// -------------------------------------------------------------------

// PkoutTerminationInfo

// .SRprotobuf.Point3f pos = 1;
inline bool PkoutTerminationInfo::_internal_has_pos() const {
  return this != internal_default_instance() && pos_ != nullptr;
}
inline bool PkoutTerminationInfo::has_pos() const {
  return _internal_has_pos();
}
inline const ::SRprotobuf::Point3f& PkoutTerminationInfo::_internal_pos() const {
  const ::SRprotobuf::Point3f* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Point3f*>(
      &::SRprotobuf::_Point3f_default_instance_);
}
inline const ::SRprotobuf::Point3f& PkoutTerminationInfo::pos() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.PkoutTerminationInfo.pos)
  return _internal_pos();
}
inline void PkoutTerminationInfo::unsafe_arena_set_allocated_pos(
    ::SRprotobuf::Point3f* pos) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos_);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.PkoutTerminationInfo.pos)
}
inline ::SRprotobuf::Point3f* PkoutTerminationInfo::release_pos() {
  auto temp = unsafe_arena_release_pos();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Point3f* PkoutTerminationInfo::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_release:SRprotobuf.PkoutTerminationInfo.pos)
  
  ::SRprotobuf::Point3f* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Point3f* PkoutTerminationInfo::_internal_mutable_pos() {
  
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Point3f>(GetArena());
    pos_ = p;
  }
  return pos_;
}
inline ::SRprotobuf::Point3f* PkoutTerminationInfo::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.PkoutTerminationInfo.pos)
  return _internal_mutable_pos();
}
inline void PkoutTerminationInfo::set_allocated_pos(::SRprotobuf::Point3f* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos_);
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos)->GetArena();
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.PkoutTerminationInfo.pos)
}

// float theta = 2;
inline void PkoutTerminationInfo::clear_theta() {
  theta_ = 0;
}
inline float PkoutTerminationInfo::_internal_theta() const {
  return theta_;
}
inline float PkoutTerminationInfo::theta() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.PkoutTerminationInfo.theta)
  return _internal_theta();
}
inline void PkoutTerminationInfo::_internal_set_theta(float value) {
  
  theta_ = value;
}
inline void PkoutTerminationInfo::set_theta(float value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.PkoutTerminationInfo.theta)
}

// float len = 3;
inline void PkoutTerminationInfo::clear_len() {
  len_ = 0;
}
inline float PkoutTerminationInfo::_internal_len() const {
  return len_;
}
inline float PkoutTerminationInfo::len() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.PkoutTerminationInfo.len)
  return _internal_len();
}
inline void PkoutTerminationInfo::_internal_set_len(float value) {
  
  len_ = value;
}
inline void PkoutTerminationInfo::set_len(float value) {
  _internal_set_len(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.PkoutTerminationInfo.len)
}

// -------------------------------------------------------------------

// ApEssentialMsg

// int32 xputips = 1;
inline void ApEssentialMsg::clear_xputips() {
  xputips_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_xputips() const {
  return xputips_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::xputips() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.xputips)
  return _internal_xputips();
}
inline void ApEssentialMsg::_internal_set_xputips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xputips_ = value;
}
inline void ApEssentialMsg::set_xputips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xputips(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.xputips)
}

// int32 xpuAbnormal = 2;
inline void ApEssentialMsg::clear_xpuabnormal() {
  xpuabnormal_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_xpuabnormal() const {
  return xpuabnormal_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::xpuabnormal() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.xpuAbnormal)
  return _internal_xpuabnormal();
}
inline void ApEssentialMsg::_internal_set_xpuabnormal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpuabnormal_ = value;
}
inline void ApEssentialMsg::set_xpuabnormal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpuabnormal(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.xpuAbnormal)
}

// int32 statusIndicate = 3;
inline void ApEssentialMsg::clear_statusindicate() {
  statusindicate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_statusindicate() const {
  return statusindicate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::statusindicate() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.statusIndicate)
  return _internal_statusindicate();
}
inline void ApEssentialMsg::_internal_set_statusindicate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  statusindicate_ = value;
}
inline void ApEssentialMsg::set_statusindicate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_statusindicate(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.statusIndicate)
}

// int32 failReason = 4;
inline void ApEssentialMsg::clear_failreason() {
  failreason_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_failreason() const {
  return failreason_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::failreason() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.failReason)
  return _internal_failreason();
}
inline void ApEssentialMsg::_internal_set_failreason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  failreason_ = value;
}
inline void ApEssentialMsg::set_failreason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_failreason(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.failReason)
}

// int32 arrow = 5;
inline void ApEssentialMsg::clear_arrow() {
  arrow_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_arrow() const {
  return arrow_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::arrow() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.arrow)
  return _internal_arrow();
}
inline void ApEssentialMsg::_internal_set_arrow(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  arrow_ = value;
}
inline void ApEssentialMsg::set_arrow(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_arrow(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.arrow)
}

// int32 voice = 6;
inline void ApEssentialMsg::clear_voice() {
  voice_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_voice() const {
  return voice_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::voice() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.voice)
  return _internal_voice();
}
inline void ApEssentialMsg::_internal_set_voice(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  voice_ = value;
}
inline void ApEssentialMsg::set_voice(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_voice(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.voice)
}

// float remainDistance = 7;
inline void ApEssentialMsg::clear_remaindistance() {
  remaindistance_ = 0;
}
inline float ApEssentialMsg::_internal_remaindistance() const {
  return remaindistance_;
}
inline float ApEssentialMsg::remaindistance() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.remainDistance)
  return _internal_remaindistance();
}
inline void ApEssentialMsg::_internal_set_remaindistance(float value) {
  
  remaindistance_ = value;
}
inline void ApEssentialMsg::set_remaindistance(float value) {
  _internal_set_remaindistance(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.remainDistance)
}

// .SRprotobuf.BDistancePercent bdistancepercent = 8;
inline bool ApEssentialMsg::_internal_has_bdistancepercent() const {
  return this != internal_default_instance() && bdistancepercent_ != nullptr;
}
inline bool ApEssentialMsg::has_bdistancepercent() const {
  return _internal_has_bdistancepercent();
}
inline void ApEssentialMsg::clear_bdistancepercent() {
  if (GetArena() == nullptr && bdistancepercent_ != nullptr) {
    delete bdistancepercent_;
  }
  bdistancepercent_ = nullptr;
}
inline const ::SRprotobuf::BDistancePercent& ApEssentialMsg::_internal_bdistancepercent() const {
  const ::SRprotobuf::BDistancePercent* p = bdistancepercent_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::BDistancePercent*>(
      &::SRprotobuf::_BDistancePercent_default_instance_);
}
inline const ::SRprotobuf::BDistancePercent& ApEssentialMsg::bdistancepercent() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.bdistancepercent)
  return _internal_bdistancepercent();
}
inline void ApEssentialMsg::unsafe_arena_set_allocated_bdistancepercent(
    ::SRprotobuf::BDistancePercent* bdistancepercent) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bdistancepercent_);
  }
  bdistancepercent_ = bdistancepercent;
  if (bdistancepercent) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApEssentialMsg.bdistancepercent)
}
inline ::SRprotobuf::BDistancePercent* ApEssentialMsg::release_bdistancepercent() {
  auto temp = unsafe_arena_release_bdistancepercent();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::BDistancePercent* ApEssentialMsg::unsafe_arena_release_bdistancepercent() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApEssentialMsg.bdistancepercent)
  
  ::SRprotobuf::BDistancePercent* temp = bdistancepercent_;
  bdistancepercent_ = nullptr;
  return temp;
}
inline ::SRprotobuf::BDistancePercent* ApEssentialMsg::_internal_mutable_bdistancepercent() {
  
  if (bdistancepercent_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::BDistancePercent>(GetArena());
    bdistancepercent_ = p;
  }
  return bdistancepercent_;
}
inline ::SRprotobuf::BDistancePercent* ApEssentialMsg::mutable_bdistancepercent() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApEssentialMsg.bdistancepercent)
  return _internal_mutable_bdistancepercent();
}
inline void ApEssentialMsg::set_allocated_bdistancepercent(::SRprotobuf::BDistancePercent* bdistancepercent) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bdistancepercent_;
  }
  if (bdistancepercent) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bdistancepercent);
    if (message_arena != submessage_arena) {
      bdistancepercent = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bdistancepercent, submessage_arena);
    }
    
  } else {
    
  }
  bdistancepercent_ = bdistancepercent;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApEssentialMsg.bdistancepercent)
}

// int32 parkState = 9;
inline void ApEssentialMsg::clear_parkstate() {
  parkstate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_parkstate() const {
  return parkstate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::parkstate() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.parkState)
  return _internal_parkstate();
}
inline void ApEssentialMsg::_internal_set_parkstate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  parkstate_ = value;
}
inline void ApEssentialMsg::set_parkstate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_parkstate(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.parkState)
}

// int32 globalTrajectoryIndex = 10;
inline void ApEssentialMsg::clear_globaltrajectoryindex() {
  globaltrajectoryindex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_globaltrajectoryindex() const {
  return globaltrajectoryindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::globaltrajectoryindex() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.globalTrajectoryIndex)
  return _internal_globaltrajectoryindex();
}
inline void ApEssentialMsg::_internal_set_globaltrajectoryindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  globaltrajectoryindex_ = value;
}
inline void ApEssentialMsg::set_globaltrajectoryindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_globaltrajectoryindex(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.globalTrajectoryIndex)
}

// int32 mapPoseState = 11;
inline void ApEssentialMsg::clear_mapposestate() {
  mapposestate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_mapposestate() const {
  return mapposestate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::mapposestate() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.mapPoseState)
  return _internal_mapposestate();
}
inline void ApEssentialMsg::_internal_set_mapposestate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mapposestate_ = value;
}
inline void ApEssentialMsg::set_mapposestate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mapposestate(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.mapPoseState)
}

// int32 silentFavoriteState = 12;
inline void ApEssentialMsg::clear_silentfavoritestate() {
  silentfavoritestate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_silentfavoritestate() const {
  return silentfavoritestate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::silentfavoritestate() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.silentFavoriteState)
  return _internal_silentfavoritestate();
}
inline void ApEssentialMsg::_internal_set_silentfavoritestate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  silentfavoritestate_ = value;
}
inline void ApEssentialMsg::set_silentfavoritestate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_silentfavoritestate(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.silentFavoriteState)
}

// uint64 hdmapId = 13;
inline void ApEssentialMsg::clear_hdmapid() {
  hdmapid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ApEssentialMsg::_internal_hdmapid() const {
  return hdmapid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ApEssentialMsg::hdmapid() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.hdmapId)
  return _internal_hdmapid();
}
inline void ApEssentialMsg::_internal_set_hdmapid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  hdmapid_ = value;
}
inline void ApEssentialMsg::set_hdmapid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_hdmapid(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.hdmapId)
}

// int32 favoriteSlotReady = 14;
inline void ApEssentialMsg::clear_favoriteslotready() {
  favoriteslotready_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_favoriteslotready() const {
  return favoriteslotready_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::favoriteslotready() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.favoriteSlotReady)
  return _internal_favoriteslotready();
}
inline void ApEssentialMsg::_internal_set_favoriteslotready(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  favoriteslotready_ = value;
}
inline void ApEssentialMsg::set_favoriteslotready(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_favoriteslotready(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.favoriteSlotReady)
}

// int32 is_hdmap = 15;
inline void ApEssentialMsg::clear_is_hdmap() {
  is_hdmap_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_is_hdmap() const {
  return is_hdmap_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::is_hdmap() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.is_hdmap)
  return _internal_is_hdmap();
}
inline void ApEssentialMsg::_internal_set_is_hdmap(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_hdmap_ = value;
}
inline void ApEssentialMsg::set_is_hdmap(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_hdmap(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.is_hdmap)
}

// int32 trainingTips = 16;
inline void ApEssentialMsg::clear_trainingtips() {
  trainingtips_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_trainingtips() const {
  return trainingtips_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::trainingtips() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.trainingTips)
  return _internal_trainingtips();
}
inline void ApEssentialMsg::_internal_set_trainingtips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  trainingtips_ = value;
}
inline void ApEssentialMsg::set_trainingtips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_trainingtips(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.trainingTips)
}

// int32 trainingst = 17;
inline void ApEssentialMsg::clear_trainingst() {
  trainingst_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_trainingst() const {
  return trainingst_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::trainingst() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.trainingst)
  return _internal_trainingst();
}
inline void ApEssentialMsg::_internal_set_trainingst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  trainingst_ = value;
}
inline void ApEssentialMsg::set_trainingst(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_trainingst(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.trainingst)
}

// repeated int32 trainingfail = 18;
inline int ApEssentialMsg::_internal_trainingfail_size() const {
  return trainingfail_.size();
}
inline int ApEssentialMsg::trainingfail_size() const {
  return _internal_trainingfail_size();
}
inline void ApEssentialMsg::clear_trainingfail() {
  trainingfail_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_trainingfail(int index) const {
  return trainingfail_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::trainingfail(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.trainingfail)
  return _internal_trainingfail(index);
}
inline void ApEssentialMsg::set_trainingfail(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  trainingfail_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.trainingfail)
}
inline void ApEssentialMsg::_internal_add_trainingfail(::PROTOBUF_NAMESPACE_ID::int32 value) {
  trainingfail_.Add(value);
}
inline void ApEssentialMsg::add_trainingfail(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_trainingfail(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.ApEssentialMsg.trainingfail)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ApEssentialMsg::_internal_trainingfail() const {
  return trainingfail_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ApEssentialMsg::trainingfail() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApEssentialMsg.trainingfail)
  return _internal_trainingfail();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ApEssentialMsg::_internal_mutable_trainingfail() {
  return &trainingfail_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ApEssentialMsg::mutable_trainingfail() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApEssentialMsg.trainingfail)
  return _internal_mutable_trainingfail();
}

// int32 terminal_attr = 19;
inline void ApEssentialMsg::clear_terminal_attr() {
  terminal_attr_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_terminal_attr() const {
  return terminal_attr_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::terminal_attr() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.terminal_attr)
  return _internal_terminal_attr();
}
inline void ApEssentialMsg::_internal_set_terminal_attr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  terminal_attr_ = value;
}
inline void ApEssentialMsg::set_terminal_attr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_terminal_attr(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.terminal_attr)
}

// int32 terminal_floor = 20;
inline void ApEssentialMsg::clear_terminal_floor() {
  terminal_floor_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_terminal_floor() const {
  return terminal_floor_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::terminal_floor() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.terminal_floor)
  return _internal_terminal_floor();
}
inline void ApEssentialMsg::_internal_set_terminal_floor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  terminal_floor_ = value;
}
inline void ApEssentialMsg::set_terminal_floor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_terminal_floor(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.terminal_floor)
}

// uint64 map_time = 21;
inline void ApEssentialMsg::clear_map_time() {
  map_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ApEssentialMsg::_internal_map_time() const {
  return map_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ApEssentialMsg::map_time() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.map_time)
  return _internal_map_time();
}
inline void ApEssentialMsg::_internal_set_map_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  map_time_ = value;
}
inline void ApEssentialMsg::set_map_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_map_time(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.map_time)
}

// int32 desktop_avl = 22;
inline void ApEssentialMsg::clear_desktop_avl() {
  desktop_avl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_desktop_avl() const {
  return desktop_avl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::desktop_avl() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.desktop_avl)
  return _internal_desktop_avl();
}
inline void ApEssentialMsg::_internal_set_desktop_avl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  desktop_avl_ = value;
}
inline void ApEssentialMsg::set_desktop_avl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_desktop_avl(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.desktop_avl)
}

// int32 enter_map = 23;
inline void ApEssentialMsg::clear_enter_map() {
  enter_map_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_enter_map() const {
  return enter_map_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::enter_map() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.enter_map)
  return _internal_enter_map();
}
inline void ApEssentialMsg::_internal_set_enter_map(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  enter_map_ = value;
}
inline void ApEssentialMsg::set_enter_map(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_enter_map(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.enter_map)
}

// int32 easy_get_off = 24;
inline void ApEssentialMsg::clear_easy_get_off() {
  easy_get_off_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_easy_get_off() const {
  return easy_get_off_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::easy_get_off() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.easy_get_off)
  return _internal_easy_get_off();
}
inline void ApEssentialMsg::_internal_set_easy_get_off(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  easy_get_off_ = value;
}
inline void ApEssentialMsg::set_easy_get_off(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_easy_get_off(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.easy_get_off)
}

// .SRprotobuf.RTFStatusMsg rtf_status_msg = 25;
inline bool ApEssentialMsg::_internal_has_rtf_status_msg() const {
  return this != internal_default_instance() && rtf_status_msg_ != nullptr;
}
inline bool ApEssentialMsg::has_rtf_status_msg() const {
  return _internal_has_rtf_status_msg();
}
inline void ApEssentialMsg::clear_rtf_status_msg() {
  if (GetArena() == nullptr && rtf_status_msg_ != nullptr) {
    delete rtf_status_msg_;
  }
  rtf_status_msg_ = nullptr;
}
inline const ::SRprotobuf::RTFStatusMsg& ApEssentialMsg::_internal_rtf_status_msg() const {
  const ::SRprotobuf::RTFStatusMsg* p = rtf_status_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::RTFStatusMsg*>(
      &::SRprotobuf::_RTFStatusMsg_default_instance_);
}
inline const ::SRprotobuf::RTFStatusMsg& ApEssentialMsg::rtf_status_msg() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.rtf_status_msg)
  return _internal_rtf_status_msg();
}
inline void ApEssentialMsg::unsafe_arena_set_allocated_rtf_status_msg(
    ::SRprotobuf::RTFStatusMsg* rtf_status_msg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rtf_status_msg_);
  }
  rtf_status_msg_ = rtf_status_msg;
  if (rtf_status_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApEssentialMsg.rtf_status_msg)
}
inline ::SRprotobuf::RTFStatusMsg* ApEssentialMsg::release_rtf_status_msg() {
  auto temp = unsafe_arena_release_rtf_status_msg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::RTFStatusMsg* ApEssentialMsg::unsafe_arena_release_rtf_status_msg() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApEssentialMsg.rtf_status_msg)
  
  ::SRprotobuf::RTFStatusMsg* temp = rtf_status_msg_;
  rtf_status_msg_ = nullptr;
  return temp;
}
inline ::SRprotobuf::RTFStatusMsg* ApEssentialMsg::_internal_mutable_rtf_status_msg() {
  
  if (rtf_status_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::RTFStatusMsg>(GetArena());
    rtf_status_msg_ = p;
  }
  return rtf_status_msg_;
}
inline ::SRprotobuf::RTFStatusMsg* ApEssentialMsg::mutable_rtf_status_msg() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApEssentialMsg.rtf_status_msg)
  return _internal_mutable_rtf_status_msg();
}
inline void ApEssentialMsg::set_allocated_rtf_status_msg(::SRprotobuf::RTFStatusMsg* rtf_status_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete rtf_status_msg_;
  }
  if (rtf_status_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rtf_status_msg);
    if (message_arena != submessage_arena) {
      rtf_status_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rtf_status_msg, submessage_arena);
    }
    
  } else {
    
  }
  rtf_status_msg_ = rtf_status_msg;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApEssentialMsg.rtf_status_msg)
}

// int32 coveredValid = 26;
inline void ApEssentialMsg::clear_coveredvalid() {
  coveredvalid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_coveredvalid() const {
  return coveredvalid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::coveredvalid() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.coveredValid)
  return _internal_coveredvalid();
}
inline void ApEssentialMsg::_internal_set_coveredvalid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  coveredvalid_ = value;
}
inline void ApEssentialMsg::set_coveredvalid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_coveredvalid(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.coveredValid)
}

// repeated int32 pkout_direction_st = 27;
inline int ApEssentialMsg::_internal_pkout_direction_st_size() const {
  return pkout_direction_st_.size();
}
inline int ApEssentialMsg::pkout_direction_st_size() const {
  return _internal_pkout_direction_st_size();
}
inline void ApEssentialMsg::clear_pkout_direction_st() {
  pkout_direction_st_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_pkout_direction_st(int index) const {
  return pkout_direction_st_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::pkout_direction_st(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.pkout_direction_st)
  return _internal_pkout_direction_st(index);
}
inline void ApEssentialMsg::set_pkout_direction_st(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  pkout_direction_st_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.pkout_direction_st)
}
inline void ApEssentialMsg::_internal_add_pkout_direction_st(::PROTOBUF_NAMESPACE_ID::int32 value) {
  pkout_direction_st_.Add(value);
}
inline void ApEssentialMsg::add_pkout_direction_st(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_pkout_direction_st(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.ApEssentialMsg.pkout_direction_st)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ApEssentialMsg::_internal_pkout_direction_st() const {
  return pkout_direction_st_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ApEssentialMsg::pkout_direction_st() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApEssentialMsg.pkout_direction_st)
  return _internal_pkout_direction_st();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ApEssentialMsg::_internal_mutable_pkout_direction_st() {
  return &pkout_direction_st_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ApEssentialMsg::mutable_pkout_direction_st() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApEssentialMsg.pkout_direction_st)
  return _internal_mutable_pkout_direction_st();
}

// int32 pkout_current_direction = 28;
inline void ApEssentialMsg::clear_pkout_current_direction() {
  pkout_current_direction_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_pkout_current_direction() const {
  return pkout_current_direction_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::pkout_current_direction() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.pkout_current_direction)
  return _internal_pkout_current_direction();
}
inline void ApEssentialMsg::_internal_set_pkout_current_direction(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pkout_current_direction_ = value;
}
inline void ApEssentialMsg::set_pkout_current_direction(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pkout_current_direction(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.pkout_current_direction)
}

// .SRprotobuf.PkoutTerminationInfo pkout_termination = 29;
inline bool ApEssentialMsg::_internal_has_pkout_termination() const {
  return this != internal_default_instance() && pkout_termination_ != nullptr;
}
inline bool ApEssentialMsg::has_pkout_termination() const {
  return _internal_has_pkout_termination();
}
inline void ApEssentialMsg::clear_pkout_termination() {
  if (GetArena() == nullptr && pkout_termination_ != nullptr) {
    delete pkout_termination_;
  }
  pkout_termination_ = nullptr;
}
inline const ::SRprotobuf::PkoutTerminationInfo& ApEssentialMsg::_internal_pkout_termination() const {
  const ::SRprotobuf::PkoutTerminationInfo* p = pkout_termination_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::PkoutTerminationInfo*>(
      &::SRprotobuf::_PkoutTerminationInfo_default_instance_);
}
inline const ::SRprotobuf::PkoutTerminationInfo& ApEssentialMsg::pkout_termination() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.pkout_termination)
  return _internal_pkout_termination();
}
inline void ApEssentialMsg::unsafe_arena_set_allocated_pkout_termination(
    ::SRprotobuf::PkoutTerminationInfo* pkout_termination) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pkout_termination_);
  }
  pkout_termination_ = pkout_termination;
  if (pkout_termination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApEssentialMsg.pkout_termination)
}
inline ::SRprotobuf::PkoutTerminationInfo* ApEssentialMsg::release_pkout_termination() {
  auto temp = unsafe_arena_release_pkout_termination();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::PkoutTerminationInfo* ApEssentialMsg::unsafe_arena_release_pkout_termination() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApEssentialMsg.pkout_termination)
  
  ::SRprotobuf::PkoutTerminationInfo* temp = pkout_termination_;
  pkout_termination_ = nullptr;
  return temp;
}
inline ::SRprotobuf::PkoutTerminationInfo* ApEssentialMsg::_internal_mutable_pkout_termination() {
  
  if (pkout_termination_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::PkoutTerminationInfo>(GetArena());
    pkout_termination_ = p;
  }
  return pkout_termination_;
}
inline ::SRprotobuf::PkoutTerminationInfo* ApEssentialMsg::mutable_pkout_termination() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApEssentialMsg.pkout_termination)
  return _internal_mutable_pkout_termination();
}
inline void ApEssentialMsg::set_allocated_pkout_termination(::SRprotobuf::PkoutTerminationInfo* pkout_termination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete pkout_termination_;
  }
  if (pkout_termination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(pkout_termination);
    if (message_arena != submessage_arena) {
      pkout_termination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pkout_termination, submessage_arena);
    }
    
  } else {
    
  }
  pkout_termination_ = pkout_termination;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApEssentialMsg.pkout_termination)
}

// int32 pkout_slot_shape = 30;
inline void ApEssentialMsg::clear_pkout_slot_shape() {
  pkout_slot_shape_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_pkout_slot_shape() const {
  return pkout_slot_shape_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::pkout_slot_shape() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.pkout_slot_shape)
  return _internal_pkout_slot_shape();
}
inline void ApEssentialMsg::_internal_set_pkout_slot_shape(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pkout_slot_shape_ = value;
}
inline void ApEssentialMsg::set_pkout_slot_shape(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pkout_slot_shape(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.pkout_slot_shape)
}

// int32 pkout_ready = 31;
inline void ApEssentialMsg::clear_pkout_ready() {
  pkout_ready_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::_internal_pkout_ready() const {
  return pkout_ready_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApEssentialMsg::pkout_ready() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApEssentialMsg.pkout_ready)
  return _internal_pkout_ready();
}
inline void ApEssentialMsg::_internal_set_pkout_ready(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pkout_ready_ = value;
}
inline void ApEssentialMsg::set_pkout_ready(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pkout_ready(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApEssentialMsg.pkout_ready)
}

// -------------------------------------------------------------------

// ApNaviMsg

// int32 navi_state = 1;
inline void ApNaviMsg::clear_navi_state() {
  navi_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApNaviMsg::_internal_navi_state() const {
  return navi_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApNaviMsg::navi_state() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApNaviMsg.navi_state)
  return _internal_navi_state();
}
inline void ApNaviMsg::_internal_set_navi_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  navi_state_ = value;
}
inline void ApNaviMsg::set_navi_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_navi_state(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApNaviMsg.navi_state)
}

// int32 navi_tips = 2;
inline void ApNaviMsg::clear_navi_tips() {
  navi_tips_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApNaviMsg::_internal_navi_tips() const {
  return navi_tips_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApNaviMsg::navi_tips() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApNaviMsg.navi_tips)
  return _internal_navi_tips();
}
inline void ApNaviMsg::_internal_set_navi_tips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  navi_tips_ = value;
}
inline void ApNaviMsg::set_navi_tips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_navi_tips(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApNaviMsg.navi_tips)
}

// float dist_to_startpoint = 3;
inline void ApNaviMsg::clear_dist_to_startpoint() {
  dist_to_startpoint_ = 0;
}
inline float ApNaviMsg::_internal_dist_to_startpoint() const {
  return dist_to_startpoint_;
}
inline float ApNaviMsg::dist_to_startpoint() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApNaviMsg.dist_to_startpoint)
  return _internal_dist_to_startpoint();
}
inline void ApNaviMsg::_internal_set_dist_to_startpoint(float value) {
  
  dist_to_startpoint_ = value;
}
inline void ApNaviMsg::set_dist_to_startpoint(float value) {
  _internal_set_dist_to_startpoint(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApNaviMsg.dist_to_startpoint)
}

// float dist_to_feature = 4;
inline void ApNaviMsg::clear_dist_to_feature() {
  dist_to_feature_ = 0;
}
inline float ApNaviMsg::_internal_dist_to_feature() const {
  return dist_to_feature_;
}
inline float ApNaviMsg::dist_to_feature() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApNaviMsg.dist_to_feature)
  return _internal_dist_to_feature();
}
inline void ApNaviMsg::_internal_set_dist_to_feature(float value) {
  
  dist_to_feature_ = value;
}
inline void ApNaviMsg::set_dist_to_feature(float value) {
  _internal_set_dist_to_feature(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApNaviMsg.dist_to_feature)
}

// int32 hill_status = 5;
inline void ApNaviMsg::clear_hill_status() {
  hill_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApNaviMsg::_internal_hill_status() const {
  return hill_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApNaviMsg::hill_status() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApNaviMsg.hill_status)
  return _internal_hill_status();
}
inline void ApNaviMsg::_internal_set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hill_status_ = value;
}
inline void ApNaviMsg::set_hill_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hill_status(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApNaviMsg.hill_status)
}

// -------------------------------------------------------------------

// TrainingSpdBump

// int32 flag = 1;
inline void TrainingSpdBump::clear_flag() {
  flag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainingSpdBump::_internal_flag() const {
  return flag_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrainingSpdBump::flag() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.TrainingSpdBump.flag)
  return _internal_flag();
}
inline void TrainingSpdBump::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  flag_ = value;
}
inline void TrainingSpdBump::set_flag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_flag(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.TrainingSpdBump.flag)
}

// float x = 2;
inline void TrainingSpdBump::clear_x() {
  x_ = 0;
}
inline float TrainingSpdBump::_internal_x() const {
  return x_;
}
inline float TrainingSpdBump::x() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.TrainingSpdBump.x)
  return _internal_x();
}
inline void TrainingSpdBump::_internal_set_x(float value) {
  
  x_ = value;
}
inline void TrainingSpdBump::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.TrainingSpdBump.x)
}

// float y = 3;
inline void TrainingSpdBump::clear_y() {
  y_ = 0;
}
inline float TrainingSpdBump::_internal_y() const {
  return y_;
}
inline float TrainingSpdBump::y() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.TrainingSpdBump.y)
  return _internal_y();
}
inline void TrainingSpdBump::_internal_set_y(float value) {
  
  y_ = value;
}
inline void TrainingSpdBump::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.TrainingSpdBump.y)
}

// float z = 4;
inline void TrainingSpdBump::clear_z() {
  z_ = 0;
}
inline float TrainingSpdBump::_internal_z() const {
  return z_;
}
inline float TrainingSpdBump::z() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.TrainingSpdBump.z)
  return _internal_z();
}
inline void TrainingSpdBump::_internal_set_z(float value) {
  
  z_ = value;
}
inline void TrainingSpdBump::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.TrainingSpdBump.z)
}

// float theta = 5;
inline void TrainingSpdBump::clear_theta() {
  theta_ = 0;
}
inline float TrainingSpdBump::_internal_theta() const {
  return theta_;
}
inline float TrainingSpdBump::theta() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.TrainingSpdBump.theta)
  return _internal_theta();
}
inline void TrainingSpdBump::_internal_set_theta(float value) {
  
  theta_ = value;
}
inline void TrainingSpdBump::set_theta(float value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.TrainingSpdBump.theta)
}

// float s = 6;
inline void TrainingSpdBump::clear_s() {
  s_ = 0;
}
inline float TrainingSpdBump::_internal_s() const {
  return s_;
}
inline float TrainingSpdBump::s() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.TrainingSpdBump.s)
  return _internal_s();
}
inline void TrainingSpdBump::_internal_set_s(float value) {
  
  s_ = value;
}
inline void TrainingSpdBump::set_s(float value) {
  _internal_set_s(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.TrainingSpdBump.s)
}

// -------------------------------------------------------------------

// SlotIdMapping

// int32 avmSlotId = 1;
inline void SlotIdMapping::clear_avmslotid() {
  avmslotid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SlotIdMapping::_internal_avmslotid() const {
  return avmslotid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SlotIdMapping::avmslotid() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.SlotIdMapping.avmSlotId)
  return _internal_avmslotid();
}
inline void SlotIdMapping::_internal_set_avmslotid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avmslotid_ = value;
}
inline void SlotIdMapping::set_avmslotid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avmslotid(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.SlotIdMapping.avmSlotId)
}

// int32 parkSlotId = 2;
inline void SlotIdMapping::clear_parkslotid() {
  parkslotid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SlotIdMapping::_internal_parkslotid() const {
  return parkslotid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SlotIdMapping::parkslotid() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.SlotIdMapping.parkSlotId)
  return _internal_parkslotid();
}
inline void SlotIdMapping::_internal_set_parkslotid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  parkslotid_ = value;
}
inline void SlotIdMapping::set_parkslotid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_parkslotid(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.SlotIdMapping.parkSlotId)
}

// -------------------------------------------------------------------

// Ap_StaticObjectPoint

// .SRprotobuf.Point3f position = 1;
inline bool Ap_StaticObjectPoint::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool Ap_StaticObjectPoint::has_position() const {
  return _internal_has_position();
}
inline const ::SRprotobuf::Point3f& Ap_StaticObjectPoint::_internal_position() const {
  const ::SRprotobuf::Point3f* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Point3f*>(
      &::SRprotobuf::_Point3f_default_instance_);
}
inline const ::SRprotobuf::Point3f& Ap_StaticObjectPoint::position() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObjectPoint.position)
  return _internal_position();
}
inline void Ap_StaticObjectPoint::unsafe_arena_set_allocated_position(
    ::SRprotobuf::Point3f* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.Ap_StaticObjectPoint.position)
}
inline ::SRprotobuf::Point3f* Ap_StaticObjectPoint::release_position() {
  auto temp = unsafe_arena_release_position();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Point3f* Ap_StaticObjectPoint::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:SRprotobuf.Ap_StaticObjectPoint.position)
  
  ::SRprotobuf::Point3f* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Point3f* Ap_StaticObjectPoint::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Point3f>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::SRprotobuf::Point3f* Ap_StaticObjectPoint::mutable_position() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.Ap_StaticObjectPoint.position)
  return _internal_mutable_position();
}
inline void Ap_StaticObjectPoint::set_allocated_position(::SRprotobuf::Point3f* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position)->GetArena();
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.Ap_StaticObjectPoint.position)
}

// bool is_visible = 2;
inline void Ap_StaticObjectPoint::clear_is_visible() {
  is_visible_ = false;
}
inline bool Ap_StaticObjectPoint::_internal_is_visible() const {
  return is_visible_;
}
inline bool Ap_StaticObjectPoint::is_visible() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObjectPoint.is_visible)
  return _internal_is_visible();
}
inline void Ap_StaticObjectPoint::_internal_set_is_visible(bool value) {
  
  is_visible_ = value;
}
inline void Ap_StaticObjectPoint::set_is_visible(bool value) {
  _internal_set_is_visible(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObjectPoint.is_visible)
}

// -------------------------------------------------------------------

// Ap_StaticObject

// uint32 id = 1;
inline void Ap_StaticObject::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Ap_StaticObject::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Ap_StaticObject::id() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.id)
  return _internal_id();
}
inline void Ap_StaticObject::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void Ap_StaticObject::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.id)
}

// .SRprotobuf.AP_StaticObjectType type = 2;
inline void Ap_StaticObject::clear_type() {
  type_ = 0;
}
inline ::SRprotobuf::AP_StaticObjectType Ap_StaticObject::_internal_type() const {
  return static_cast< ::SRprotobuf::AP_StaticObjectType >(type_);
}
inline ::SRprotobuf::AP_StaticObjectType Ap_StaticObject::type() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.type)
  return _internal_type();
}
inline void Ap_StaticObject::_internal_set_type(::SRprotobuf::AP_StaticObjectType value) {
  
  type_ = value;
}
inline void Ap_StaticObject::set_type(::SRprotobuf::AP_StaticObjectType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.type)
}

// bool is_with_hanging = 3;
inline void Ap_StaticObject::clear_is_with_hanging() {
  is_with_hanging_ = false;
}
inline bool Ap_StaticObject::_internal_is_with_hanging() const {
  return is_with_hanging_;
}
inline bool Ap_StaticObject::is_with_hanging() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.is_with_hanging)
  return _internal_is_with_hanging();
}
inline void Ap_StaticObject::_internal_set_is_with_hanging(bool value) {
  
  is_with_hanging_ = value;
}
inline void Ap_StaticObject::set_is_with_hanging(bool value) {
  _internal_set_is_with_hanging(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.is_with_hanging)
}

// bool is_mature = 4;
inline void Ap_StaticObject::clear_is_mature() {
  is_mature_ = false;
}
inline bool Ap_StaticObject::_internal_is_mature() const {
  return is_mature_;
}
inline bool Ap_StaticObject::is_mature() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.is_mature)
  return _internal_is_mature();
}
inline void Ap_StaticObject::_internal_set_is_mature(bool value) {
  
  is_mature_ = value;
}
inline void Ap_StaticObject::set_is_mature(bool value) {
  _internal_set_is_mature(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.is_mature)
}

// bool is_passable = 5;
inline void Ap_StaticObject::clear_is_passable() {
  is_passable_ = false;
}
inline bool Ap_StaticObject::_internal_is_passable() const {
  return is_passable_;
}
inline bool Ap_StaticObject::is_passable() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.is_passable)
  return _internal_is_passable();
}
inline void Ap_StaticObject::_internal_set_is_passable(bool value) {
  
  is_passable_ = value;
}
inline void Ap_StaticObject::set_is_passable(bool value) {
  _internal_set_is_passable(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.is_passable)
}

// repeated float size = 6;
inline int Ap_StaticObject::_internal_size_size() const {
  return size_.size();
}
inline int Ap_StaticObject::size_size() const {
  return _internal_size_size();
}
inline void Ap_StaticObject::clear_size() {
  size_.Clear();
}
inline float Ap_StaticObject::_internal_size(int index) const {
  return size_.Get(index);
}
inline float Ap_StaticObject::size(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.size)
  return _internal_size(index);
}
inline void Ap_StaticObject::set_size(int index, float value) {
  size_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.size)
}
inline void Ap_StaticObject::_internal_add_size(float value) {
  size_.Add(value);
}
inline void Ap_StaticObject::add_size(float value) {
  _internal_add_size(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.Ap_StaticObject.size)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Ap_StaticObject::_internal_size() const {
  return size_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Ap_StaticObject::size() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.Ap_StaticObject.size)
  return _internal_size();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Ap_StaticObject::_internal_mutable_size() {
  return &size_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Ap_StaticObject::mutable_size() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.Ap_StaticObject.size)
  return _internal_mutable_size();
}

// repeated double local_pose = 7;
inline int Ap_StaticObject::_internal_local_pose_size() const {
  return local_pose_.size();
}
inline int Ap_StaticObject::local_pose_size() const {
  return _internal_local_pose_size();
}
inline void Ap_StaticObject::clear_local_pose() {
  local_pose_.Clear();
}
inline double Ap_StaticObject::_internal_local_pose(int index) const {
  return local_pose_.Get(index);
}
inline double Ap_StaticObject::local_pose(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.local_pose)
  return _internal_local_pose(index);
}
inline void Ap_StaticObject::set_local_pose(int index, double value) {
  local_pose_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.local_pose)
}
inline void Ap_StaticObject::_internal_add_local_pose(double value) {
  local_pose_.Add(value);
}
inline void Ap_StaticObject::add_local_pose(double value) {
  _internal_add_local_pose(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.Ap_StaticObject.local_pose)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Ap_StaticObject::_internal_local_pose() const {
  return local_pose_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Ap_StaticObject::local_pose() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.Ap_StaticObject.local_pose)
  return _internal_local_pose();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Ap_StaticObject::_internal_mutable_local_pose() {
  return &local_pose_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Ap_StaticObject::mutable_local_pose() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.Ap_StaticObject.local_pose)
  return _internal_mutable_local_pose();
}

// repeated .SRprotobuf.Ap_StaticObjectPoint polygon = 8;
inline int Ap_StaticObject::_internal_polygon_size() const {
  return polygon_.size();
}
inline int Ap_StaticObject::polygon_size() const {
  return _internal_polygon_size();
}
inline void Ap_StaticObject::clear_polygon() {
  polygon_.Clear();
}
inline ::SRprotobuf::Ap_StaticObjectPoint* Ap_StaticObject::mutable_polygon(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.Ap_StaticObject.polygon)
  return polygon_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObjectPoint >*
Ap_StaticObject::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.Ap_StaticObject.polygon)
  return &polygon_;
}
inline const ::SRprotobuf::Ap_StaticObjectPoint& Ap_StaticObject::_internal_polygon(int index) const {
  return polygon_.Get(index);
}
inline const ::SRprotobuf::Ap_StaticObjectPoint& Ap_StaticObject::polygon(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.polygon)
  return _internal_polygon(index);
}
inline ::SRprotobuf::Ap_StaticObjectPoint* Ap_StaticObject::_internal_add_polygon() {
  return polygon_.Add();
}
inline ::SRprotobuf::Ap_StaticObjectPoint* Ap_StaticObject::add_polygon() {
  // @@protoc_insertion_point(field_add:SRprotobuf.Ap_StaticObject.polygon)
  return _internal_add_polygon();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObjectPoint >&
Ap_StaticObject::polygon() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.Ap_StaticObject.polygon)
  return polygon_;
}

// float confidence = 9;
inline void Ap_StaticObject::clear_confidence() {
  confidence_ = 0;
}
inline float Ap_StaticObject::_internal_confidence() const {
  return confidence_;
}
inline float Ap_StaticObject::confidence() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Ap_StaticObject.confidence)
  return _internal_confidence();
}
inline void Ap_StaticObject::_internal_set_confidence(float value) {
  
  confidence_ = value;
}
inline void Ap_StaticObject::set_confidence(float value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Ap_StaticObject.confidence)
}

// -------------------------------------------------------------------

// Wall

// uint32 id = 1;
inline void Wall::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Wall::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Wall::id() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Wall.id)
  return _internal_id();
}
inline void Wall::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void Wall::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.Wall.id)
}

// repeated .SRprotobuf.Point3f points = 2;
inline int Wall::_internal_points_size() const {
  return points_.size();
}
inline int Wall::points_size() const {
  return _internal_points_size();
}
inline ::SRprotobuf::Point3f* Wall::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.Wall.points)
  return points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Point3f >*
Wall::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.Wall.points)
  return &points_;
}
inline const ::SRprotobuf::Point3f& Wall::_internal_points(int index) const {
  return points_.Get(index);
}
inline const ::SRprotobuf::Point3f& Wall::points(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.Wall.points)
  return _internal_points(index);
}
inline ::SRprotobuf::Point3f* Wall::_internal_add_points() {
  return points_.Add();
}
inline ::SRprotobuf::Point3f* Wall::add_points() {
  // @@protoc_insertion_point(field_add:SRprotobuf.Wall.points)
  return _internal_add_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Point3f >&
Wall::points() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.Wall.points)
  return points_;
}

// -------------------------------------------------------------------

// BevPillar

// .SRprotobuf.Point2f pos = 1;
inline bool BevPillar::_internal_has_pos() const {
  return this != internal_default_instance() && pos_ != nullptr;
}
inline bool BevPillar::has_pos() const {
  return _internal_has_pos();
}
inline const ::SRprotobuf::Point2f& BevPillar::_internal_pos() const {
  const ::SRprotobuf::Point2f* p = pos_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Point2f*>(
      &::SRprotobuf::_Point2f_default_instance_);
}
inline const ::SRprotobuf::Point2f& BevPillar::pos() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.BevPillar.pos)
  return _internal_pos();
}
inline void BevPillar::unsafe_arena_set_allocated_pos(
    ::SRprotobuf::Point2f* pos) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos_);
  }
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.BevPillar.pos)
}
inline ::SRprotobuf::Point2f* BevPillar::release_pos() {
  auto temp = unsafe_arena_release_pos();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Point2f* BevPillar::unsafe_arena_release_pos() {
  // @@protoc_insertion_point(field_release:SRprotobuf.BevPillar.pos)
  
  ::SRprotobuf::Point2f* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Point2f* BevPillar::_internal_mutable_pos() {
  
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Point2f>(GetArena());
    pos_ = p;
  }
  return pos_;
}
inline ::SRprotobuf::Point2f* BevPillar::mutable_pos() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.BevPillar.pos)
  return _internal_mutable_pos();
}
inline void BevPillar::set_allocated_pos(::SRprotobuf::Point2f* pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos_);
  }
  if (pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pos)->GetArena();
    if (message_arena != submessage_arena) {
      pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.BevPillar.pos)
}

// float min_z = 2;
inline void BevPillar::clear_min_z() {
  min_z_ = 0;
}
inline float BevPillar::_internal_min_z() const {
  return min_z_;
}
inline float BevPillar::min_z() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.BevPillar.min_z)
  return _internal_min_z();
}
inline void BevPillar::_internal_set_min_z(float value) {
  
  min_z_ = value;
}
inline void BevPillar::set_min_z(float value) {
  _internal_set_min_z(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.BevPillar.min_z)
}

// float max_z = 3;
inline void BevPillar::clear_max_z() {
  max_z_ = 0;
}
inline float BevPillar::_internal_max_z() const {
  return max_z_;
}
inline float BevPillar::max_z() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.BevPillar.max_z)
  return _internal_max_z();
}
inline void BevPillar::_internal_set_max_z(float value) {
  
  max_z_ = value;
}
inline void BevPillar::set_max_z(float value) {
  _internal_set_max_z(value);
  // @@protoc_insertion_point(field_set:SRprotobuf.BevPillar.max_z)
}

// -------------------------------------------------------------------

// OccupancyNetParkingMsg

// .SRprotobuf.Point2f pillar_2d_size = 1;
inline bool OccupancyNetParkingMsg::_internal_has_pillar_2d_size() const {
  return this != internal_default_instance() && pillar_2d_size_ != nullptr;
}
inline bool OccupancyNetParkingMsg::has_pillar_2d_size() const {
  return _internal_has_pillar_2d_size();
}
inline const ::SRprotobuf::Point2f& OccupancyNetParkingMsg::_internal_pillar_2d_size() const {
  const ::SRprotobuf::Point2f* p = pillar_2d_size_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Point2f*>(
      &::SRprotobuf::_Point2f_default_instance_);
}
inline const ::SRprotobuf::Point2f& OccupancyNetParkingMsg::pillar_2d_size() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.OccupancyNetParkingMsg.pillar_2d_size)
  return _internal_pillar_2d_size();
}
inline void OccupancyNetParkingMsg::unsafe_arena_set_allocated_pillar_2d_size(
    ::SRprotobuf::Point2f* pillar_2d_size) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pillar_2d_size_);
  }
  pillar_2d_size_ = pillar_2d_size;
  if (pillar_2d_size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.OccupancyNetParkingMsg.pillar_2d_size)
}
inline ::SRprotobuf::Point2f* OccupancyNetParkingMsg::release_pillar_2d_size() {
  auto temp = unsafe_arena_release_pillar_2d_size();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Point2f* OccupancyNetParkingMsg::unsafe_arena_release_pillar_2d_size() {
  // @@protoc_insertion_point(field_release:SRprotobuf.OccupancyNetParkingMsg.pillar_2d_size)
  
  ::SRprotobuf::Point2f* temp = pillar_2d_size_;
  pillar_2d_size_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Point2f* OccupancyNetParkingMsg::_internal_mutable_pillar_2d_size() {
  
  if (pillar_2d_size_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Point2f>(GetArena());
    pillar_2d_size_ = p;
  }
  return pillar_2d_size_;
}
inline ::SRprotobuf::Point2f* OccupancyNetParkingMsg::mutable_pillar_2d_size() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.OccupancyNetParkingMsg.pillar_2d_size)
  return _internal_mutable_pillar_2d_size();
}
inline void OccupancyNetParkingMsg::set_allocated_pillar_2d_size(::SRprotobuf::Point2f* pillar_2d_size) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(pillar_2d_size_);
  }
  if (pillar_2d_size) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(pillar_2d_size)->GetArena();
    if (message_arena != submessage_arena) {
      pillar_2d_size = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pillar_2d_size, submessage_arena);
    }
    
  } else {
    
  }
  pillar_2d_size_ = pillar_2d_size;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.OccupancyNetParkingMsg.pillar_2d_size)
}

// repeated .SRprotobuf.BevPillar bev_pillar = 2;
inline int OccupancyNetParkingMsg::_internal_bev_pillar_size() const {
  return bev_pillar_.size();
}
inline int OccupancyNetParkingMsg::bev_pillar_size() const {
  return _internal_bev_pillar_size();
}
inline void OccupancyNetParkingMsg::clear_bev_pillar() {
  bev_pillar_.Clear();
}
inline ::SRprotobuf::BevPillar* OccupancyNetParkingMsg::mutable_bev_pillar(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.OccupancyNetParkingMsg.bev_pillar)
  return bev_pillar_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::BevPillar >*
OccupancyNetParkingMsg::mutable_bev_pillar() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.OccupancyNetParkingMsg.bev_pillar)
  return &bev_pillar_;
}
inline const ::SRprotobuf::BevPillar& OccupancyNetParkingMsg::_internal_bev_pillar(int index) const {
  return bev_pillar_.Get(index);
}
inline const ::SRprotobuf::BevPillar& OccupancyNetParkingMsg::bev_pillar(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.OccupancyNetParkingMsg.bev_pillar)
  return _internal_bev_pillar(index);
}
inline ::SRprotobuf::BevPillar* OccupancyNetParkingMsg::_internal_add_bev_pillar() {
  return bev_pillar_.Add();
}
inline ::SRprotobuf::BevPillar* OccupancyNetParkingMsg::add_bev_pillar() {
  // @@protoc_insertion_point(field_add:SRprotobuf.OccupancyNetParkingMsg.bev_pillar)
  return _internal_add_bev_pillar();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::BevPillar >&
OccupancyNetParkingMsg::bev_pillar() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.OccupancyNetParkingMsg.bev_pillar)
  return bev_pillar_;
}

// -------------------------------------------------------------------

// ApDrivingData

// .SRprotobuf.Location location = 1;
inline bool ApDrivingData::_internal_has_location() const {
  return this != internal_default_instance() && location_ != nullptr;
}
inline bool ApDrivingData::has_location() const {
  return _internal_has_location();
}
inline const ::SRprotobuf::Location& ApDrivingData::_internal_location() const {
  const ::SRprotobuf::Location* p = location_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::Location*>(
      &::SRprotobuf::_Location_default_instance_);
}
inline const ::SRprotobuf::Location& ApDrivingData::location() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.location)
  return _internal_location();
}
inline void ApDrivingData::unsafe_arena_set_allocated_location(
    ::SRprotobuf::Location* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDrivingData.location)
}
inline ::SRprotobuf::Location* ApDrivingData::release_location() {
  auto temp = unsafe_arena_release_location();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::Location* ApDrivingData::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDrivingData.location)
  
  ::SRprotobuf::Location* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::SRprotobuf::Location* ApDrivingData::_internal_mutable_location() {
  
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::Location>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::SRprotobuf::Location* ApDrivingData::mutable_location() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.location)
  return _internal_mutable_location();
}
inline void ApDrivingData::set_allocated_location(::SRprotobuf::Location* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location)->GetArena();
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDrivingData.location)
}

// repeated .SRprotobuf.Slot slot = 2;
inline int ApDrivingData::_internal_slot_size() const {
  return slot_.size();
}
inline int ApDrivingData::slot_size() const {
  return _internal_slot_size();
}
inline ::SRprotobuf::Slot* ApDrivingData::mutable_slot(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.slot)
  return slot_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >*
ApDrivingData::mutable_slot() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.slot)
  return &slot_;
}
inline const ::SRprotobuf::Slot& ApDrivingData::_internal_slot(int index) const {
  return slot_.Get(index);
}
inline const ::SRprotobuf::Slot& ApDrivingData::slot(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.slot)
  return _internal_slot(index);
}
inline ::SRprotobuf::Slot* ApDrivingData::_internal_add_slot() {
  return slot_.Add();
}
inline ::SRprotobuf::Slot* ApDrivingData::add_slot() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.slot)
  return _internal_add_slot();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >&
ApDrivingData::slot() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.slot)
  return slot_;
}

// repeated .SRprotobuf.StripObstacle obj = 3;
inline int ApDrivingData::_internal_obj_size() const {
  return obj_.size();
}
inline int ApDrivingData::obj_size() const {
  return _internal_obj_size();
}
inline void ApDrivingData::clear_obj() {
  obj_.Clear();
}
inline ::SRprotobuf::StripObstacle* ApDrivingData::mutable_obj(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.obj)
  return obj_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::StripObstacle >*
ApDrivingData::mutable_obj() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.obj)
  return &obj_;
}
inline const ::SRprotobuf::StripObstacle& ApDrivingData::_internal_obj(int index) const {
  return obj_.Get(index);
}
inline const ::SRprotobuf::StripObstacle& ApDrivingData::obj(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.obj)
  return _internal_obj(index);
}
inline ::SRprotobuf::StripObstacle* ApDrivingData::_internal_add_obj() {
  return obj_.Add();
}
inline ::SRprotobuf::StripObstacle* ApDrivingData::add_obj() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.obj)
  return _internal_add_obj();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::StripObstacle >&
ApDrivingData::obj() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.obj)
  return obj_;
}

// repeated .SRprotobuf.ApLaneLineInfo lanelines = 4;
inline int ApDrivingData::_internal_lanelines_size() const {
  return lanelines_.size();
}
inline int ApDrivingData::lanelines_size() const {
  return _internal_lanelines_size();
}
inline void ApDrivingData::clear_lanelines() {
  lanelines_.Clear();
}
inline ::SRprotobuf::ApLaneLineInfo* ApDrivingData::mutable_lanelines(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.lanelines)
  return lanelines_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApLaneLineInfo >*
ApDrivingData::mutable_lanelines() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.lanelines)
  return &lanelines_;
}
inline const ::SRprotobuf::ApLaneLineInfo& ApDrivingData::_internal_lanelines(int index) const {
  return lanelines_.Get(index);
}
inline const ::SRprotobuf::ApLaneLineInfo& ApDrivingData::lanelines(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.lanelines)
  return _internal_lanelines(index);
}
inline ::SRprotobuf::ApLaneLineInfo* ApDrivingData::_internal_add_lanelines() {
  return lanelines_.Add();
}
inline ::SRprotobuf::ApLaneLineInfo* ApDrivingData::add_lanelines() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.lanelines)
  return _internal_add_lanelines();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApLaneLineInfo >&
ApDrivingData::lanelines() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.lanelines)
  return lanelines_;
}

// repeated int32 curFloor = 5;
inline int ApDrivingData::_internal_curfloor_size() const {
  return curfloor_.size();
}
inline int ApDrivingData::curfloor_size() const {
  return _internal_curfloor_size();
}
inline void ApDrivingData::clear_curfloor() {
  curfloor_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApDrivingData::_internal_curfloor(int index) const {
  return curfloor_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApDrivingData::curfloor(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.curFloor)
  return _internal_curfloor(index);
}
inline void ApDrivingData::set_curfloor(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  curfloor_.Set(index, value);
  // @@protoc_insertion_point(field_set:SRprotobuf.ApDrivingData.curFloor)
}
inline void ApDrivingData::_internal_add_curfloor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  curfloor_.Add(value);
}
inline void ApDrivingData::add_curfloor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_curfloor(value);
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.curFloor)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ApDrivingData::_internal_curfloor() const {
  return curfloor_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ApDrivingData::curfloor() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.curFloor)
  return _internal_curfloor();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ApDrivingData::_internal_mutable_curfloor() {
  return &curfloor_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ApDrivingData::mutable_curfloor() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.curFloor)
  return _internal_mutable_curfloor();
}

// repeated .SRprotobuf.ApTrajectoryDataType Trajectory = 6;
inline int ApDrivingData::_internal_trajectory_size() const {
  return trajectory_.size();
}
inline int ApDrivingData::trajectory_size() const {
  return _internal_trajectory_size();
}
inline void ApDrivingData::clear_trajectory() {
  trajectory_.Clear();
}
inline ::SRprotobuf::ApTrajectoryDataType* ApDrivingData::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.Trajectory)
  return trajectory_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApTrajectoryDataType >*
ApDrivingData::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.Trajectory)
  return &trajectory_;
}
inline const ::SRprotobuf::ApTrajectoryDataType& ApDrivingData::_internal_trajectory(int index) const {
  return trajectory_.Get(index);
}
inline const ::SRprotobuf::ApTrajectoryDataType& ApDrivingData::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.Trajectory)
  return _internal_trajectory(index);
}
inline ::SRprotobuf::ApTrajectoryDataType* ApDrivingData::_internal_add_trajectory() {
  return trajectory_.Add();
}
inline ::SRprotobuf::ApTrajectoryDataType* ApDrivingData::add_trajectory() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.Trajectory)
  return _internal_add_trajectory();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApTrajectoryDataType >&
ApDrivingData::trajectory() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.Trajectory)
  return trajectory_;
}

// repeated .SRprotobuf.ApDynaObject dynObj = 7;
inline int ApDrivingData::_internal_dynobj_size() const {
  return dynobj_.size();
}
inline int ApDrivingData::dynobj_size() const {
  return _internal_dynobj_size();
}
inline void ApDrivingData::clear_dynobj() {
  dynobj_.Clear();
}
inline ::SRprotobuf::ApDynaObject* ApDrivingData::mutable_dynobj(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.dynObj)
  return dynobj_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApDynaObject >*
ApDrivingData::mutable_dynobj() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.dynObj)
  return &dynobj_;
}
inline const ::SRprotobuf::ApDynaObject& ApDrivingData::_internal_dynobj(int index) const {
  return dynobj_.Get(index);
}
inline const ::SRprotobuf::ApDynaObject& ApDrivingData::dynobj(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.dynObj)
  return _internal_dynobj(index);
}
inline ::SRprotobuf::ApDynaObject* ApDrivingData::_internal_add_dynobj() {
  return dynobj_.Add();
}
inline ::SRprotobuf::ApDynaObject* ApDrivingData::add_dynobj() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.dynObj)
  return _internal_add_dynobj();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::ApDynaObject >&
ApDrivingData::dynobj() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.dynObj)
  return dynobj_;
}

// .SRprotobuf.ApEssentialMsg essentialMsg = 8;
inline bool ApDrivingData::_internal_has_essentialmsg() const {
  return this != internal_default_instance() && essentialmsg_ != nullptr;
}
inline bool ApDrivingData::has_essentialmsg() const {
  return _internal_has_essentialmsg();
}
inline void ApDrivingData::clear_essentialmsg() {
  if (GetArena() == nullptr && essentialmsg_ != nullptr) {
    delete essentialmsg_;
  }
  essentialmsg_ = nullptr;
}
inline const ::SRprotobuf::ApEssentialMsg& ApDrivingData::_internal_essentialmsg() const {
  const ::SRprotobuf::ApEssentialMsg* p = essentialmsg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::ApEssentialMsg*>(
      &::SRprotobuf::_ApEssentialMsg_default_instance_);
}
inline const ::SRprotobuf::ApEssentialMsg& ApDrivingData::essentialmsg() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.essentialMsg)
  return _internal_essentialmsg();
}
inline void ApDrivingData::unsafe_arena_set_allocated_essentialmsg(
    ::SRprotobuf::ApEssentialMsg* essentialmsg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(essentialmsg_);
  }
  essentialmsg_ = essentialmsg;
  if (essentialmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDrivingData.essentialMsg)
}
inline ::SRprotobuf::ApEssentialMsg* ApDrivingData::release_essentialmsg() {
  auto temp = unsafe_arena_release_essentialmsg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::ApEssentialMsg* ApDrivingData::unsafe_arena_release_essentialmsg() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDrivingData.essentialMsg)
  
  ::SRprotobuf::ApEssentialMsg* temp = essentialmsg_;
  essentialmsg_ = nullptr;
  return temp;
}
inline ::SRprotobuf::ApEssentialMsg* ApDrivingData::_internal_mutable_essentialmsg() {
  
  if (essentialmsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::ApEssentialMsg>(GetArena());
    essentialmsg_ = p;
  }
  return essentialmsg_;
}
inline ::SRprotobuf::ApEssentialMsg* ApDrivingData::mutable_essentialmsg() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.essentialMsg)
  return _internal_mutable_essentialmsg();
}
inline void ApDrivingData::set_allocated_essentialmsg(::SRprotobuf::ApEssentialMsg* essentialmsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete essentialmsg_;
  }
  if (essentialmsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(essentialmsg);
    if (message_arena != submessage_arena) {
      essentialmsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, essentialmsg, submessage_arena);
    }
    
  } else {
    
  }
  essentialmsg_ = essentialmsg;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDrivingData.essentialMsg)
}

// repeated .SRprotobuf.Slot slotAvm = 9;
inline int ApDrivingData::_internal_slotavm_size() const {
  return slotavm_.size();
}
inline int ApDrivingData::slotavm_size() const {
  return _internal_slotavm_size();
}
inline ::SRprotobuf::Slot* ApDrivingData::mutable_slotavm(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.slotAvm)
  return slotavm_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >*
ApDrivingData::mutable_slotavm() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.slotAvm)
  return &slotavm_;
}
inline const ::SRprotobuf::Slot& ApDrivingData::_internal_slotavm(int index) const {
  return slotavm_.Get(index);
}
inline const ::SRprotobuf::Slot& ApDrivingData::slotavm(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.slotAvm)
  return _internal_slotavm(index);
}
inline ::SRprotobuf::Slot* ApDrivingData::_internal_add_slotavm() {
  return slotavm_.Add();
}
inline ::SRprotobuf::Slot* ApDrivingData::add_slotavm() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.slotAvm)
  return _internal_add_slotavm();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Slot >&
ApDrivingData::slotavm() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.slotAvm)
  return slotavm_;
}

// repeated .SRprotobuf.TrainingSpdBump spdBump = 10;
inline int ApDrivingData::_internal_spdbump_size() const {
  return spdbump_.size();
}
inline int ApDrivingData::spdbump_size() const {
  return _internal_spdbump_size();
}
inline void ApDrivingData::clear_spdbump() {
  spdbump_.Clear();
}
inline ::SRprotobuf::TrainingSpdBump* ApDrivingData::mutable_spdbump(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.spdBump)
  return spdbump_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::TrainingSpdBump >*
ApDrivingData::mutable_spdbump() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.spdBump)
  return &spdbump_;
}
inline const ::SRprotobuf::TrainingSpdBump& ApDrivingData::_internal_spdbump(int index) const {
  return spdbump_.Get(index);
}
inline const ::SRprotobuf::TrainingSpdBump& ApDrivingData::spdbump(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.spdBump)
  return _internal_spdbump(index);
}
inline ::SRprotobuf::TrainingSpdBump* ApDrivingData::_internal_add_spdbump() {
  return spdbump_.Add();
}
inline ::SRprotobuf::TrainingSpdBump* ApDrivingData::add_spdbump() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.spdBump)
  return _internal_add_spdbump();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::TrainingSpdBump >&
ApDrivingData::spdbump() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.spdBump)
  return spdbump_;
}

// repeated .SRprotobuf.SlotIdMapping slotIdMapping = 11;
inline int ApDrivingData::_internal_slotidmapping_size() const {
  return slotidmapping_.size();
}
inline int ApDrivingData::slotidmapping_size() const {
  return _internal_slotidmapping_size();
}
inline void ApDrivingData::clear_slotidmapping() {
  slotidmapping_.Clear();
}
inline ::SRprotobuf::SlotIdMapping* ApDrivingData::mutable_slotidmapping(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.slotIdMapping)
  return slotidmapping_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::SlotIdMapping >*
ApDrivingData::mutable_slotidmapping() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.slotIdMapping)
  return &slotidmapping_;
}
inline const ::SRprotobuf::SlotIdMapping& ApDrivingData::_internal_slotidmapping(int index) const {
  return slotidmapping_.Get(index);
}
inline const ::SRprotobuf::SlotIdMapping& ApDrivingData::slotidmapping(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.slotIdMapping)
  return _internal_slotidmapping(index);
}
inline ::SRprotobuf::SlotIdMapping* ApDrivingData::_internal_add_slotidmapping() {
  return slotidmapping_.Add();
}
inline ::SRprotobuf::SlotIdMapping* ApDrivingData::add_slotidmapping() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.slotIdMapping)
  return _internal_add_slotidmapping();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::SlotIdMapping >&
ApDrivingData::slotidmapping() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.slotIdMapping)
  return slotidmapping_;
}

// repeated .SRprotobuf.Ap_StaticObject ap_StaticObject = 12;
inline int ApDrivingData::_internal_ap_staticobject_size() const {
  return ap_staticobject_.size();
}
inline int ApDrivingData::ap_staticobject_size() const {
  return _internal_ap_staticobject_size();
}
inline void ApDrivingData::clear_ap_staticobject() {
  ap_staticobject_.Clear();
}
inline ::SRprotobuf::Ap_StaticObject* ApDrivingData::mutable_ap_staticobject(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.ap_StaticObject)
  return ap_staticobject_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObject >*
ApDrivingData::mutable_ap_staticobject() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.ap_StaticObject)
  return &ap_staticobject_;
}
inline const ::SRprotobuf::Ap_StaticObject& ApDrivingData::_internal_ap_staticobject(int index) const {
  return ap_staticobject_.Get(index);
}
inline const ::SRprotobuf::Ap_StaticObject& ApDrivingData::ap_staticobject(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.ap_StaticObject)
  return _internal_ap_staticobject(index);
}
inline ::SRprotobuf::Ap_StaticObject* ApDrivingData::_internal_add_ap_staticobject() {
  return ap_staticobject_.Add();
}
inline ::SRprotobuf::Ap_StaticObject* ApDrivingData::add_ap_staticobject() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.ap_StaticObject)
  return _internal_add_ap_staticobject();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Ap_StaticObject >&
ApDrivingData::ap_staticobject() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.ap_StaticObject)
  return ap_staticobject_;
}

// .SRprotobuf.ApNaviMsg naviMsg = 13;
inline bool ApDrivingData::_internal_has_navimsg() const {
  return this != internal_default_instance() && navimsg_ != nullptr;
}
inline bool ApDrivingData::has_navimsg() const {
  return _internal_has_navimsg();
}
inline void ApDrivingData::clear_navimsg() {
  if (GetArena() == nullptr && navimsg_ != nullptr) {
    delete navimsg_;
  }
  navimsg_ = nullptr;
}
inline const ::SRprotobuf::ApNaviMsg& ApDrivingData::_internal_navimsg() const {
  const ::SRprotobuf::ApNaviMsg* p = navimsg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::ApNaviMsg*>(
      &::SRprotobuf::_ApNaviMsg_default_instance_);
}
inline const ::SRprotobuf::ApNaviMsg& ApDrivingData::navimsg() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.naviMsg)
  return _internal_navimsg();
}
inline void ApDrivingData::unsafe_arena_set_allocated_navimsg(
    ::SRprotobuf::ApNaviMsg* navimsg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(navimsg_);
  }
  navimsg_ = navimsg;
  if (navimsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDrivingData.naviMsg)
}
inline ::SRprotobuf::ApNaviMsg* ApDrivingData::release_navimsg() {
  auto temp = unsafe_arena_release_navimsg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::ApNaviMsg* ApDrivingData::unsafe_arena_release_navimsg() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDrivingData.naviMsg)
  
  ::SRprotobuf::ApNaviMsg* temp = navimsg_;
  navimsg_ = nullptr;
  return temp;
}
inline ::SRprotobuf::ApNaviMsg* ApDrivingData::_internal_mutable_navimsg() {
  
  if (navimsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::ApNaviMsg>(GetArena());
    navimsg_ = p;
  }
  return navimsg_;
}
inline ::SRprotobuf::ApNaviMsg* ApDrivingData::mutable_navimsg() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.naviMsg)
  return _internal_mutable_navimsg();
}
inline void ApDrivingData::set_allocated_navimsg(::SRprotobuf::ApNaviMsg* navimsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete navimsg_;
  }
  if (navimsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(navimsg);
    if (message_arena != submessage_arena) {
      navimsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, navimsg, submessage_arena);
    }
    
  } else {
    
  }
  navimsg_ = navimsg;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDrivingData.naviMsg)
}

// .SRprotobuf.OnlineLocalMapMsg online_local_map_msg = 14;
inline bool ApDrivingData::_internal_has_online_local_map_msg() const {
  return this != internal_default_instance() && online_local_map_msg_ != nullptr;
}
inline bool ApDrivingData::has_online_local_map_msg() const {
  return _internal_has_online_local_map_msg();
}
inline const ::SRprotobuf::OnlineLocalMapMsg& ApDrivingData::_internal_online_local_map_msg() const {
  const ::SRprotobuf::OnlineLocalMapMsg* p = online_local_map_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::OnlineLocalMapMsg*>(
      &::SRprotobuf::_OnlineLocalMapMsg_default_instance_);
}
inline const ::SRprotobuf::OnlineLocalMapMsg& ApDrivingData::online_local_map_msg() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.online_local_map_msg)
  return _internal_online_local_map_msg();
}
inline void ApDrivingData::unsafe_arena_set_allocated_online_local_map_msg(
    ::SRprotobuf::OnlineLocalMapMsg* online_local_map_msg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(online_local_map_msg_);
  }
  online_local_map_msg_ = online_local_map_msg;
  if (online_local_map_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDrivingData.online_local_map_msg)
}
inline ::SRprotobuf::OnlineLocalMapMsg* ApDrivingData::release_online_local_map_msg() {
  auto temp = unsafe_arena_release_online_local_map_msg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::OnlineLocalMapMsg* ApDrivingData::unsafe_arena_release_online_local_map_msg() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDrivingData.online_local_map_msg)
  
  ::SRprotobuf::OnlineLocalMapMsg* temp = online_local_map_msg_;
  online_local_map_msg_ = nullptr;
  return temp;
}
inline ::SRprotobuf::OnlineLocalMapMsg* ApDrivingData::_internal_mutable_online_local_map_msg() {
  
  if (online_local_map_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::OnlineLocalMapMsg>(GetArena());
    online_local_map_msg_ = p;
  }
  return online_local_map_msg_;
}
inline ::SRprotobuf::OnlineLocalMapMsg* ApDrivingData::mutable_online_local_map_msg() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.online_local_map_msg)
  return _internal_mutable_online_local_map_msg();
}
inline void ApDrivingData::set_allocated_online_local_map_msg(::SRprotobuf::OnlineLocalMapMsg* online_local_map_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(online_local_map_msg_);
  }
  if (online_local_map_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(online_local_map_msg)->GetArena();
    if (message_arena != submessage_arena) {
      online_local_map_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, online_local_map_msg, submessage_arena);
    }
    
  } else {
    
  }
  online_local_map_msg_ = online_local_map_msg;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDrivingData.online_local_map_msg)
}

// repeated .SRprotobuf.Wall wall = 15;
inline int ApDrivingData::_internal_wall_size() const {
  return wall_.size();
}
inline int ApDrivingData::wall_size() const {
  return _internal_wall_size();
}
inline void ApDrivingData::clear_wall() {
  wall_.Clear();
}
inline ::SRprotobuf::Wall* ApDrivingData::mutable_wall(int index) {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.wall)
  return wall_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Wall >*
ApDrivingData::mutable_wall() {
  // @@protoc_insertion_point(field_mutable_list:SRprotobuf.ApDrivingData.wall)
  return &wall_;
}
inline const ::SRprotobuf::Wall& ApDrivingData::_internal_wall(int index) const {
  return wall_.Get(index);
}
inline const ::SRprotobuf::Wall& ApDrivingData::wall(int index) const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.wall)
  return _internal_wall(index);
}
inline ::SRprotobuf::Wall* ApDrivingData::_internal_add_wall() {
  return wall_.Add();
}
inline ::SRprotobuf::Wall* ApDrivingData::add_wall() {
  // @@protoc_insertion_point(field_add:SRprotobuf.ApDrivingData.wall)
  return _internal_add_wall();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SRprotobuf::Wall >&
ApDrivingData::wall() const {
  // @@protoc_insertion_point(field_list:SRprotobuf.ApDrivingData.wall)
  return wall_;
}

// .SRprotobuf.OccupancyNetParkingMsg occupancy_net_parking_msg = 16;
inline bool ApDrivingData::_internal_has_occupancy_net_parking_msg() const {
  return this != internal_default_instance() && occupancy_net_parking_msg_ != nullptr;
}
inline bool ApDrivingData::has_occupancy_net_parking_msg() const {
  return _internal_has_occupancy_net_parking_msg();
}
inline void ApDrivingData::clear_occupancy_net_parking_msg() {
  if (GetArena() == nullptr && occupancy_net_parking_msg_ != nullptr) {
    delete occupancy_net_parking_msg_;
  }
  occupancy_net_parking_msg_ = nullptr;
}
inline const ::SRprotobuf::OccupancyNetParkingMsg& ApDrivingData::_internal_occupancy_net_parking_msg() const {
  const ::SRprotobuf::OccupancyNetParkingMsg* p = occupancy_net_parking_msg_;
  return p != nullptr ? *p : *reinterpret_cast<const ::SRprotobuf::OccupancyNetParkingMsg*>(
      &::SRprotobuf::_OccupancyNetParkingMsg_default_instance_);
}
inline const ::SRprotobuf::OccupancyNetParkingMsg& ApDrivingData::occupancy_net_parking_msg() const {
  // @@protoc_insertion_point(field_get:SRprotobuf.ApDrivingData.occupancy_net_parking_msg)
  return _internal_occupancy_net_parking_msg();
}
inline void ApDrivingData::unsafe_arena_set_allocated_occupancy_net_parking_msg(
    ::SRprotobuf::OccupancyNetParkingMsg* occupancy_net_parking_msg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(occupancy_net_parking_msg_);
  }
  occupancy_net_parking_msg_ = occupancy_net_parking_msg;
  if (occupancy_net_parking_msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:SRprotobuf.ApDrivingData.occupancy_net_parking_msg)
}
inline ::SRprotobuf::OccupancyNetParkingMsg* ApDrivingData::release_occupancy_net_parking_msg() {
  auto temp = unsafe_arena_release_occupancy_net_parking_msg();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::SRprotobuf::OccupancyNetParkingMsg* ApDrivingData::unsafe_arena_release_occupancy_net_parking_msg() {
  // @@protoc_insertion_point(field_release:SRprotobuf.ApDrivingData.occupancy_net_parking_msg)
  
  ::SRprotobuf::OccupancyNetParkingMsg* temp = occupancy_net_parking_msg_;
  occupancy_net_parking_msg_ = nullptr;
  return temp;
}
inline ::SRprotobuf::OccupancyNetParkingMsg* ApDrivingData::_internal_mutable_occupancy_net_parking_msg() {
  
  if (occupancy_net_parking_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::SRprotobuf::OccupancyNetParkingMsg>(GetArena());
    occupancy_net_parking_msg_ = p;
  }
  return occupancy_net_parking_msg_;
}
inline ::SRprotobuf::OccupancyNetParkingMsg* ApDrivingData::mutable_occupancy_net_parking_msg() {
  // @@protoc_insertion_point(field_mutable:SRprotobuf.ApDrivingData.occupancy_net_parking_msg)
  return _internal_mutable_occupancy_net_parking_msg();
}
inline void ApDrivingData::set_allocated_occupancy_net_parking_msg(::SRprotobuf::OccupancyNetParkingMsg* occupancy_net_parking_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete occupancy_net_parking_msg_;
  }
  if (occupancy_net_parking_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(occupancy_net_parking_msg);
    if (message_arena != submessage_arena) {
      occupancy_net_parking_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, occupancy_net_parking_msg, submessage_arena);
    }
    
  } else {
    
  }
  occupancy_net_parking_msg_ = occupancy_net_parking_msg;
  // @@protoc_insertion_point(field_set_allocated:SRprotobuf.ApDrivingData.occupancy_net_parking_msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SRprotobuf

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::SRprotobuf::ApTrajectoryDataType_ApTrajType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SRprotobuf::ApTrajectoryDataType_ApTrajType>() {
  return ::SRprotobuf::ApTrajectoryDataType_ApTrajType_descriptor();
}
template <> struct is_proto_enum< ::SRprotobuf::ApObjectType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SRprotobuf::ApObjectType>() {
  return ::SRprotobuf::ApObjectType_descriptor();
}
template <> struct is_proto_enum< ::SRprotobuf::ApSignalLight> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SRprotobuf::ApSignalLight>() {
  return ::SRprotobuf::ApSignalLight_descriptor();
}
template <> struct is_proto_enum< ::SRprotobuf::ApBrakeLight> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SRprotobuf::ApBrakeLight>() {
  return ::SRprotobuf::ApBrakeLight_descriptor();
}
template <> struct is_proto_enum< ::SRprotobuf::AP_StaticObjectType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SRprotobuf::AP_StaticObjectType>() {
  return ::SRprotobuf::AP_StaticObjectType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_proto_5fap_2fWM_5fdisplay_5frealtime_2eproto
