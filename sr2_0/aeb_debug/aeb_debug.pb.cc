// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aeb_debug/aeb_debug.proto

#include "aeb_debug/aeb_debug.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_aeb_5fdebug_2faeb_5fdebug_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Objmonitor_aeb_5fdebug_2faeb_5fdebug_2eproto;
namespace xpilot {
namespace sr2_0 {
namespace proto {
class ObjmonitorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Objmonitor> _instance;
} _Objmonitor_default_instance_;
class ActiveSafetyDebugMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActiveSafetyDebugMsg> _instance;
} _ActiveSafetyDebugMsg_default_instance_;
}  // namespace proto
}  // namespace sr2_0
}  // namespace xpilot
static void InitDefaultsscc_info_ActiveSafetyDebugMsg_aeb_5fdebug_2faeb_5fdebug_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xpilot::sr2_0::proto::_ActiveSafetyDebugMsg_default_instance_;
    new (ptr) ::xpilot::sr2_0::proto::ActiveSafetyDebugMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xpilot::sr2_0::proto::ActiveSafetyDebugMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ActiveSafetyDebugMsg_aeb_5fdebug_2faeb_5fdebug_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ActiveSafetyDebugMsg_aeb_5fdebug_2faeb_5fdebug_2eproto}, {
      &scc_info_Objmonitor_aeb_5fdebug_2faeb_5fdebug_2eproto.base,}};

static void InitDefaultsscc_info_Objmonitor_aeb_5fdebug_2faeb_5fdebug_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xpilot::sr2_0::proto::_Objmonitor_default_instance_;
    new (ptr) ::xpilot::sr2_0::proto::Objmonitor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xpilot::sr2_0::proto::Objmonitor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Objmonitor_aeb_5fdebug_2faeb_5fdebug_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Objmonitor_aeb_5fdebug_2faeb_5fdebug_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_aeb_5fdebug_2faeb_5fdebug_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_aeb_5fdebug_2faeb_5fdebug_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_aeb_5fdebug_2faeb_5fdebug_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_aeb_5fdebug_2faeb_5fdebug_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, id_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, object_type_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, obj_dist_x_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, obj_dist_y_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, obj_relvel_x_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, obj_relvel_y_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, type_prob_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::Objmonitor, scenerio_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::ActiveSafetyDebugMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::ActiveSafetyDebugMsg, ttc_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::ActiveSafetyDebugMsg, obj_monitor_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::ActiveSafetyDebugMsg, scenerio_type_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xpilot::sr2_0::proto::Objmonitor)},
  { 13, -1, sizeof(::xpilot::sr2_0::proto::ActiveSafetyDebugMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::xpilot::sr2_0::proto::_Objmonitor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::xpilot::sr2_0::proto::_ActiveSafetyDebugMsg_default_instance_),
};

const char descriptor_table_protodef_aeb_5fdebug_2faeb_5fdebug_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031aeb_debug/aeb_debug.proto\022\022xpilot.sr2_"
  "0.proto\"\247\003\n\nObjmonitor\022\n\n\002id\030\001 \001(\r\022>\n\013ob"
  "ject_type\030\002 \001(\0162).xpilot.sr2_0.proto.Obj"
  "monitor.ObjectType\022\022\n\nobj_dist_x\030\003 \001(\002\022\022"
  "\n\nobj_dist_y\030\004 \001(\002\022\024\n\014obj_relvel_x\030\005 \001(\002"
  "\022\024\n\014obj_relvel_y\030\006 \001(\002\022\021\n\ttype_prob\030\007 \001("
  "\002\0227\n\rscenerio_type\030\010 \001(\0162 .xpilot.sr2_0."
  "proto.ScenerioType\"\254\001\n\nObjectType\022\013\n\007UNK"
  "NOWN\020\000\022\n\n\006PERSON\020\001\022\n\n\006ANIMAL\020\002\022\t\n\005SEDAN\020"
  "\003\022\007\n\003SUV\020\004\022\007\n\003VAN\020\005\022\013\n\007BICYCLE\020\006\022\014\n\010TRIC"
  "YCLE\020\007\022\016\n\nMOTORCYCLE\020\010\022\021\n\rTRAILER_TRUCK\020"
  "\t\022\t\n\005TRUCK\020\n\022\007\n\003BUS\020\013\022\n\n\006PICKUP\020\014\"o\n\024Act"
  "iveSafetyDebugMsg\022\013\n\003ttc\030\001 \001(\002\0223\n\013obj_mo"
  "nitor\030\002 \003(\0132\036.xpilot.sr2_0.proto.Objmoni"
  "tor\022\025\n\rscenerio_type\030\003 \001(\005*\307\004\n\014ScenerioT"
  "ype\022\016\n\nSCENE_NONE\020\000\022\016\n\nSCENE_CBNA\020\001\022\017\n\013S"
  "CENE_CBNAO\020\002\022\016\n\nSCENE_CBFA\020\003\022\016\n\nSCENE_CB"
  "LA\020\004\022\016\n\nSCENE_CPFA\020\005\022\016\n\nSCENE_CPNA\020\006\022\016\n\n"
  "SCENE_CPNC\020\007\022\016\n\nSCENE_CPLA\020\010\022\020\n\014SCENE_CP"
  "TA_F\020\t\022\020\n\014SCENE_CPTA_N\020\n\022\016\n\nSCENE_CCRs\020\013"
  "\022\016\n\nSCENE_CCRm\020\014\022\016\n\nSCENE_CCRb\020\r\022\020\n\014SCEN"
  "E_CCFtap\020\016\022\022\n\016SCENE_CCCscp_F\020\017\022\022\n\016SCENE_"
  "CCCscp_N\020\020\022\020\n\014SCENE_CCFhos\020\021\022\020\n\014SCENE_CC"
  "Fhol\020\022\022\026\n\022SCENE_CCRs_Lateral\020\023\022\016\n\nSCENE_"
  "CPRs\020\024\022\020\n\014SCENE_CPRm_F\020\025\022\020\n\014SCENE_CPRm_N"
  "\020\026\022\016\n\nSCENE_CBRs\020\027\022\020\n\014SCENE_CBRm_F\020\030\022\020\n\014"
  "SCENE_CBRm_N\020\031\022\020\n\014SCENE_CBTA_F\020\032\022\020\n\014SCEN"
  "E_CBTA_N\020\033\022\016\n\nSCENE_CMRs\020\034\022\016\n\nSCENE_CMRb"
  "\020\035\022\020\n\014SCENE_CMFtap\020\036\022\017\n\013SCENE_OTHER\020\037\022\r\n"
  "\tSCENE_NUM\020 b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto_sccs[2] = {
  &scc_info_ActiveSafetyDebugMsg_aeb_5fdebug_2faeb_5fdebug_2eproto.base,
  &scc_info_Objmonitor_aeb_5fdebug_2faeb_5fdebug_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto = {
  false, false, descriptor_table_protodef_aeb_5fdebug_2faeb_5fdebug_2eproto, "aeb_debug/aeb_debug.proto", 1180,
  &descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto_once, descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto_sccs, descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_aeb_5fdebug_2faeb_5fdebug_2eproto::offsets,
  file_level_metadata_aeb_5fdebug_2faeb_5fdebug_2eproto, 2, file_level_enum_descriptors_aeb_5fdebug_2faeb_5fdebug_2eproto, file_level_service_descriptors_aeb_5fdebug_2faeb_5fdebug_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_aeb_5fdebug_2faeb_5fdebug_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto)), true);
namespace xpilot {
namespace sr2_0 {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Objmonitor_ObjectType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto);
  return file_level_enum_descriptors_aeb_5fdebug_2faeb_5fdebug_2eproto[0];
}
bool Objmonitor_ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Objmonitor_ObjectType Objmonitor::UNKNOWN;
constexpr Objmonitor_ObjectType Objmonitor::PERSON;
constexpr Objmonitor_ObjectType Objmonitor::ANIMAL;
constexpr Objmonitor_ObjectType Objmonitor::SEDAN;
constexpr Objmonitor_ObjectType Objmonitor::SUV;
constexpr Objmonitor_ObjectType Objmonitor::VAN;
constexpr Objmonitor_ObjectType Objmonitor::BICYCLE;
constexpr Objmonitor_ObjectType Objmonitor::TRICYCLE;
constexpr Objmonitor_ObjectType Objmonitor::MOTORCYCLE;
constexpr Objmonitor_ObjectType Objmonitor::TRAILER_TRUCK;
constexpr Objmonitor_ObjectType Objmonitor::TRUCK;
constexpr Objmonitor_ObjectType Objmonitor::BUS;
constexpr Objmonitor_ObjectType Objmonitor::PICKUP;
constexpr Objmonitor_ObjectType Objmonitor::ObjectType_MIN;
constexpr Objmonitor_ObjectType Objmonitor::ObjectType_MAX;
constexpr int Objmonitor::ObjectType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ScenerioType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_aeb_5fdebug_2faeb_5fdebug_2eproto);
  return file_level_enum_descriptors_aeb_5fdebug_2faeb_5fdebug_2eproto[1];
}
bool ScenerioType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Objmonitor::InitAsDefaultInstance() {
}
class Objmonitor::_Internal {
 public:
};

Objmonitor::Objmonitor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xpilot.sr2_0.proto.Objmonitor)
}
Objmonitor::Objmonitor(const Objmonitor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scenerio_type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(scenerio_type_));
  // @@protoc_insertion_point(copy_constructor:xpilot.sr2_0.proto.Objmonitor)
}

void Objmonitor::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scenerio_type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(scenerio_type_));
}

Objmonitor::~Objmonitor() {
  // @@protoc_insertion_point(destructor:xpilot.sr2_0.proto.Objmonitor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Objmonitor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Objmonitor::ArenaDtor(void* object) {
  Objmonitor* _this = reinterpret_cast< Objmonitor* >(object);
  (void)_this;
}
void Objmonitor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Objmonitor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Objmonitor& Objmonitor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Objmonitor_aeb_5fdebug_2faeb_5fdebug_2eproto.base);
  return *internal_default_instance();
}


void Objmonitor::Clear() {
// @@protoc_insertion_point(message_clear_start:xpilot.sr2_0.proto.Objmonitor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scenerio_type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(scenerio_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Objmonitor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .xpilot.sr2_0.proto.Objmonitor.ObjectType object_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_object_type(static_cast<::xpilot::sr2_0::proto::Objmonitor_ObjectType>(val));
        } else goto handle_unusual;
        continue;
      // float obj_dist_x = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          obj_dist_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float obj_dist_y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          obj_dist_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float obj_relvel_x = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          obj_relvel_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float obj_relvel_y = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          obj_relvel_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float type_prob = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          type_prob_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .xpilot.sr2_0.proto.ScenerioType scenerio_type = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_scenerio_type(static_cast<::xpilot::sr2_0::proto::ScenerioType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Objmonitor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xpilot.sr2_0.proto.Objmonitor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // .xpilot.sr2_0.proto.Objmonitor.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_object_type(), target);
  }

  // float obj_dist_x = 3;
  if (!(this->obj_dist_x() <= 0 && this->obj_dist_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_obj_dist_x(), target);
  }

  // float obj_dist_y = 4;
  if (!(this->obj_dist_y() <= 0 && this->obj_dist_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_obj_dist_y(), target);
  }

  // float obj_relvel_x = 5;
  if (!(this->obj_relvel_x() <= 0 && this->obj_relvel_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_obj_relvel_x(), target);
  }

  // float obj_relvel_y = 6;
  if (!(this->obj_relvel_y() <= 0 && this->obj_relvel_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_obj_relvel_y(), target);
  }

  // float type_prob = 7;
  if (!(this->type_prob() <= 0 && this->type_prob() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_type_prob(), target);
  }

  // .xpilot.sr2_0.proto.ScenerioType scenerio_type = 8;
  if (this->scenerio_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_scenerio_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xpilot.sr2_0.proto.Objmonitor)
  return target;
}

size_t Objmonitor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xpilot.sr2_0.proto.Objmonitor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // .xpilot.sr2_0.proto.Objmonitor.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_object_type());
  }

  // float obj_dist_x = 3;
  if (!(this->obj_dist_x() <= 0 && this->obj_dist_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float obj_dist_y = 4;
  if (!(this->obj_dist_y() <= 0 && this->obj_dist_y() >= 0)) {
    total_size += 1 + 4;
  }

  // float obj_relvel_x = 5;
  if (!(this->obj_relvel_x() <= 0 && this->obj_relvel_x() >= 0)) {
    total_size += 1 + 4;
  }

  // float obj_relvel_y = 6;
  if (!(this->obj_relvel_y() <= 0 && this->obj_relvel_y() >= 0)) {
    total_size += 1 + 4;
  }

  // float type_prob = 7;
  if (!(this->type_prob() <= 0 && this->type_prob() >= 0)) {
    total_size += 1 + 4;
  }

  // .xpilot.sr2_0.proto.ScenerioType scenerio_type = 8;
  if (this->scenerio_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_scenerio_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Objmonitor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xpilot.sr2_0.proto.Objmonitor)
  GOOGLE_DCHECK_NE(&from, this);
  const Objmonitor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Objmonitor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xpilot.sr2_0.proto.Objmonitor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xpilot.sr2_0.proto.Objmonitor)
    MergeFrom(*source);
  }
}

void Objmonitor::MergeFrom(const Objmonitor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xpilot.sr2_0.proto.Objmonitor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.object_type() != 0) {
    _internal_set_object_type(from._internal_object_type());
  }
  if (!(from.obj_dist_x() <= 0 && from.obj_dist_x() >= 0)) {
    _internal_set_obj_dist_x(from._internal_obj_dist_x());
  }
  if (!(from.obj_dist_y() <= 0 && from.obj_dist_y() >= 0)) {
    _internal_set_obj_dist_y(from._internal_obj_dist_y());
  }
  if (!(from.obj_relvel_x() <= 0 && from.obj_relvel_x() >= 0)) {
    _internal_set_obj_relvel_x(from._internal_obj_relvel_x());
  }
  if (!(from.obj_relvel_y() <= 0 && from.obj_relvel_y() >= 0)) {
    _internal_set_obj_relvel_y(from._internal_obj_relvel_y());
  }
  if (!(from.type_prob() <= 0 && from.type_prob() >= 0)) {
    _internal_set_type_prob(from._internal_type_prob());
  }
  if (from.scenerio_type() != 0) {
    _internal_set_scenerio_type(from._internal_scenerio_type());
  }
}

void Objmonitor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xpilot.sr2_0.proto.Objmonitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Objmonitor::CopyFrom(const Objmonitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xpilot.sr2_0.proto.Objmonitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Objmonitor::IsInitialized() const {
  return true;
}

void Objmonitor::InternalSwap(Objmonitor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Objmonitor, scenerio_type_)
      + sizeof(Objmonitor::scenerio_type_)
      - PROTOBUF_FIELD_OFFSET(Objmonitor, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Objmonitor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ActiveSafetyDebugMsg::InitAsDefaultInstance() {
}
class ActiveSafetyDebugMsg::_Internal {
 public:
};

ActiveSafetyDebugMsg::ActiveSafetyDebugMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  obj_monitor_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
}
ActiveSafetyDebugMsg::ActiveSafetyDebugMsg(const ActiveSafetyDebugMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      obj_monitor_(from.obj_monitor_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ttc_, &from.ttc_,
    static_cast<size_t>(reinterpret_cast<char*>(&scenerio_type_) -
    reinterpret_cast<char*>(&ttc_)) + sizeof(scenerio_type_));
  // @@protoc_insertion_point(copy_constructor:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
}

void ActiveSafetyDebugMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActiveSafetyDebugMsg_aeb_5fdebug_2faeb_5fdebug_2eproto.base);
  ::memset(&ttc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scenerio_type_) -
      reinterpret_cast<char*>(&ttc_)) + sizeof(scenerio_type_));
}

ActiveSafetyDebugMsg::~ActiveSafetyDebugMsg() {
  // @@protoc_insertion_point(destructor:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActiveSafetyDebugMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ActiveSafetyDebugMsg::ArenaDtor(void* object) {
  ActiveSafetyDebugMsg* _this = reinterpret_cast< ActiveSafetyDebugMsg* >(object);
  (void)_this;
}
void ActiveSafetyDebugMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActiveSafetyDebugMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActiveSafetyDebugMsg& ActiveSafetyDebugMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActiveSafetyDebugMsg_aeb_5fdebug_2faeb_5fdebug_2eproto.base);
  return *internal_default_instance();
}


void ActiveSafetyDebugMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_monitor_.Clear();
  ::memset(&ttc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scenerio_type_) -
      reinterpret_cast<char*>(&ttc_)) + sizeof(scenerio_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActiveSafetyDebugMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float ttc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          ttc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .xpilot.sr2_0.proto.Objmonitor obj_monitor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_obj_monitor(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 scenerio_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          scenerio_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActiveSafetyDebugMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float ttc = 1;
  if (!(this->ttc() <= 0 && this->ttc() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_ttc(), target);
  }

  // repeated .xpilot.sr2_0.proto.Objmonitor obj_monitor = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_obj_monitor_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_obj_monitor(i), target, stream);
  }

  // int32 scenerio_type = 3;
  if (this->scenerio_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_scenerio_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  return target;
}

size_t ActiveSafetyDebugMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .xpilot.sr2_0.proto.Objmonitor obj_monitor = 2;
  total_size += 1UL * this->_internal_obj_monitor_size();
  for (const auto& msg : this->obj_monitor_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // float ttc = 1;
  if (!(this->ttc() <= 0 && this->ttc() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 scenerio_type = 3;
  if (this->scenerio_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_scenerio_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActiveSafetyDebugMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ActiveSafetyDebugMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActiveSafetyDebugMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
    MergeFrom(*source);
  }
}

void ActiveSafetyDebugMsg::MergeFrom(const ActiveSafetyDebugMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_monitor_.MergeFrom(from.obj_monitor_);
  if (!(from.ttc() <= 0 && from.ttc() >= 0)) {
    _internal_set_ttc(from._internal_ttc());
  }
  if (from.scenerio_type() != 0) {
    _internal_set_scenerio_type(from._internal_scenerio_type());
  }
}

void ActiveSafetyDebugMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveSafetyDebugMsg::CopyFrom(const ActiveSafetyDebugMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xpilot.sr2_0.proto.ActiveSafetyDebugMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveSafetyDebugMsg::IsInitialized() const {
  return true;
}

void ActiveSafetyDebugMsg::InternalSwap(ActiveSafetyDebugMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_monitor_.InternalSwap(&other->obj_monitor_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActiveSafetyDebugMsg, scenerio_type_)
      + sizeof(ActiveSafetyDebugMsg::scenerio_type_)
      - PROTOBUF_FIELD_OFFSET(ActiveSafetyDebugMsg, ttc_)>(
          reinterpret_cast<char*>(&ttc_),
          reinterpret_cast<char*>(&other->ttc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActiveSafetyDebugMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace sr2_0
}  // namespace xpilot
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::xpilot::sr2_0::proto::Objmonitor* Arena::CreateMaybeMessage< ::xpilot::sr2_0::proto::Objmonitor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xpilot::sr2_0::proto::Objmonitor >(arena);
}
template<> PROTOBUF_NOINLINE ::xpilot::sr2_0::proto::ActiveSafetyDebugMsg* Arena::CreateMaybeMessage< ::xpilot::sr2_0::proto::ActiveSafetyDebugMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xpilot::sr2_0::proto::ActiveSafetyDebugMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
