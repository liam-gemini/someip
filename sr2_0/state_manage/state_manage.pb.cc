// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_manage/state_manage.proto

#include "state_manage/state_manage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace xpilot {
namespace sr2_0 {
namespace proto {
class StateManagementMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StateManagementMsg> _instance;
} _StateManagementMsg_default_instance_;
}  // namespace proto
}  // namespace sr2_0
}  // namespace xpilot
static void InitDefaultsscc_info_StateManagementMsg_state_5fmanage_2fstate_5fmanage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::xpilot::sr2_0::proto::_StateManagementMsg_default_instance_;
    new (ptr) ::xpilot::sr2_0::proto::StateManagementMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::xpilot::sr2_0::proto::StateManagementMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StateManagementMsg_state_5fmanage_2fstate_5fmanage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StateManagementMsg_state_5fmanage_2fstate_5fmanage_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_state_5fmanage_2fstate_5fmanage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_state_5fmanage_2fstate_5fmanage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_state_5fmanage_2fstate_5fmanage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_state_5fmanage_2fstate_5fmanage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_cruisevehspd_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_cruisevehspd_st_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_9_st_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_10_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_11_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_13_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_14_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_15_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_16_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_26_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_29_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_30_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_36_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, mfl_state_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, rdmodulecom_turnstate_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, model_mode_),
  PROTOBUF_FIELD_OFFSET(::xpilot::sr2_0::proto::StateManagementMsg, intersection_state_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::xpilot::sr2_0::proto::StateManagementMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::xpilot::sr2_0::proto::_StateManagementMsg_default_instance_),
};

const char descriptor_table_protodef_state_5fmanage_2fstate_5fmanage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037state_manage/state_manage.proto\022\022xpilo"
  "t.sr2_0.proto\"\203\004\n\022StateManagementMsg\022 \n\030"
  "rdmodulecom_CruiseVehSpd\030\001 \001(\005\022#\n\033rdmodu"
  "lecom_cruisevehSpd_st\030\002 \001(\002\022\030\n\020rdmodulec"
  "om_9_st\030\003 \001(\005\022\034\n\024rdmodulecom_10_state\030\004 "
  "\001(\005\022\034\n\024rdmodulecom_11_state\030\005 \001(\005\022\034\n\024rdm"
  "odulecom_13_state\030\006 \001(\005\022\034\n\024rdmodulecom_1"
  "4_state\030\007 \001(\005\022\034\n\024rdmodulecom_15_state\030\010 "
  "\001(\005\022\034\n\024rdmodulecom_16_state\030\t \001(\005\022\034\n\024rdm"
  "odulecom_26_state\030\n \001(\005\022\034\n\024rdmodulecom_2"
  "9_state\030\013 \001(\005\022\034\n\024rdmodulecom_30_state\030\014 "
  "\001(\005\022\034\n\024rdmodulecom_36_state\030\r \001(\005\022\021\n\tmfl"
  "_state\030\016 \001(\005\022\035\n\025rdmodulecom_turnstate\030\017 "
  "\001(\005\022\022\n\nmodel_mode\030\020 \001(\005\022\032\n\022intersection_"
  "state\030\021 \001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto_sccs[1] = {
  &scc_info_StateManagementMsg_state_5fmanage_2fstate_5fmanage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto = {
  false, false, descriptor_table_protodef_state_5fmanage_2fstate_5fmanage_2eproto, "state_manage/state_manage.proto", 579,
  &descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto_once, descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto_sccs, descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_state_5fmanage_2fstate_5fmanage_2eproto::offsets,
  file_level_metadata_state_5fmanage_2fstate_5fmanage_2eproto, 1, file_level_enum_descriptors_state_5fmanage_2fstate_5fmanage_2eproto, file_level_service_descriptors_state_5fmanage_2fstate_5fmanage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_state_5fmanage_2fstate_5fmanage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_state_5fmanage_2fstate_5fmanage_2eproto)), true);
namespace xpilot {
namespace sr2_0 {
namespace proto {

// ===================================================================

void StateManagementMsg::InitAsDefaultInstance() {
}
class StateManagementMsg::_Internal {
 public:
};

StateManagementMsg::StateManagementMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:xpilot.sr2_0.proto.StateManagementMsg)
}
StateManagementMsg::StateManagementMsg(const StateManagementMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rdmodulecom_cruisevehspd_, &from.rdmodulecom_cruisevehspd_,
    static_cast<size_t>(reinterpret_cast<char*>(&intersection_state_) -
    reinterpret_cast<char*>(&rdmodulecom_cruisevehspd_)) + sizeof(intersection_state_));
  // @@protoc_insertion_point(copy_constructor:xpilot.sr2_0.proto.StateManagementMsg)
}

void StateManagementMsg::SharedCtor() {
  ::memset(&rdmodulecom_cruisevehspd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intersection_state_) -
      reinterpret_cast<char*>(&rdmodulecom_cruisevehspd_)) + sizeof(intersection_state_));
}

StateManagementMsg::~StateManagementMsg() {
  // @@protoc_insertion_point(destructor:xpilot.sr2_0.proto.StateManagementMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StateManagementMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StateManagementMsg::ArenaDtor(void* object) {
  StateManagementMsg* _this = reinterpret_cast< StateManagementMsg* >(object);
  (void)_this;
}
void StateManagementMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StateManagementMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StateManagementMsg& StateManagementMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StateManagementMsg_state_5fmanage_2fstate_5fmanage_2eproto.base);
  return *internal_default_instance();
}


void StateManagementMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:xpilot.sr2_0.proto.StateManagementMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rdmodulecom_cruisevehspd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intersection_state_) -
      reinterpret_cast<char*>(&rdmodulecom_cruisevehspd_)) + sizeof(intersection_state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StateManagementMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rdmodulecom_CruiseVehSpd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rdmodulecom_cruisevehspd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float rdmodulecom_cruisevehSpd_st = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          rdmodulecom_cruisevehspd_st_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_9_st = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          rdmodulecom_9_st_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_10_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          rdmodulecom_10_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_11_state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          rdmodulecom_11_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_13_state = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          rdmodulecom_13_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_14_state = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          rdmodulecom_14_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_15_state = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          rdmodulecom_15_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_16_state = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          rdmodulecom_16_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_26_state = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          rdmodulecom_26_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_29_state = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          rdmodulecom_29_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_30_state = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          rdmodulecom_30_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_36_state = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          rdmodulecom_36_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 mfl_state = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          mfl_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rdmodulecom_turnstate = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          rdmodulecom_turnstate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 model_mode = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          model_mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 intersection_state = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          intersection_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StateManagementMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xpilot.sr2_0.proto.StateManagementMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rdmodulecom_CruiseVehSpd = 1;
  if (this->rdmodulecom_cruisevehspd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_rdmodulecom_cruisevehspd(), target);
  }

  // float rdmodulecom_cruisevehSpd_st = 2;
  if (!(this->rdmodulecom_cruisevehspd_st() <= 0 && this->rdmodulecom_cruisevehspd_st() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_rdmodulecom_cruisevehspd_st(), target);
  }

  // int32 rdmodulecom_9_st = 3;
  if (this->rdmodulecom_9_st() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_rdmodulecom_9_st(), target);
  }

  // int32 rdmodulecom_10_state = 4;
  if (this->rdmodulecom_10_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_rdmodulecom_10_state(), target);
  }

  // int32 rdmodulecom_11_state = 5;
  if (this->rdmodulecom_11_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_rdmodulecom_11_state(), target);
  }

  // int32 rdmodulecom_13_state = 6;
  if (this->rdmodulecom_13_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_rdmodulecom_13_state(), target);
  }

  // int32 rdmodulecom_14_state = 7;
  if (this->rdmodulecom_14_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_rdmodulecom_14_state(), target);
  }

  // int32 rdmodulecom_15_state = 8;
  if (this->rdmodulecom_15_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_rdmodulecom_15_state(), target);
  }

  // int32 rdmodulecom_16_state = 9;
  if (this->rdmodulecom_16_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_rdmodulecom_16_state(), target);
  }

  // int32 rdmodulecom_26_state = 10;
  if (this->rdmodulecom_26_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_rdmodulecom_26_state(), target);
  }

  // int32 rdmodulecom_29_state = 11;
  if (this->rdmodulecom_29_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_rdmodulecom_29_state(), target);
  }

  // int32 rdmodulecom_30_state = 12;
  if (this->rdmodulecom_30_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_rdmodulecom_30_state(), target);
  }

  // int32 rdmodulecom_36_state = 13;
  if (this->rdmodulecom_36_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_rdmodulecom_36_state(), target);
  }

  // int32 mfl_state = 14;
  if (this->mfl_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_mfl_state(), target);
  }

  // int32 rdmodulecom_turnstate = 15;
  if (this->rdmodulecom_turnstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_rdmodulecom_turnstate(), target);
  }

  // int32 model_mode = 16;
  if (this->model_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(16, this->_internal_model_mode(), target);
  }

  // int32 intersection_state = 17;
  if (this->intersection_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_intersection_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xpilot.sr2_0.proto.StateManagementMsg)
  return target;
}

size_t StateManagementMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xpilot.sr2_0.proto.StateManagementMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rdmodulecom_CruiseVehSpd = 1;
  if (this->rdmodulecom_cruisevehspd() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_cruisevehspd());
  }

  // float rdmodulecom_cruisevehSpd_st = 2;
  if (!(this->rdmodulecom_cruisevehspd_st() <= 0 && this->rdmodulecom_cruisevehspd_st() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 rdmodulecom_9_st = 3;
  if (this->rdmodulecom_9_st() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_9_st());
  }

  // int32 rdmodulecom_10_state = 4;
  if (this->rdmodulecom_10_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_10_state());
  }

  // int32 rdmodulecom_11_state = 5;
  if (this->rdmodulecom_11_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_11_state());
  }

  // int32 rdmodulecom_13_state = 6;
  if (this->rdmodulecom_13_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_13_state());
  }

  // int32 rdmodulecom_14_state = 7;
  if (this->rdmodulecom_14_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_14_state());
  }

  // int32 rdmodulecom_15_state = 8;
  if (this->rdmodulecom_15_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_15_state());
  }

  // int32 rdmodulecom_16_state = 9;
  if (this->rdmodulecom_16_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_16_state());
  }

  // int32 rdmodulecom_26_state = 10;
  if (this->rdmodulecom_26_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_26_state());
  }

  // int32 rdmodulecom_29_state = 11;
  if (this->rdmodulecom_29_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_29_state());
  }

  // int32 rdmodulecom_30_state = 12;
  if (this->rdmodulecom_30_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_30_state());
  }

  // int32 rdmodulecom_36_state = 13;
  if (this->rdmodulecom_36_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_36_state());
  }

  // int32 mfl_state = 14;
  if (this->mfl_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mfl_state());
  }

  // int32 rdmodulecom_turnstate = 15;
  if (this->rdmodulecom_turnstate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rdmodulecom_turnstate());
  }

  // int32 model_mode = 16;
  if (this->model_mode() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_model_mode());
  }

  // int32 intersection_state = 17;
  if (this->intersection_state() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_intersection_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StateManagementMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:xpilot.sr2_0.proto.StateManagementMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const StateManagementMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StateManagementMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:xpilot.sr2_0.proto.StateManagementMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:xpilot.sr2_0.proto.StateManagementMsg)
    MergeFrom(*source);
  }
}

void StateManagementMsg::MergeFrom(const StateManagementMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:xpilot.sr2_0.proto.StateManagementMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rdmodulecom_cruisevehspd() != 0) {
    _internal_set_rdmodulecom_cruisevehspd(from._internal_rdmodulecom_cruisevehspd());
  }
  if (!(from.rdmodulecom_cruisevehspd_st() <= 0 && from.rdmodulecom_cruisevehspd_st() >= 0)) {
    _internal_set_rdmodulecom_cruisevehspd_st(from._internal_rdmodulecom_cruisevehspd_st());
  }
  if (from.rdmodulecom_9_st() != 0) {
    _internal_set_rdmodulecom_9_st(from._internal_rdmodulecom_9_st());
  }
  if (from.rdmodulecom_10_state() != 0) {
    _internal_set_rdmodulecom_10_state(from._internal_rdmodulecom_10_state());
  }
  if (from.rdmodulecom_11_state() != 0) {
    _internal_set_rdmodulecom_11_state(from._internal_rdmodulecom_11_state());
  }
  if (from.rdmodulecom_13_state() != 0) {
    _internal_set_rdmodulecom_13_state(from._internal_rdmodulecom_13_state());
  }
  if (from.rdmodulecom_14_state() != 0) {
    _internal_set_rdmodulecom_14_state(from._internal_rdmodulecom_14_state());
  }
  if (from.rdmodulecom_15_state() != 0) {
    _internal_set_rdmodulecom_15_state(from._internal_rdmodulecom_15_state());
  }
  if (from.rdmodulecom_16_state() != 0) {
    _internal_set_rdmodulecom_16_state(from._internal_rdmodulecom_16_state());
  }
  if (from.rdmodulecom_26_state() != 0) {
    _internal_set_rdmodulecom_26_state(from._internal_rdmodulecom_26_state());
  }
  if (from.rdmodulecom_29_state() != 0) {
    _internal_set_rdmodulecom_29_state(from._internal_rdmodulecom_29_state());
  }
  if (from.rdmodulecom_30_state() != 0) {
    _internal_set_rdmodulecom_30_state(from._internal_rdmodulecom_30_state());
  }
  if (from.rdmodulecom_36_state() != 0) {
    _internal_set_rdmodulecom_36_state(from._internal_rdmodulecom_36_state());
  }
  if (from.mfl_state() != 0) {
    _internal_set_mfl_state(from._internal_mfl_state());
  }
  if (from.rdmodulecom_turnstate() != 0) {
    _internal_set_rdmodulecom_turnstate(from._internal_rdmodulecom_turnstate());
  }
  if (from.model_mode() != 0) {
    _internal_set_model_mode(from._internal_model_mode());
  }
  if (from.intersection_state() != 0) {
    _internal_set_intersection_state(from._internal_intersection_state());
  }
}

void StateManagementMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:xpilot.sr2_0.proto.StateManagementMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateManagementMsg::CopyFrom(const StateManagementMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xpilot.sr2_0.proto.StateManagementMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateManagementMsg::IsInitialized() const {
  return true;
}

void StateManagementMsg::InternalSwap(StateManagementMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateManagementMsg, intersection_state_)
      + sizeof(StateManagementMsg::intersection_state_)
      - PROTOBUF_FIELD_OFFSET(StateManagementMsg, rdmodulecom_cruisevehspd_)>(
          reinterpret_cast<char*>(&rdmodulecom_cruisevehspd_),
          reinterpret_cast<char*>(&other->rdmodulecom_cruisevehspd_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StateManagementMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace sr2_0
}  // namespace xpilot
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::xpilot::sr2_0::proto::StateManagementMsg* Arena::CreateMaybeMessage< ::xpilot::sr2_0::proto::StateManagementMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xpilot::sr2_0::proto::StateManagementMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
